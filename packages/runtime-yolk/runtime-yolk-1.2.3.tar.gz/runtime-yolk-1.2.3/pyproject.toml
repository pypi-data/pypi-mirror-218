[build-system]
requires = ["setuptools", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "runtime-yolk"
version = "1.2.3"
requires-python = ">=3.8"
description = "This project aims to create a single library for run-time initiation tasks that are often duplicated across many projects."
readme = "README.md"
license = { file = "LICENSE" }
authors = [
    { email = "preocts@preocts.com", name = "Preocts" }
]
maintainers = []
keywords = []
classifiers = [
    "License :: OSI Approved :: MIT License",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3 :: Only",
    "Programming Language :: Python :: Implementation :: CPython"
]
dependencies = []

[project.optional-dependencies]
dev = [
    "pre-commit",
    "black",
    "mypy",
    "flake8",
    "flake8-builtins",
]
test = [
    "pytest",
    "pytest-randomly",
    "coverage",
    "tox"
]

[project.urls]
homepage = "https://github.com/Preocts/runtime-yolk"
# documentation = ""
# repository = ""
# changelog = ""

[tool.setuptools.package-data]
"runtime_yolk" = ["py.typed"]

[project.scripts]
yolk-env = "runtime_yolk.env_cli:main"

[tool.mypy]
check_untyped_defs = true
disallow_any_generics = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true

[[tool.mypy.overrides]]
module = "tests.*"
disallow_incomplete_defs = false
disallow_untyped_defs = false

[tool.coverage.run]
branch = true
source = [
    "tests",
]
source_pkgs = [
    "runtime_yolk",
]

[tool.coverage.paths]
source = [
    "src/",
    "*/site-packages",
]
test = [
    "tests/",
    "*/tests",
]

[tool.coverage.report]
exclude_lines =[
    "pragma: no cover",
    "raise AssertionError",
    "raise NotImplementedError",
    "if __name__ == .__main__.:",
    "\\.\\.\\.",
]

[tool.tox]
legacy_tox_ini = """
[tox]
envlist = py38,py39,py310,py311,py312,mypy,coverage
skip_missing_interpreters = true

[testenv]
deps = .[test]
commands =
    coverage run -p -m pytest tests/

[testenv:coverage]
commands =
    python -m coverage combine
    python -m coverage report -m --fail-under=50
    python -m coverage json

[testenv:mypy]
deps = mypy
commands = mypy -p runtime_yolk --no-incremental
"""
