name: Build and publish to TestPyPI or PyPI
on: [push, pull_request]

jobs:
  get_python_versions:
    name: "Determine Python versions"
    runs-on: ubuntu-latest
    outputs:
      min-python: ${{ steps.nep29.outputs.min-python }}
      max-python: ${{ steps.nep29.outputs.max-python }}
    steps:
      - name: "calculate versions according to NEP29"
        id: nep29
        uses: mstimberg/github-calc-nep29@v0.5
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

  build:
    needs: [get_python_versions]
    name: Build ðŸŽ¡ on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ windows-latest, macOS-latest ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        with:
          output-dir: dist
        env:
          CIBW_PROJECT_REQUIRES_PYTHON: ">=${{ needs.get_python_versions.outputs.min-python }}"
          CIBW_ARCHS_WINDOWS: auto64
          CIBW_ARCHS_MACOS: x86_64 universal2
          CIBW_TEST_SKIP: '*_arm64 *_universal2:arm64'
          CIBW_SKIP: 'pp*'
          CIBW_TEST_COMMAND: python {project}/dev/continuous-integration/run_simple_test.py
          CIBW_TEST_REQUIRES: pytest
      - name: store distribution ðŸ“¦
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: dist

  build-linux:
    needs: [get_python_versions]
    name: Build ${{ matrix.arch }} ðŸŽ¡ and source ðŸ“¦ on Linux
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        arch: [ auto64, aarch64 ]
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0
      - name: Set up Python 3.x
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Build source tarball
        run: |
          python -m pip install --upgrade pip build
          python -m pip install "cython>=0.29" oldest-supported-numpy "setuptools>=61" "setuptools_scm[toml]>=6.2"
          python -m build --sdist --config-setting=--formats=gztar --config-setting=--with-cython --config-setting=--fail-on-error
        if: ${{ matrix.arch == 'auto64' }}
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all
      - name: Build wheels
        uses: pypa/cibuildwheel@v2.12.1
        with:
          output-dir: dist
        env:
          CIBW_PROJECT_REQUIRES_PYTHON: ">=${{ needs.get_python_versions.outputs.min-python }}"
          CIBW_ARCHS_LINUX: ${{ matrix.arch }}
          CIBW_MANYLINUX_X86_64_IMAGE: manylinux2014
          CIBW_SKIP: 'pp* *-musllinux_aarch64'
          CIBW_TEST_COMMAND: python {project}/dev/continuous-integration/run_simple_test.py
          CIBW_TEST_REQUIRES: pytest
      - name: store distribution ðŸ“¦
        uses: actions/upload-artifact@v3
        with:
          name: packages
          path: dist

  deploy_dev:
    name: Publish development ðŸ“¦ to TestPyPI
    runs-on: ubuntu-latest
    if: github.repository == 'brian-team/brian2' && github.ref == 'refs/heads/master'
    environment: development_release
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    needs:
      - build
      - build-linux
    steps:
      - name: load distribution ðŸ“¦
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist/
      - name: Publish distribution ðŸ“¦ to Test PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
        with:
          repository-url: https://test.pypi.org/legacy/

  deploy:
    name: Publish release ðŸ“¦ to PyPI
    runs-on: ubuntu-latest
    if: github.repository == 'brian-team/brian2' && startsWith(github.ref, 'refs/tags')
    environment: release
    permissions:
      id-token: write  # IMPORTANT: mandatory for trusted publishing
    needs:
      - build
      - build-linux
    steps:
      - name: load distribution ðŸ“¦
        uses: actions/download-artifact@v3
        with:
          name: packages
          path: dist/
      - name: Publish distribution release ðŸ“¦ to PyPI
        uses: pypa/gh-action-pypi-publish@release/v1
