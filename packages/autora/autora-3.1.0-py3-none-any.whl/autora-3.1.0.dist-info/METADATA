Metadata-Version: 2.1
Name: autora
Version: 3.1.0
Summary: Autonomous Research Assistant (AutoRA) is a framework for automating steps of the empirical research process.
Author-email: Sebastian Musslick <sebastian@musslick.de>
Maintainer-email: Ben Andrew <benwallaceandrew@gmail.com>, George Dang <george_dang@brown.edu>, John Gerrard Holland <john_holland1@brown.edu>, Younes Strittmatter <younes_strittmatter@brown.edu>
License: Copyright 2021, Brown University, Providence, RI.
        
                                All Rights Reserved
        
        Permission to use, copy, modify, and distribute this software and
        its documentation for any purpose other than its incorporation into a
        commercial product or service is hereby granted without fee, provided
        that the above copyright notice appear in all copies and that both
        that copyright notice and this permission notice appear in supporting
        documentation, and that the name of Brown University not be used in
        advertising or publicity pertaining to distribution of the software
        without specific, written prior permission.
        
        BROWN UNIVERSITY DISCLAIMS ALL WARRANTIES WITH REGARD TO THIS SOFTWARE,
        INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR ANY
        PARTICULAR PURPOSE.  IN NO EVENT SHALL BROWN UNIVERSITY BE LIABLE FOR
        ANY SPECIAL, INDIRECT OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES
        WHATSOEVER RESULTING FROM LOSS OF USE, DATA OR PROFITS, WHETHER IN AN
        ACTION OF CONTRACT, NEGLIGENCE OR OTHER TORTIOUS ACTION, ARISING OUT OF
        OR IN CONNECTION WITH THE USE OR PERFORMANCE OF THIS SOFTWARE.
Project-URL: homepage, http://www.empiricalresearch.ai/
Project-URL: repository, https://github.com/AutoResearch/autora
Project-URL: documentation, https://autoresearch.github.io/autora/
Description-Content-Type: text/markdown
License-File: LICENSE.md
Requires-Dist: autora-core
Requires-Dist: autora-workflow
Requires-Dist: autora-synthetic
Provides-Extra: all
Requires-Dist: autora[all-theorists] ; extra == 'all'
Requires-Dist: autora[all-experimentalists] ; extra == 'all'
Requires-Dist: autora[all-experiment-runners] ; extra == 'all'
Provides-Extra: all-experiment-runner-experimentation-managers
Requires-Dist: autora[experiment-runner-experimentation-manager-firebase] ; extra == 'all-experiment-runner-experimentation-managers'
Provides-Extra: all-experiment-runner-recruitment-managers
Requires-Dist: autora[experiment-runner-recruitment-manager-prolific] ; extra == 'all-experiment-runner-recruitment-managers'
Provides-Extra: all-experiment-runners
Requires-Dist: autora[experiment-runner-firebase-prolific] ; extra == 'all-experiment-runners'
Provides-Extra: all-experimentalists
Requires-Dist: autora[experimentalist-sampler-inequality] ; extra == 'all-experimentalists'
Requires-Dist: autora[experimentalist-sampler-novelty] ; extra == 'all-experimentalists'
Requires-Dist: autora[experimentalist-sampler-nearest-value] ; extra == 'all-experimentalists'
Requires-Dist: autora[experimentalist-sampler-model-disagreement] ; extra == 'all-experimentalists'
Requires-Dist: autora[experimentalist-sampler-uncertainty] ; extra == 'all-experimentalists'
Requires-Dist: autora[experimentalist-falsification] ; extra == 'all-experimentalists'
Requires-Dist: autora[experimentalist-sampler-mixture] ; extra == 'all-experimentalists'
Provides-Extra: all-theorists
Requires-Dist: autora[theorist-darts] ; extra == 'all-theorists'
Requires-Dist: autora[theorist-bms] ; extra == 'all-theorists'
Requires-Dist: autora[theorist-bsr] ; extra == 'all-theorists'
Provides-Extra: dev
Requires-Dist: autora-core[dev] ; extra == 'dev'
Provides-Extra: docs
Requires-Dist: autora-core[docs] ; extra == 'docs'
Provides-Extra: experiment-runner-experimentation-manager-firebase
Requires-Dist: autora-experiment-runner-experimentation-manager-firebase ; extra == 'experiment-runner-experimentation-manager-firebase'
Provides-Extra: experiment-runner-firebase-prolific
Requires-Dist: autora-experiment-runner-firebase-prolific ; extra == 'experiment-runner-firebase-prolific'
Provides-Extra: experiment-runner-recruitment-manager-prolific
Requires-Dist: autora-experiment-runner-recruitment-manager-prolific ; extra == 'experiment-runner-recruitment-manager-prolific'
Provides-Extra: experimentalist-falsification
Requires-Dist: autora-experimentalist-falsification ; extra == 'experimentalist-falsification'
Provides-Extra: experimentalist-sampler-inequality
Requires-Dist: autora-experimentalist-sampler-inequality ; extra == 'experimentalist-sampler-inequality'
Provides-Extra: experimentalist-sampler-mixture
Requires-Dist: mixture-experimentalist (==1.0.0a4) ; extra == 'experimentalist-sampler-mixture'
Provides-Extra: experimentalist-sampler-model-disagreement
Requires-Dist: autora-experimentalist-sampler-model-disagreement ; extra == 'experimentalist-sampler-model-disagreement'
Provides-Extra: experimentalist-sampler-nearest-value
Requires-Dist: autora-experimentalist-sampler-nearest-value ; extra == 'experimentalist-sampler-nearest-value'
Provides-Extra: experimentalist-sampler-novelty
Requires-Dist: autora-experimentalist-sampler-novelty ; extra == 'experimentalist-sampler-novelty'
Provides-Extra: experimentalist-sampler-uncertainty
Requires-Dist: autora-experimentalist-sampler-uncertainty ; extra == 'experimentalist-sampler-uncertainty'
Provides-Extra: test
Requires-Dist: pytest ; extra == 'test'
Provides-Extra: theorist-bms
Requires-Dist: autora-theorist-bms ; extra == 'theorist-bms'
Provides-Extra: theorist-bsr
Requires-Dist: autora-theorist-bsr ; extra == 'theorist-bsr'
Provides-Extra: theorist-darts
Requires-Dist: autora-theorist-darts ; extra == 'theorist-darts'

# Automated Research Assistant

![PyPI](https://img.shields.io/pypi/v/autora)
![GitHub Workflow Status](https://img.shields.io/github/actions/workflow/status/autoresearch/autora/test-pytest.yml)
![PyPI - Downloads](https://img.shields.io/pypi/dm/autora)

<b>[AutoRA](https://pypi.org/project/autora/)</b> (<b>Auto</b>mated <b>R</b>esearch <b>A</b>ssistant) is an open-source framework for 
automating multiple stages of the empirical research process, including model discovery, experimental design, data collection, and documentation for open science. 

AutoRA was initially intended for accelerating research in the behavioral and brain sciences. However, AutoRA is designed as a general framework that enables automation of the research processes in other empirical sciences, such as material science or physics.

![Autonomous Empirical Research Paradigm](https://github.com/AutoResearch/autora/raw/main/docs/img/overview.png)

## Getting Started

Check out the documentation at 
[https://autoresearch.github.io/autora](https://autoresearch.github.io/autora).

## About

This project is in active development by 
the [Autonomous Empirical Research Group](http://empiricalresearch.ai), 
in collaboration with the [Center for Computation and Visualization at Brown University](https://ccv.brown.edu).

The development of this package is supported by Schmidt Science Fellows, in partnership with the Rhodes Trust, as well as the Carney BRAINSTORM program at Brown University.

## Read More

- [Package Documentation](https://autoresearch.github.io/autora/)
- [AutoRA Pip Package](https://pypi.org/project/autora/)
- [Autonomous Empirical Research Group](http://www.empiricalresearch.ai)

