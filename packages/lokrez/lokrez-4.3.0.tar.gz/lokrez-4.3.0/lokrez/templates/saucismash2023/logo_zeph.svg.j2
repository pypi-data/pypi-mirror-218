<svg
   version="1.1"
   id="svg32"
   width="1066.6667"
   height="1066.6667"
   viewBox="0 0 1066.6667 1066.6667"
   sodipodi:docname="Logo_zeph.svg"
   inkscape:version="1.2.2 (b0a8486541, 2022-12-01)"
   xmlns:inkscape="http://www.inkscape.org/namespaces/inkscape"
   xmlns:sodipodi="http://sodipodi.sourceforge.net/DTD/sodipodi-0.dtd"
   xmlns="http://www.w3.org/2000/svg"
   xmlns:svg="http://www.w3.org/2000/svg">
  <defs
     id="defs36">
    <linearGradient
       id="linearGradient15392"
       inkscape:swatch="solid">
      <stop
         style="stop-color:#a6a81b;stop-opacity:1;"
         offset="0"
         id="stop15390" />
    </linearGradient>
    <clipPath
       clipPathUnits="userSpaceOnUse"
       id="clipPath48">
      <path
         d="M 0,800 H 800 V 0 H 0 Z"
         id="path46" />
    </clipPath>
  </defs>
  <sodipodi:namedview
     id="namedview34"
     pagecolor="#505050"
     bordercolor="#eeeeee"
     borderopacity="1"
     inkscape:showpageshadow="0"
     inkscape:pageopacity="0"
     inkscape:pagecheckerboard="0"
     inkscape:deskcolor="#505050"
     showgrid="false"
     inkscape:zoom="0.63234634"
     inkscape:cx="571.68038"
     inkscape:cy="589.86662"
     inkscape:window-width="1920"
     inkscape:window-height="1011"
     inkscape:window-x="0"
     inkscape:window-y="0"
     inkscape:window-maximized="1"
     inkscape:current-layer="g40">
    <inkscape:page
       x="0"
       y="0"
       id="page38"
       width="1066.6667"
       height="1066.6667"
       inkscape:export-filename="Logo_zeph.png"
       inkscape:export-xdpi="96"
       inkscape:export-ydpi="96" />
  </sodipodi:namedview>
  <g
     id="g40"
     inkscape:groupmode="layer"
     inkscape:label="Page 1"
     transform="matrix(1.3333333,0,0,-1.3333333,0,1066.6667)">
    <g
       id="g42"
       transform="matrix(1.3999977,0,0,1.3999993,-178.91793,-287.67817)">
      <g
         id="g44"
         clip-path="url(#clipPath48)">
        <g
           id="g50"
           transform="translate(332.2146,397.2227)">
          <path
             d="M 0,0 C 6.888,0.209 7.215,43.213 -4.251,60.881 H -31.192 -57.4 C -48.57,41.696 -35.462,24.89 -19.295,11.683 -19.295,11.683 -5.911,-0.179 0,0"
             style="fill:#f1f53f;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path52" />
        </g>
        <g
           id="g54"
           transform="translate(332.2146,397.2227)">
          <path
             d="M 0,0 C 6.888,0.209 7.215,43.213 -4.251,60.881 H -31.192 -57.4 C -48.57,41.696 -35.462,24.89 -19.295,11.683 -19.295,11.683 -5.911,-0.179 0,0 Z"
             style="fill:none;stroke:#000000;stroke-width:6;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:1"
             id="path56" />
        </g>
        <g
           id="g58"
           transform="translate(261.3833,491.0142)">
          <path
             d="m 0,0 -0.399,2.533 c -1.147,7.282 -1.729,14.711 -1.729,22.082 0,40.525 17.501,79.11 48.017,105.86 0.872,0.766 21.562,18.841 34.599,22.567 0.655,0.187 1.306,0.281 1.934,0.281 2.055,0 3.884,-1.013 5.152,-2.853 5.76,-8.358 0.794,-39.187 -4.387,-63.578 C 76.897,57.282 67.419,23.934 59.04,1.932 L 58.304,0 Z"
             style="fill:#f1f53f;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path60" />
        </g>
        <g
           id="g62"
           transform="translate(343.8052,647.3375)">
          <path
             d="M 0,0 C -0.907,0 -1.835,-0.134 -2.758,-0.398 -16.205,-4.239 -36.27,-21.625 -38.514,-23.595 -69.676,-50.912 -87.55,-90.319 -87.55,-131.708 c 0,-7.529 0.594,-15.115 1.766,-22.55 l 0.798,-5.065 h 5.129 32.131 21.541 4.135 l 1.472,3.864 c 8.429,22.133 17.959,55.656 24.278,85.404 11.625,54.729 5.828,63.14 3.923,65.904 C 5.778,-1.474 3.071,0 0,0 m 0,-6 c 14.888,0 -8.159,-99.993 -26.185,-147.323 h -21.575 0.034 -32.131 c -1.11,7.042 -1.693,14.26 -1.693,21.615 0,41.308 18.194,78.357 46.994,103.604 0,0 20.908,18.355 33.446,21.937 C -0.718,-6.055 -0.35,-6 0,-6"
             style="fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path64" />
        </g>
        <g
           id="g66"
           transform="translate(386.2876,491.0142)">
          <path
             d="m 0,0 -0.266,2.706 c -1.454,14.77 -1.731,30.877 -0.846,49.241 -0.11,2.644 -1.047,32.501 10.643,64.706 2.621,7.216 3.569,17.336 4.487,27.124 0.629,6.713 1.223,13.055 2.329,18.509 0.573,2.813 3.719,2.813 5.063,2.813 1.469,0 3.568,-0.143 6.237,-0.426 34.57,-3.393 66.574,-19.468 90.093,-45.26 23.677,-25.965 36.716,-59.632 36.716,-94.798 0,-7.376 -0.582,-14.805 -1.729,-22.082 L 152.328,0 Z"
             style="fill:#f1f53f;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path68" />
        </g>
        <g
           id="g70"
           transform="translate(407.6974,659.1129)">
          <path
             d="m 0,0 c -5.739,0 -7.519,-2.837 -8.002,-5.216 -1.139,-5.613 -1.74,-12.032 -2.377,-18.829 -0.9,-9.598 -1.83,-19.523 -4.319,-26.376 -11.696,-32.221 -10.96,-62.191 -10.827,-65.717 -0.884,-18.455 -0.601,-34.666 0.863,-49.548 l 0.533,-5.413 h 5.438 147.044 5.129 l 0.798,5.066 c 1.172,7.434 1.766,15.021 1.766,22.549 0,35.916 -13.317,70.301 -37.499,96.82 C 74.528,-20.323 41.84,-3.906 6.507,-0.438 3.781,-0.149 1.577,0 0,0 m 0,-6 c 1.547,0 3.743,-0.179 5.921,-0.409 69.68,-6.84 124.125,-65.597 124.125,-137.075 0,-7.354 -0.583,-14.572 -1.693,-21.615 H -18.691 c -1.602,16.286 -1.611,32.774 -0.828,48.941 0,0 -1.458,30.855 10.46,63.689 4.559,12.551 4.226,32.695 6.937,46.06 C -2.062,-6.115 -1.24,-6 0,-6"
             style="fill:#00001b;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path72" />
        </g>
        <g
           id="g74"
           transform="translate(430.4395,380.123)">
          <path
             d="m 0,0 c -0.57,0.816 -1.134,1.63 -1.686,2.439 -19.65,28.847 -30.748,59.207 -30.858,59.51 l -0.047,0.14 c -1.592,5.182 -3.058,10.266 -4.358,15.115 l -1.012,3.776 H 99.429 L 97.471,76.726 C 79.664,38.042 44.413,8.912 3.173,-1.196 l -1.996,-0.49 z"
             style="fill:#f1f53f;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path76" />
        </g>
        <g
           id="g78"
           transform="translate(534.551,464.1038)">
          <path
             d="m 0,0 h -9.367 -128.796 -7.819 l 2.024,-7.553 c 1.307,-4.877 2.783,-9.998 4.388,-15.22 l 0.044,-0.141 0.05,-0.138 c 0.453,-1.253 11.337,-31.021 31.2,-60.178 0.558,-0.819 1.127,-1.641 1.703,-2.467 l 2.354,-3.373 3.995,0.979 c 20.93,5.13 40.798,15.155 57.454,28.991 16.488,13.696 29.923,31.19 38.853,50.591 z m -9.367,-6 c -17.343,-37.68 -51.193,-66.191 -92.285,-76.263 -0.564,0.807 -1.12,1.611 -1.666,2.411 -19.665,28.868 -30.517,58.842 -30.517,58.842 -1.523,4.955 -2.975,9.962 -4.328,15.01 z"
             style="fill:#00001b;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path80" />
        </g>
        <g
           id="g82"
           transform="translate(411.3887,296.8408)">
          <path
             d="m 0,0 c -0.058,0.175 -5.762,17.621 -9.895,30.87 l -0.558,1.792 1.564,1.036 c 2.62,1.737 5.302,3.632 7.971,5.634 l 0.399,0.3 0.485,0.123 c 2.888,0.735 5.58,1.717 8.001,2.918 3.239,1.608 6.16,3.953 8.681,6.968 L 18.224,51.523 58.772,18.854 29.94,24.382 42.968,7.211 25.619,12.04 24.612,-5.988 7.789,8.91 2.327,-7.115 Z"
             style="fill:#5a0aa8;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path84" />
        </g>
        <g
           id="g86"
           transform="translate(429.2693,351.8519)">
          <path
             d="m 0,0 -3.15,-3.766 c -2.298,-2.749 -4.948,-4.879 -7.876,-6.332 -2.262,-1.123 -4.787,-2.043 -7.505,-2.735 l -0.969,-0.246 -0.8,-0.6 c -2.627,-1.972 -5.269,-3.839 -7.851,-5.55 l -3.128,-2.074 1.117,-3.583 c 4.138,-13.265 9.848,-30.728 9.905,-30.903 l 4.655,-14.23 4.83,14.172 1.836,5.384 10.145,-8.985 7.732,-6.848 0.575,10.313 0.545,9.771 7.211,-2.008 14.29,-3.979 -8.966,11.818 -4.604,6.069 12.583,-2.413 L 50.267,-40.5 34.654,-27.921 3.823,-3.08 Z m 0.686,-6.974 30.831,-24.84 -25.39,4.867 12.486,-16.456 -13.198,3.675 -0.891,-15.977 -15.769,13.966 -4.259,-12.495 c 0,0 -5.709,17.451 -9.884,30.837 2.751,1.824 5.446,3.735 8.089,5.718 2.928,0.745 5.781,1.754 8.496,3.102 3.706,1.839 6.863,4.463 9.489,7.603"
             style="fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path88" />
        </g>
        <g
           id="g90"
           transform="translate(402.0352,665.7446)">
          <path
             d="m 0,0 c -1.332,0.78 -2.771,1.588 -4.532,2.542 l -0.094,0.052 -0.089,0.059 c -1.664,1.096 -3.411,2.002 -5.196,2.694 l -0.102,0.039 -0.099,0.049 c -5.33,2.626 -10.885,4.996 -16.51,7.045 l -1.763,0.643 0.124,1.872 c 0.921,13.853 2.389,32.149 2.404,32.332 l 0.6,7.462 9.057,-14.305 12.874,18.42 5.193,-17.3 15.739,8.758 L 8.953,30.615 35.697,42.735 1.899,-1.113 Z"
             style="fill:#5a0aa8;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path92" />
        </g>
        <g
           id="g94"
           transform="translate(399.6194,730.3133)">
          <path
             d="m 0,0 -5.918,-8.466 -7.764,-11.108 -3.043,4.806 -8.008,12.65 -1.2,-14.924 c -0.015,-0.183 -1.485,-18.496 -2.406,-32.366 l -0.249,-3.745 3.526,-1.285 c 5.54,-2.018 11.011,-4.353 16.261,-6.939 l 0.198,-0.097 0.205,-0.08 c 1.617,-0.626 3.206,-1.45 4.723,-2.45 l 0.179,-0.118 0.189,-0.102 c 1.728,-0.937 3.145,-1.732 4.46,-2.502 l 3.799,-2.225 2.688,3.487 26.33,34.162 12.245,15.886 -18.269,-8.279 -11.67,-5.29 3.058,6.98 5.956,13.591 -12.967,-7.215 -6.539,-3.639 -2.814,9.375 z m -1.819,-11.331 4.601,-15.33 11.973,6.663 L 6.462,-38.922 30.01,-28.25 3.68,-62.411 c -1.52,0.89 -3.058,1.744 -4.604,2.582 -1.785,1.176 -3.676,2.166 -5.668,2.938 -5.459,2.689 -11.055,5.073 -16.758,7.151 0.93,13.996 2.401,32.298 2.401,32.298 l 7.062,-11.154 z"
             style="fill:#000001;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path96" />
        </g>
        <g
           id="g98"
           transform="translate(319.5646,410.8427)">
          <path
             d="m 0,0 c -7.747,21.232 -11.897,47.473 -11.897,47.473 -1.142,6.275 -2.203,12.87 -3.168,19.827 -0.135,0.967 -0.249,1.932 -0.373,2.896 -10e-4,0.009 -0.002,0.018 -0.002,0.022 -0.001,0.005 -0.002,0.014 -0.003,0.018 -0.119,0.969 -0.247,1.932 -0.355,2.903 -0.393,3.496 -0.737,6.905 -1.042,10.244 0,0 -9.48,67.49 13.17,125.219 2.273,6.388 4.92,14.609 7.636,20.025 3.906,7.791 15.224,28.432 33.543,37.8 9.335,4.774 21.144,4.554 31.423,1.795 1.305,-0.35 2.565,-0.803 3.788,-1.33 0.945,-0.336 3.233,-1.735 4.758,-2.664 0.683,-0.416 1.34,-0.868 1.97,-1.361 8.903,-6.978 9.653,-16.627 9.336,-27.645 -1.698,-34.924 -28.509,-55.86 -19.342,-152.051 0.054,-0.55 0.105,-1.102 0.163,-1.652 1.687,-11.553 4.205,-23.009 7.219,-34.258 23.321,-71.228 28.582,-58.5 35.945,-81.12 3.004,-12.187 5.382,-24.66 -2.446,-35.059 0,0 -6.534,-8.552 -17.414,-11.61 C 85.663,-82.772 77.836,-83.33 70.344,-83.029 49.741,-80.323 24.952,-68.29 0,0"
             style="fill:#5a0aa8;fill-opacity:1;fill-rule:nonzero;stroke:none"
             id="path100" />
        </g>
        <g
           id="g102"
           transform="translate(319.5646,410.8427)">
          <path
             d="m 0,0 c -7.747,21.232 -11.897,47.473 -11.897,47.473 -1.142,6.275 -2.203,12.87 -3.168,19.827 -0.135,0.967 -0.249,1.932 -0.373,2.896 -10e-4,0.009 -0.002,0.018 -0.002,0.022 -0.001,0.005 -0.002,0.014 -0.003,0.018 -0.119,0.969 -0.247,1.932 -0.355,2.903 -0.393,3.496 -0.737,6.905 -1.042,10.244 0,0 -9.48,67.49 13.17,125.219 2.273,6.388 4.92,14.609 7.636,20.025 3.906,7.791 15.224,28.432 33.543,37.8 9.335,4.774 21.144,4.554 31.423,1.795 1.305,-0.35 2.565,-0.803 3.788,-1.33 0.945,-0.336 3.233,-1.735 4.758,-2.664 0.683,-0.416 1.34,-0.868 1.97,-1.361 8.903,-6.978 9.653,-16.627 9.336,-27.645 -1.698,-34.924 -28.509,-55.86 -19.342,-152.051 0.054,-0.55 0.105,-1.102 0.163,-1.652 1.687,-11.553 4.205,-23.009 7.219,-34.258 23.321,-71.228 28.582,-58.5 35.945,-81.12 3.004,-12.187 5.382,-24.66 -2.446,-35.059 0,0 -6.534,-8.552 -17.414,-11.61 C 85.663,-82.772 77.836,-83.33 70.344,-83.029 49.741,-80.323 24.952,-68.29 0,0 Z"
             style="fill:none;stroke:#000000;stroke-width:5;stroke-linecap:butt;stroke-linejoin:miter;stroke-miterlimit:10;stroke-dasharray:none;stroke-opacity:1"
             id="path104" />
        </g>
      </g>
    </g>
    <text
       xml:space="preserve"
       transform="matrix(0.99794493,0.06406872,0.06406866,-0.99794605,0,0)"
       style="font-variant:normal;font-weight:bold;font-stretch:normal;font-size:120.445px;font-family:'Riffic Free Medium';-inkscape-font-specification:RifficFree-Bold;writing-mode:lr-tb;mix-blend-mode:normal;fill:#000000;fill-opacity:1;fill-rule:nonzero;stroke:#f1f53f;stroke-width:3.70964;stroke-dasharray:none;stroke-opacity:1"
       id="text108"
       x="26.569271"
       y="-165.84302"><tspan
         x="26.569271 95.704155 183.74883 264.08505 351.40704 377.66388 452.82095 555.09009 646.74805 723.0976"
         y="-165.84302"
         sodipodi:role="line"
         id="tspan106"
         style="stroke:#f1f53f;stroke-width:3.70964;stroke-dasharray:none;stroke-opacity:1">SAUCISMASH</tspan></text>
  </g>
  <script
     id="mesh_polyfill"
     type="text/javascript">
!function(){const t=&quot;http://www.w3.org/2000/svg&quot;,e=&quot;http://www.w3.org/1999/xlink&quot;,s=&quot;http://www.w3.org/1999/xhtml&quot;,r=2;if(document.createElementNS(t,&quot;meshgradient&quot;).x)return;const n=(t,e,s,r)=&gt;{let n=new x(.5*(e.x+s.x),.5*(e.y+s.y)),o=new x(.5*(t.x+e.x),.5*(t.y+e.y)),i=new x(.5*(s.x+r.x),.5*(s.y+r.y)),a=new x(.5*(n.x+o.x),.5*(n.y+o.y)),h=new x(.5*(n.x+i.x),.5*(n.y+i.y)),l=new x(.5*(a.x+h.x),.5*(a.y+h.y));return[[t,o,a,l],[l,h,i,r]]},o=t=&gt;{let e=t[0].distSquared(t[1]),s=t[2].distSquared(t[3]),r=.25*t[0].distSquared(t[2]),n=.25*t[1].distSquared(t[3]),o=e&gt;s?e:s,i=r&gt;n?r:n;return 18*(o&gt;i?o:i)},i=(t,e)=&gt;Math.sqrt(t.distSquared(e)),a=(t,e)=&gt;t.scale(2/3).add(e.scale(1/3)),h=t=&gt;{let e,s,r,n,o,i,a,h=new g;return t.match(/(\w+\(\s*[^)]+\))+/g).forEach(t=&gt;{let l=t.match(/[\w.-]+/g),d=l.shift();switch(d){case&quot;translate&quot;:2===l.length?e=new g(1,0,0,1,l[0],l[1]):(console.error(&quot;mesh.js: translate does not have 2 arguments!&quot;),e=new g(1,0,0,1,0,0)),h=h.append(e);break;case&quot;scale&quot;:1===l.length?s=new g(l[0],0,0,l[0],0,0):2===l.length?s=new g(l[0],0,0,l[1],0,0):(console.error(&quot;mesh.js: scale does not have 1 or 2 arguments!&quot;),s=new g(1,0,0,1,0,0)),h=h.append(s);break;case&quot;rotate&quot;:if(3===l.length&amp;&amp;(e=new g(1,0,0,1,l[1],l[2]),h=h.append(e)),l[0]){r=l[0]*Math.PI/180;let t=Math.cos(r),e=Math.sin(r);Math.abs(t)&lt;1e-16&amp;&amp;(t=0),Math.abs(e)&lt;1e-16&amp;&amp;(e=0),a=new g(t,e,-e,t,0,0),h=h.append(a)}else console.error(&quot;math.js: No argument to rotate transform!&quot;);3===l.length&amp;&amp;(e=new g(1,0,0,1,-l[1],-l[2]),h=h.append(e));break;case&quot;skewX&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),o=new g(1,0,n,1,0,0),h=h.append(o)):console.error(&quot;math.js: No argument to skewX transform!&quot;);break;case&quot;skewY&quot;:l[0]?(r=l[0]*Math.PI/180,n=Math.tan(r),i=new g(1,n,0,1,0,0),h=h.append(i)):console.error(&quot;math.js: No argument to skewY transform!&quot;);break;case&quot;matrix&quot;:6===l.length?h=h.append(new g(...l)):console.error(&quot;math.js: Incorrect number of arguments for matrix!&quot;);break;default:console.error(&quot;mesh.js: Unhandled transform type: &quot;+d)}}),h},l=t=&gt;{let e=[],s=t.split(/[ ,]+/);for(let t=0,r=s.length-1;t&lt;r;t+=2)e.push(new x(parseFloat(s[t]),parseFloat(s[t+1])));return e},d=(t,e)=&gt;{for(let s in e)t.setAttribute(s,e[s])},c=(t,e,s,r,n)=&gt;{let o,i,a=[0,0,0,0];for(let h=0;h&lt;3;++h)e[h]&lt;t[h]&amp;&amp;e[h]&lt;s[h]||t[h]&lt;e[h]&amp;&amp;s[h]&lt;e[h]?a[h]=0:(a[h]=.5*((e[h]-t[h])/r+(s[h]-e[h])/n),o=Math.abs(3*(e[h]-t[h])/r),i=Math.abs(3*(s[h]-e[h])/n),a[h]&gt;o?a[h]=o:a[h]&gt;i&amp;&amp;(a[h]=i));return a},u=[[1,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,1,0,0,0,0,0,0,0,0,0,0,0],[-3,3,0,0,-2,-1,0,0,0,0,0,0,0,0,0,0],[2,-2,0,0,1,1,0,0,0,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,1,0,0,0,0,0,0,0],[0,0,0,0,0,0,0,0,0,0,0,0,1,0,0,0],[0,0,0,0,0,0,0,0,-3,3,0,0,-2,-1,0,0],[0,0,0,0,0,0,0,0,2,-2,0,0,1,1,0,0],[-3,0,3,0,0,0,0,0,-2,0,-1,0,0,0,0,0],[0,0,0,0,-3,0,3,0,0,0,0,0,-2,0,-1,0],[9,-9,-9,9,6,3,-6,-3,6,-6,3,-3,4,2,2,1],[-6,6,6,-6,-3,-3,3,3,-4,4,-2,2,-2,-2,-1,-1],[2,0,-2,0,0,0,0,0,1,0,1,0,0,0,0,0],[0,0,0,0,2,0,-2,0,0,0,0,0,1,0,1,0],[-6,6,6,-6,-4,-2,4,2,-3,3,-3,3,-2,-1,-2,-1],[4,-4,-4,4,2,2,-2,-2,2,-2,2,-2,1,1,1,1]],f=t=&gt;{let e=[];for(let s=0;s&lt;16;++s){e[s]=0;for(let r=0;r&lt;16;++r)e[s]+=u[s][r]*t[r]}return e},p=(t,e,s)=&gt;{const r=e*e,n=s*s,o=e*e*e,i=s*s*s;return t[0]+t[1]*e+t[2]*r+t[3]*o+t[4]*s+t[5]*s*e+t[6]*s*r+t[7]*s*o+t[8]*n+t[9]*n*e+t[10]*n*r+t[11]*n*o+t[12]*i+t[13]*i*e+t[14]*i*r+t[15]*i*o},y=t=&gt;{let e=[],s=[],r=[];for(let s=0;s&lt;4;++s)e[s]=[],e[s][0]=n(t[0][s],t[1][s],t[2][s],t[3][s]),e[s][1]=[],e[s][1].push(...n(...e[s][0][0])),e[s][1].push(...n(...e[s][0][1])),e[s][2]=[],e[s][2].push(...n(...e[s][1][0])),e[s][2].push(...n(...e[s][1][1])),e[s][2].push(...n(...e[s][1][2])),e[s][2].push(...n(...e[s][1][3]));for(let t=0;t&lt;8;++t){s[t]=[];for(let r=0;r&lt;4;++r)s[t][r]=[],s[t][r][0]=n(e[0][2][t][r],e[1][2][t][r],e[2][2][t][r],e[3][2][t][r]),s[t][r][1]=[],s[t][r][1].push(...n(...s[t][r][0][0])),s[t][r][1].push(...n(...s[t][r][0][1])),s[t][r][2]=[],s[t][r][2].push(...n(...s[t][r][1][0])),s[t][r][2].push(...n(...s[t][r][1][1])),s[t][r][2].push(...n(...s[t][r][1][2])),s[t][r][2].push(...n(...s[t][r][1][3]))}for(let t=0;t&lt;8;++t){r[t]=[];for(let e=0;e&lt;8;++e)r[t][e]=[],r[t][e][0]=s[t][0][2][e],r[t][e][1]=s[t][1][2][e],r[t][e][2]=s[t][2][2][e],r[t][e][3]=s[t][3][2][e]}return r};class x{constructor(t,e){this.x=t||0,this.y=e||0}toString(){return`(x=${this.x}, y=${this.y})`}clone(){return new x(this.x,this.y)}add(t){return new x(this.x+t.x,this.y+t.y)}scale(t){return void 0===t.x?new x(this.x*t,this.y*t):new x(this.x*t.x,this.y*t.y)}distSquared(t){let e=this.x-t.x,s=this.y-t.y;return e*e+s*s}transform(t){let e=this.x*t.a+this.y*t.c+t.e,s=this.x*t.b+this.y*t.d+t.f;return new x(e,s)}}class g{constructor(t,e,s,r,n,o){void 0===t?(this.a=1,this.b=0,this.c=0,this.d=1,this.e=0,this.f=0):(this.a=t,this.b=e,this.c=s,this.d=r,this.e=n,this.f=o)}toString(){return`affine: ${this.a} ${this.c} ${this.e} \n       ${this.b} ${this.d} ${this.f}`}append(t){t instanceof g||console.error(&quot;mesh.js: argument to Affine.append is not affine!&quot;);let e=this.a*t.a+this.c*t.b,s=this.b*t.a+this.d*t.b,r=this.a*t.c+this.c*t.d,n=this.b*t.c+this.d*t.d,o=this.a*t.e+this.c*t.f+this.e,i=this.b*t.e+this.d*t.f+this.f;return new g(e,s,r,n,o,i)}}class w{constructor(t,e){this.nodes=t,this.colors=e}paintCurve(t,e){if(o(this.nodes)&gt;r){const s=n(...this.nodes);let r=[[],[]],o=[[],[]];for(let t=0;t&lt;4;++t)r[0][t]=this.colors[0][t],r[1][t]=(this.colors[0][t]+this.colors[1][t])/2,o[0][t]=r[1][t],o[1][t]=this.colors[1][t];let i=new w(s[0],r),a=new w(s[1],o);i.paintCurve(t,e),a.paintCurve(t,e)}else{let s=Math.round(this.nodes[0].x);if(s&gt;=0&amp;&amp;s&lt;e){let r=4*(~~this.nodes[0].y*e+s);t[r]=Math.round(this.colors[0][0]),t[r+1]=Math.round(this.colors[0][1]),t[r+2]=Math.round(this.colors[0][2]),t[r+3]=Math.round(this.colors[0][3])}}}}class m{constructor(t,e){this.nodes=t,this.colors=e}split(){let t=[[],[],[],[]],e=[[],[],[],[]],s=[[[],[]],[[],[]]],r=[[[],[]],[[],[]]];for(let s=0;s&lt;4;++s){const r=n(this.nodes[0][s],this.nodes[1][s],this.nodes[2][s],this.nodes[3][s]);t[0][s]=r[0][0],t[1][s]=r[0][1],t[2][s]=r[0][2],t[3][s]=r[0][3],e[0][s]=r[1][0],e[1][s]=r[1][1],e[2][s]=r[1][2],e[3][s]=r[1][3]}for(let t=0;t&lt;4;++t)s[0][0][t]=this.colors[0][0][t],s[0][1][t]=this.colors[0][1][t],s[1][0][t]=(this.colors[0][0][t]+this.colors[1][0][t])/2,s[1][1][t]=(this.colors[0][1][t]+this.colors[1][1][t])/2,r[0][0][t]=s[1][0][t],r[0][1][t]=s[1][1][t],r[1][0][t]=this.colors[1][0][t],r[1][1][t]=this.colors[1][1][t];return[new m(t,s),new m(e,r)]}paint(t,e){let s,n=!1;for(let t=0;t&lt;4;++t)if((s=o([this.nodes[0][t],this.nodes[1][t],this.nodes[2][t],this.nodes[3][t]]))&gt;r){n=!0;break}if(n){let s=this.split();s[0].paint(t,e),s[1].paint(t,e)}else{new w([...this.nodes[0]],[...this.colors[0]]).paintCurve(t,e)}}}class b{constructor(t){this.readMesh(t),this.type=t.getAttribute(&quot;type&quot;)||&quot;bilinear&quot;}readMesh(t){let e=[[]],s=[[]],r=Number(t.getAttribute(&quot;x&quot;)),n=Number(t.getAttribute(&quot;y&quot;));e[0][0]=new x(r,n);let o=t.children;for(let t=0,r=o.length;t&lt;r;++t){e[3*t+1]=[],e[3*t+2]=[],e[3*t+3]=[],s[t+1]=[];let r=o[t].children;for(let n=0,o=r.length;n&lt;o;++n){let o=r[n].children;for(let r=0,i=o.length;r&lt;i;++r){let i=r;0!==t&amp;&amp;++i;let h,d=o[r].getAttribute(&quot;path&quot;),c=&quot;l&quot;;null!=d&amp;&amp;(c=(h=d.match(/\s*([lLcC])\s*(.*)/))[1]);let u=l(h[2]);switch(c){case&quot;l&quot;:0===i?(e[3*t][3*n+3]=u[0].add(e[3*t][3*n]),e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0].add(e[3*t+3][3*n+3])),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;L&quot;:0===i?(e[3*t][3*n+3]=u[0],e[3*t][3*n+1]=a(e[3*t][3*n],e[3*t][3*n+3]),e[3*t][3*n+2]=a(e[3*t][3*n+3],e[3*t][3*n])):1===i?(e[3*t+3][3*n+3]=u[0],e[3*t+1][3*n+3]=a(e[3*t][3*n+3],e[3*t+3][3*n+3]),e[3*t+2][3*n+3]=a(e[3*t+3][3*n+3],e[3*t][3*n+3])):2===i?(0===n&amp;&amp;(e[3*t+3][3*n+0]=u[0]),e[3*t+3][3*n+1]=a(e[3*t+3][3*n],e[3*t+3][3*n+3]),e[3*t+3][3*n+2]=a(e[3*t+3][3*n+3],e[3*t+3][3*n])):(e[3*t+1][3*n]=a(e[3*t][3*n],e[3*t+3][3*n]),e[3*t+2][3*n]=a(e[3*t+3][3*n],e[3*t][3*n]));break;case&quot;c&quot;:0===i?(e[3*t][3*n+1]=u[0].add(e[3*t][3*n]),e[3*t][3*n+2]=u[1].add(e[3*t][3*n]),e[3*t][3*n+3]=u[2].add(e[3*t][3*n])):1===i?(e[3*t+1][3*n+3]=u[0].add(e[3*t][3*n+3]),e[3*t+2][3*n+3]=u[1].add(e[3*t][3*n+3]),e[3*t+3][3*n+3]=u[2].add(e[3*t][3*n+3])):2===i?(e[3*t+3][3*n+2]=u[0].add(e[3*t+3][3*n+3]),e[3*t+3][3*n+1]=u[1].add(e[3*t+3][3*n+3]),0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2].add(e[3*t+3][3*n+3]))):(e[3*t+2][3*n]=u[0].add(e[3*t+3][3*n]),e[3*t+1][3*n]=u[1].add(e[3*t+3][3*n]));break;case&quot;C&quot;:0===i?(e[3*t][3*n+1]=u[0],e[3*t][3*n+2]=u[1],e[3*t][3*n+3]=u[2]):1===i?(e[3*t+1][3*n+3]=u[0],e[3*t+2][3*n+3]=u[1],e[3*t+3][3*n+3]=u[2]):2===i?(e[3*t+3][3*n+2]=u[0],e[3*t+3][3*n+1]=u[1],0===n&amp;&amp;(e[3*t+3][3*n+0]=u[2])):(e[3*t+2][3*n]=u[0],e[3*t+1][3*n]=u[1]);break;default:console.error(&quot;mesh.js: &quot;+c+&quot; invalid path type.&quot;)}if(0===t&amp;&amp;0===n||r&gt;0){let e=window.getComputedStyle(o[r]).stopColor.match(/^rgb\s*\(\s*(\d+)\s*,\s*(\d+)\s*,\s*(\d+)\s*\)$/i),a=window.getComputedStyle(o[r]).stopOpacity,h=255;a&amp;&amp;(h=Math.floor(255*a)),e&amp;&amp;(0===i?(s[t][n]=[],s[t][n][0]=Math.floor(e[1]),s[t][n][1]=Math.floor(e[2]),s[t][n][2]=Math.floor(e[3]),s[t][n][3]=h):1===i?(s[t][n+1]=[],s[t][n+1][0]=Math.floor(e[1]),s[t][n+1][1]=Math.floor(e[2]),s[t][n+1][2]=Math.floor(e[3]),s[t][n+1][3]=h):2===i?(s[t+1][n+1]=[],s[t+1][n+1][0]=Math.floor(e[1]),s[t+1][n+1][1]=Math.floor(e[2]),s[t+1][n+1][2]=Math.floor(e[3]),s[t+1][n+1][3]=h):3===i&amp;&amp;(s[t+1][n]=[],s[t+1][n][0]=Math.floor(e[1]),s[t+1][n][1]=Math.floor(e[2]),s[t+1][n][2]=Math.floor(e[3]),s[t+1][n][3]=h))}}e[3*t+1][3*n+1]=new x,e[3*t+1][3*n+2]=new x,e[3*t+2][3*n+1]=new x,e[3*t+2][3*n+2]=new x,e[3*t+1][3*n+1].x=(-4*e[3*t][3*n].x+6*(e[3*t][3*n+1].x+e[3*t+1][3*n].x)+-2*(e[3*t][3*n+3].x+e[3*t+3][3*n].x)+3*(e[3*t+3][3*n+1].x+e[3*t+1][3*n+3].x)+-1*e[3*t+3][3*n+3].x)/9,e[3*t+1][3*n+2].x=(-4*e[3*t][3*n+3].x+6*(e[3*t][3*n+2].x+e[3*t+1][3*n+3].x)+-2*(e[3*t][3*n].x+e[3*t+3][3*n+3].x)+3*(e[3*t+3][3*n+2].x+e[3*t+1][3*n].x)+-1*e[3*t+3][3*n].x)/9,e[3*t+2][3*n+1].x=(-4*e[3*t+3][3*n].x+6*(e[3*t+3][3*n+1].x+e[3*t+2][3*n].x)+-2*(e[3*t+3][3*n+3].x+e[3*t][3*n].x)+3*(e[3*t][3*n+1].x+e[3*t+2][3*n+3].x)+-1*e[3*t][3*n+3].x)/9,e[3*t+2][3*n+2].x=(-4*e[3*t+3][3*n+3].x+6*(e[3*t+3][3*n+2].x+e[3*t+2][3*n+3].x)+-2*(e[3*t+3][3*n].x+e[3*t][3*n+3].x)+3*(e[3*t][3*n+2].x+e[3*t+2][3*n].x)+-1*e[3*t][3*n].x)/9,e[3*t+1][3*n+1].y=(-4*e[3*t][3*n].y+6*(e[3*t][3*n+1].y+e[3*t+1][3*n].y)+-2*(e[3*t][3*n+3].y+e[3*t+3][3*n].y)+3*(e[3*t+3][3*n+1].y+e[3*t+1][3*n+3].y)+-1*e[3*t+3][3*n+3].y)/9,e[3*t+1][3*n+2].y=(-4*e[3*t][3*n+3].y+6*(e[3*t][3*n+2].y+e[3*t+1][3*n+3].y)+-2*(e[3*t][3*n].y+e[3*t+3][3*n+3].y)+3*(e[3*t+3][3*n+2].y+e[3*t+1][3*n].y)+-1*e[3*t+3][3*n].y)/9,e[3*t+2][3*n+1].y=(-4*e[3*t+3][3*n].y+6*(e[3*t+3][3*n+1].y+e[3*t+2][3*n].y)+-2*(e[3*t+3][3*n+3].y+e[3*t][3*n].y)+3*(e[3*t][3*n+1].y+e[3*t+2][3*n+3].y)+-1*e[3*t][3*n+3].y)/9,e[3*t+2][3*n+2].y=(-4*e[3*t+3][3*n+3].y+6*(e[3*t+3][3*n+2].y+e[3*t+2][3*n+3].y)+-2*(e[3*t+3][3*n].y+e[3*t][3*n+3].y)+3*(e[3*t][3*n+2].y+e[3*t+2][3*n].y)+-1*e[3*t][3*n].y)/9}}this.nodes=e,this.colors=s}paintMesh(t,e){let s=(this.nodes.length-1)/3,r=(this.nodes[0].length-1)/3;if(&quot;bilinear&quot;===this.type||s&lt;2||r&lt;2){let n;for(let o=0;o&lt;s;++o)for(let s=0;s&lt;r;++s){let r=[];for(let t=3*o,e=3*o+4;t&lt;e;++t)r.push(this.nodes[t].slice(3*s,3*s+4));let i=[];i.push(this.colors[o].slice(s,s+2)),i.push(this.colors[o+1].slice(s,s+2)),(n=new m(r,i)).paint(t,e)}}else{let n,o,a,h,l,d,u;const x=s,g=r;s++,r++;let w=new Array(s);for(let t=0;t&lt;s;++t){w[t]=new Array(r);for(let e=0;e&lt;r;++e)w[t][e]=[],w[t][e][0]=this.nodes[3*t][3*e],w[t][e][1]=this.colors[t][e]}for(let t=0;t&lt;s;++t)for(let e=0;e&lt;r;++e)0!==t&amp;&amp;t!==x&amp;&amp;(n=i(w[t-1][e][0],w[t][e][0]),o=i(w[t+1][e][0],w[t][e][0]),w[t][e][2]=c(w[t-1][e][1],w[t][e][1],w[t+1][e][1],n,o)),0!==e&amp;&amp;e!==g&amp;&amp;(n=i(w[t][e-1][0],w[t][e][0]),o=i(w[t][e+1][0],w[t][e][0]),w[t][e][3]=c(w[t][e-1][1],w[t][e][1],w[t][e+1][1],n,o));for(let t=0;t&lt;r;++t){w[0][t][2]=[],w[x][t][2]=[];for(let e=0;e&lt;4;++e)n=i(w[1][t][0],w[0][t][0]),o=i(w[x][t][0],w[x-1][t][0]),w[0][t][2][e]=n&gt;0?2*(w[1][t][1][e]-w[0][t][1][e])/n-w[1][t][2][e]:0,w[x][t][2][e]=o&gt;0?2*(w[x][t][1][e]-w[x-1][t][1][e])/o-w[x-1][t][2][e]:0}for(let t=0;t&lt;s;++t){w[t][0][3]=[],w[t][g][3]=[];for(let e=0;e&lt;4;++e)n=i(w[t][1][0],w[t][0][0]),o=i(w[t][g][0],w[t][g-1][0]),w[t][0][3][e]=n&gt;0?2*(w[t][1][1][e]-w[t][0][1][e])/n-w[t][1][3][e]:0,w[t][g][3][e]=o&gt;0?2*(w[t][g][1][e]-w[t][g-1][1][e])/o-w[t][g-1][3][e]:0}for(let s=0;s&lt;x;++s)for(let r=0;r&lt;g;++r){let n=i(w[s][r][0],w[s+1][r][0]),o=i(w[s][r+1][0],w[s+1][r+1][0]),c=i(w[s][r][0],w[s][r+1][0]),x=i(w[s+1][r][0],w[s+1][r+1][0]),g=[[],[],[],[]];for(let t=0;t&lt;4;++t){(d=[])[0]=w[s][r][1][t],d[1]=w[s+1][r][1][t],d[2]=w[s][r+1][1][t],d[3]=w[s+1][r+1][1][t],d[4]=w[s][r][2][t]*n,d[5]=w[s+1][r][2][t]*n,d[6]=w[s][r+1][2][t]*o,d[7]=w[s+1][r+1][2][t]*o,d[8]=w[s][r][3][t]*c,d[9]=w[s+1][r][3][t]*x,d[10]=w[s][r+1][3][t]*c,d[11]=w[s+1][r+1][3][t]*x,d[12]=0,d[13]=0,d[14]=0,d[15]=0,u=f(d);for(let e=0;e&lt;9;++e){g[t][e]=[];for(let s=0;s&lt;9;++s)g[t][e][s]=p(u,e/8,s/8),g[t][e][s]&gt;255?g[t][e][s]=255:g[t][e][s]&lt;0&amp;&amp;(g[t][e][s]=0)}}h=[];for(let t=3*s,e=3*s+4;t&lt;e;++t)h.push(this.nodes[t].slice(3*r,3*r+4));l=y(h);for(let s=0;s&lt;8;++s)for(let r=0;r&lt;8;++r)(a=new m(l[s][r],[[[g[0][s][r],g[1][s][r],g[2][s][r],g[3][s][r]],[g[0][s][r+1],g[1][s][r+1],g[2][s][r+1],g[3][s][r+1]]],[[g[0][s+1][r],g[1][s+1][r],g[2][s+1][r],g[3][s+1][r]],[g[0][s+1][r+1],g[1][s+1][r+1],g[2][s+1][r+1],g[3][s+1][r+1]]]])).paint(t,e)}}}transform(t){if(t instanceof x)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].add(t);else if(t instanceof g)for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].transform(t)}scale(t){for(let e=0,s=this.nodes.length;e&lt;s;++e)for(let s=0,r=this.nodes[0].length;s&lt;r;++s)this.nodes[e][s]=this.nodes[e][s].scale(t)}}document.querySelectorAll(&quot;rect,circle,ellipse,path,text&quot;).forEach((r,n)=&gt;{let o=r.getAttribute(&quot;id&quot;);o||(o=&quot;patchjs_shape&quot;+n,r.setAttribute(&quot;id&quot;,o));const i=r.style.fill.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/),a=r.style.stroke.match(/^url\(\s*&quot;?\s*#([^\s&quot;]+)&quot;?\s*\)/);if(i&amp;&amp;i[1]){const a=document.getElementById(i[1]);if(a&amp;&amp;&quot;meshgradient&quot;===a.nodeName){const i=r.getBBox();let l=document.createElementNS(s,&quot;canvas&quot;);d(l,{width:i.width,height:i.height});const c=l.getContext(&quot;2d&quot;);let u=c.createImageData(i.width,i.height);const f=new b(a);&quot;objectBoundingBox&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.scale(new x(i.width,i.height));const p=a.getAttribute(&quot;gradientTransform&quot;);null!=p&amp;&amp;f.transform(h(p)),&quot;userSpaceOnUse&quot;===a.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;f.transform(new x(-i.x,-i.y)),f.paintMesh(u.data,l.width),c.putImageData(u,0,0);const y=document.createElementNS(t,&quot;image&quot;);d(y,{width:i.width,height:i.height,x:i.x,y:i.y});let g=l.toDataURL();y.setAttributeNS(e,&quot;xlink:href&quot;,g),r.parentNode.insertBefore(y,r),r.style.fill=&quot;none&quot;;const w=document.createElementNS(t,&quot;use&quot;);w.setAttributeNS(e,&quot;xlink:href&quot;,&quot;#&quot;+o);const m=&quot;patchjs_clip&quot;+n,M=document.createElementNS(t,&quot;clipPath&quot;);M.setAttribute(&quot;id&quot;,m),M.appendChild(w),r.parentElement.insertBefore(M,r),y.setAttribute(&quot;clip-path&quot;,&quot;url(#&quot;+m+&quot;)&quot;),u=null,l=null,g=null}}if(a&amp;&amp;a[1]){const o=document.getElementById(a[1]);if(o&amp;&amp;&quot;meshgradient&quot;===o.nodeName){const i=parseFloat(r.style.strokeWidth.slice(0,-2))*(parseFloat(r.style.strokeMiterlimit)||parseFloat(r.getAttribute(&quot;stroke-miterlimit&quot;))||1),a=r.getBBox(),l=Math.trunc(a.width+i),c=Math.trunc(a.height+i),u=Math.trunc(a.x-i/2),f=Math.trunc(a.y-i/2);let p=document.createElementNS(s,&quot;canvas&quot;);d(p,{width:l,height:c});const y=p.getContext(&quot;2d&quot;);let g=y.createImageData(l,c);const w=new b(o);&quot;objectBoundingBox&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.scale(new x(l,c));const m=o.getAttribute(&quot;gradientTransform&quot;);null!=m&amp;&amp;w.transform(h(m)),&quot;userSpaceOnUse&quot;===o.getAttribute(&quot;gradientUnits&quot;)&amp;&amp;w.transform(new x(-u,-f)),w.paintMesh(g.data,p.width),y.putImageData(g,0,0);const M=document.createElementNS(t,&quot;image&quot;);d(M,{width:l,height:c,x:0,y:0});let S=p.toDataURL();M.setAttributeNS(e,&quot;xlink:href&quot;,S);const k=&quot;pattern_clip&quot;+n,A=document.createElementNS(t,&quot;pattern&quot;);d(A,{id:k,patternUnits:&quot;userSpaceOnUse&quot;,width:l,height:c,x:u,y:f}),A.appendChild(M),o.parentNode.appendChild(A),r.style.stroke=&quot;url(#&quot;+k+&quot;)&quot;,g=null,p=null,S=null}}})}();
</script>
</svg>
