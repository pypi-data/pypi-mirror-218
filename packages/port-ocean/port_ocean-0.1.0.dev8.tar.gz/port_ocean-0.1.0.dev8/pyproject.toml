[tool.poetry]
name = "port-ocean"
version = "0.1.0.dev8"
description = "Port Ocean is a CLI tool for managing your Port projects."
readme = "README.md"
authors = ["Daniel Sinai <daniel@getport.io>", "Yair Siman-Tov <yair@getport.io>"]
packages = [
    { include = "port_ocean", from = "." }
]

[tool.poetry.scripts]
ocean = "port_ocean.cli.cli:cli_start"

[build-system]
requires = ["poetry>=0.12"]
build-backend = "poetry.masonry.api"

[tool.poetry.dependencies]
python = "^3.11"
pydantic = "^1.10.8"
requests = "^2.31.0"
loguru = "^0.7.0"
pyyaml = "^6.0"
werkzeug = "^2.3.4"
fastapi = "^0.96.0"
uvicorn = "^0.22.0"
confluent-kafka = "^2.1.1"
httpx = "^0.24.1"
pyjq = "^2.6.0"
urllib3 = "^1.26.16"
six = "^1.16.0"

# CLI
click = { version = "^8.1.3", optional = true }
rich = { version = "^13.4.1", optional = true }
cookiecutter = { version = "^2.1.1", optional = true }
toml = { version = "^0.10.2", optional = true }

[tool.poetry.extras]
cli = ["click", "rich", "cookiecutter", "toml"]


[tool.poetry.group.dev.dependencies]
pytest = "^7.2"
black = "^23.3.0"
mypy = "^1.3.0"
pylint = "^2.17.4"
types-requests = "^2.31.0.1"
types-pyyaml = "^6.0.12.10"
ruff = "^0.0.272"
types-toml = "^0.10.8.6"


[tool.mypy]
exclude = [
    'port_ocean/cli/cookiecutter',
    'venv',
    '.venv',
    'integrations'
]
plugins = [
    "pydantic.mypy"
]

follow_imports = "silent"
warn_redundant_casts = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true

# for strict mypy: (this is the tricky one :-))
disallow_untyped_defs = true


[tool.ruff]
# Never enforce `E501` (line length violations).
ignore = ["E501"]
exclude = ['venv', '.venv', 'integrations']

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
exclude = '''
/(
  \scripts
  \.toml
  |\.sh
  |\.git
  |\.ini
  |Dockerfile
  |\.venv
  |integrations
)/
'''