[tool.poetry]
name = "hoppr"
version = "1.8.8"
description = "A tool for defining, verifying, and transferring software dependencies between environments."
authors = ["LMCO Open Source <open.source@lmco.com>"]
license = "MIT"
readme = "README.md"
homepage = "https://hoppr.dev"
repository = "https://gitlab.com/hoppr/hoppr"

keywords = [
  "packaging",
  "reports",
  "build dependencies",
  "software bill of materials"
]

classifiers = [
  "Development Status :: 3 - Alpha",
  "Intended Audience :: Information Technology",
  "Topic :: Communications :: File Sharing",
  "Topic :: Software Development :: Version Control",
  "Topic :: System :: Software Distribution"

]

[[tool.poetry.packages]]
include = "hoppr"

[tool.poetry.scripts]
hopctl = "hoppr.cli.hopctl:app"

[tool.poetry.dependencies]
python = "^3.10"
typer = "^0.7.0"
PyYAML = "^6.0"
oras = "^0.1.17"
types-PyYAML = "^6.0.5"
packageurl-python = "^0.10.0"
hoppr-cyclonedx-models = "0.4.7"
jc = "^1.22.2"
pydantic-yaml = "^0.10.0"
jmespath = "^1.0.1"
Jinja2 = "^3.1.2"
in-toto = "^1.3.1"
securesystemslib = "0.26.0"

[tool.poetry.dependencies.pydantic]
extras = ["email"]
version = "^1.9.0"

[tool.poetry.group.dev.dependencies]
black = "^22.1.0"
isort = "^5.10.1"
pre-commit = "^3.0.0"
setuptools = "^67.0.0"
shfmt-py = "^3.4.3.1"
dill = "^0.3.6"

[tool.poetry.group.test.dependencies]
mypy = "^0.961"
pylint = "^2.12.2"
pytest = "^7.0.1"
pytest-cov = "^4.0.0"
pytest-mock = "^3.10.0"
pytest-pretty = "^1.1.0"
types-mock = "^5.0.0.2"
types-requests = "^2.27.15"
types-setuptools = "^67.1.0.0"

[tool.black]
color = true
line-length = 120
skip-string-normalization = true
target-version = ["py310"]

[tool.coverage.report]
exclude_lines = [
  "pragma: no cover",
  "if TYPE_CHECKING:",
]
precision = 2
skip_covered = true
skip_empty = true

[tool.isort]
atomic = true
lines_between_types = 1
line_length = 120
profile = "black"
py_version = 310
skip_gitignore = true

[tool.mypy]
explicit_package_bases = true
follow_imports = "silent"
namespace_packages = true
no_implicit_reexport = true
plugins = ["pydantic.mypy"]
pretty = true
python_version = "3.10"
show_error_codes = true
warn_redundant_casts = true

[[tool.mypy.overrides]]
module = ["test.*", "jc", "jmespath", "oras.*", "packageurl", "xmltodict"]
allow_untyped_defs = true
allow_incomplete_defs = true
allow_untyped_calls = true
ignore_missing_imports = true

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pylint.main]
extension-pkg-whitelist = ["pydantic"]
init-hook = """\
  from pylint.config import find_default_config_files;\
  import sys;\
  sys.path.append(str(list(find_default_config_files())[0].parent / 'hoppr'))\
  """
py-version = "3.9"

[tool.pylint.classes]
valid-metaclass-classmethod-first-arg = ["cls", "mcs"]

[tool.pylint.format]
max-line-length = 120

[tool.pylint.messages_control]
confidence = ["HIGH", "CONTROL_FLOW", "INFERENCE", "INFERENCE_FAILURE", "UNDEFINED"]
disable = [
  "raw-checker-failed",
  "bad-inline-option",
  "locally-disabled",
  "file-ignored",
  "suppressed-message",
  "useless-suppression",
  "deprecated-pragma",
  "use-symbolic-message-instead",
  "use-dict-literal"
]
enable = ["c-extension-no-member"]

[tool.pytest.ini_options]
addopts = [
  "--strict-markers",
  "--cov=hoppr",
  "--cov-report=term-missing",
  "--cov-report=xml",
  "--cov-fail-under=100",
  "--junit-xml=test.xml"
]
console_output_style = "progress"
junit_family = "xunit2"
testpaths = ["test"]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
