
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftLTGTLEGEEQNEQleftSHRUSHRSHLleftBINORleftBINXORleftBINANDleftADDSUBleftMULrightUMINUSADD ASSIGN BINAND BINOR BINXOR COMMA EQ GE GT LBRACKET LE LPAREN LT MUL NAME NEQ NEWLINE NUMBER RBRACKET RPAREN SHL SHR SHRU SUBlines : line\n             | expression\n             | lines line\n    line : expression NEWLINE\n            | NEWLINE\n    expression : expression ADD expression\n                  | expression SUB expression\n                  | expression MUL expression\n                  | expression BINAND expression\n                  | expression BINOR expression\n                  | expression BINXOR expression\n                  | expression SHRU expression\n                  | expression SHR expression\n                  | expression SHL expression\n                  | expression LT expression\n                  | expression GT expression\n                  | expression LE expression\n                  | expression GE expression\n                  | expression EQ expression\n                  | expression NEQ expression\n    expression : NAME LBRACKET NUMBER RBRACKET ASSIGN expressionexpression : NAME LPAREN NUMBER RPARENexpression : NAME LPAREN expression COMMA expression RPARENexpression : NAME LPAREN NUMBER COMMA NAME ASSIGN     NUMBER COMMA NAME ASSIGN NUMBER RPAREN\n                  | NAME LPAREN NUMBER COMMA NAME ASSIGN     NUMBER COMMA NAME ASSIGN NUMBER COMMA NAME ASSIGN NUMBER RPAREN\n                  | NAME LPAREN NUMBER COMMA NAME ASSIGN expression COMMA NAME ASSIGN NUMBER COMMA NAME ASSIGN NUMBER RPAREN\n                  | NAME LPAREN NUMBER COMMA NAME ASSIGN     NUMBER COMMA NAME ASSIGN NUMBER COMMA NAME ASSIGN NUMBER COMMA NAME ASSIGN NUMBER RPAREN\n    expression : LPAREN expression RPARENexpression : NAME LBRACKET NUMBER RBRACKETexpression : NUMBER\n                  | SUB NUMBER %prec UMINUS\n    expression : NAME'
    
_lr_action_items = {'NEWLINE':([0,1,2,3,4,6,7,9,10,11,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,57,59,71,80,81,85,],[4,4,-1,11,-5,-32,-30,-3,11,-4,-31,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-28,-29,-22,-21,-23,-24,-25,-26,-27,]),'NAME':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,52,53,54,57,58,59,62,63,70,71,72,79,80,81,85,],[6,6,-1,-2,-5,-32,-30,6,-3,-4,6,6,6,6,6,6,6,6,6,6,6,6,6,6,6,-31,6,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-28,-29,-22,55,6,6,-21,6,-23,64,65,73,-24,74,82,-25,-26,-27,]),'LPAREN':([0,1,2,3,4,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,53,54,57,58,59,71,80,81,85,],[8,8,-1,-2,-5,29,-30,8,-3,-4,8,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-31,8,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-28,-29,-22,8,8,-21,8,-23,-24,-25,-26,-27,]),'NUMBER':([0,1,2,3,4,5,6,7,8,9,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,53,54,57,58,59,66,67,71,75,76,80,81,83,85,],[7,7,-1,-2,-5,27,-32,-30,7,-3,-4,7,7,7,7,7,7,7,7,7,7,7,7,7,7,7,-31,46,47,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-28,-29,-22,7,7,-21,60,-23,68,69,-24,77,78,-25,-26,84,-27,]),'SUB':([0,1,2,3,4,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,53,54,56,57,58,59,60,61,71,80,81,85,],[5,5,-1,13,-5,-32,-30,5,-3,13,-4,5,5,5,5,5,5,5,5,5,5,5,5,5,5,5,-31,5,13,-6,-7,-8,13,13,13,13,13,13,13,13,13,13,13,13,-30,13,-28,-29,-22,5,5,13,13,5,-23,-30,13,-24,-25,-26,-27,]),'$end':([1,2,3,4,6,7,9,11,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,49,50,51,57,59,71,80,81,85,],[0,-1,-2,-5,-32,-30,-3,-4,-31,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-28,-29,-22,-21,-23,-24,-25,-26,-27,]),'ADD':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[12,-32,-30,12,-31,12,-6,-7,-8,12,12,12,12,12,12,12,12,12,12,12,12,-30,12,-28,-29,-22,12,12,-23,-30,12,-24,-25,-26,-27,]),'MUL':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[14,-32,-30,14,-31,14,14,14,-8,14,14,14,14,14,14,14,14,14,14,14,14,-30,14,-28,-29,-22,14,14,-23,-30,14,-24,-25,-26,-27,]),'BINAND':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[15,-32,-30,15,-31,15,-6,-7,-8,-9,15,15,15,15,15,15,15,15,15,15,15,-30,15,-28,-29,-22,15,15,-23,-30,15,-24,-25,-26,-27,]),'BINOR':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[16,-32,-30,16,-31,16,-6,-7,-8,-9,-10,-11,16,16,16,16,16,16,16,16,16,-30,16,-28,-29,-22,16,16,-23,-30,16,-24,-25,-26,-27,]),'BINXOR':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[17,-32,-30,17,-31,17,-6,-7,-8,-9,17,-11,17,17,17,17,17,17,17,17,17,-30,17,-28,-29,-22,17,17,-23,-30,17,-24,-25,-26,-27,]),'SHRU':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[18,-32,-30,18,-31,18,-6,-7,-8,-9,-10,-11,-12,-13,-14,18,18,18,18,18,18,-30,18,-28,-29,-22,18,18,-23,-30,18,-24,-25,-26,-27,]),'SHR':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[19,-32,-30,19,-31,19,-6,-7,-8,-9,-10,-11,-12,-13,-14,19,19,19,19,19,19,-30,19,-28,-29,-22,19,19,-23,-30,19,-24,-25,-26,-27,]),'SHL':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[20,-32,-30,20,-31,20,-6,-7,-8,-9,-10,-11,-12,-13,-14,20,20,20,20,20,20,-30,20,-28,-29,-22,20,20,-23,-30,20,-24,-25,-26,-27,]),'LT':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[21,-32,-30,21,-31,21,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-30,21,-28,-29,-22,21,21,-23,-30,21,-24,-25,-26,-27,]),'GT':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[22,-32,-30,22,-31,22,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-30,22,-28,-29,-22,22,22,-23,-30,22,-24,-25,-26,-27,]),'LE':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[23,-32,-30,23,-31,23,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-30,23,-28,-29,-22,23,23,-23,-30,23,-24,-25,-26,-27,]),'GE':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[24,-32,-30,24,-31,24,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-30,24,-28,-29,-22,24,24,-23,-30,24,-24,-25,-26,-27,]),'EQ':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[25,-32,-30,25,-31,25,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-30,25,-28,-29,-22,25,25,-23,-30,25,-24,-25,-26,-27,]),'NEQ':([3,6,7,10,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,56,57,59,60,61,71,80,81,85,],[26,-32,-30,26,-31,26,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-30,26,-28,-29,-22,26,26,-23,-30,26,-24,-25,-26,-27,]),'LBRACKET':([6,],[28,]),'RPAREN':([6,7,27,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,49,50,51,56,57,59,68,71,77,78,80,81,84,85,],[-32,-30,-31,49,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,51,-28,-29,-22,59,-21,-23,71,-24,80,81,-25,-26,85,-27,]),'COMMA':([6,7,27,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,47,48,49,50,51,57,59,60,61,68,69,71,77,80,81,85,],[-32,-30,-31,-6,-7,-8,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,52,53,-28,-29,-22,-21,-23,62,63,70,72,-24,79,-25,-26,-27,]),'RBRACKET':([46,],[50,]),'ASSIGN':([50,55,64,65,73,74,82,],[54,58,66,67,75,76,83,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'lines':([0,],[1,]),'line':([0,1,],[2,9,]),'expression':([0,1,8,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,29,53,54,58,],[3,10,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,48,56,57,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> lines","S'",1,None,None,None),
  ('lines -> line','lines',1,'p_lines','parser.py',477),
  ('lines -> expression','lines',1,'p_lines','parser.py',478),
  ('lines -> lines line','lines',2,'p_lines','parser.py',479),
  ('line -> expression NEWLINE','line',2,'p_line','parser.py',493),
  ('line -> NEWLINE','line',1,'p_line','parser.py',494),
  ('expression -> expression ADD expression','expression',3,'p_expression_binop','parser.py',521),
  ('expression -> expression SUB expression','expression',3,'p_expression_binop','parser.py',522),
  ('expression -> expression MUL expression','expression',3,'p_expression_binop','parser.py',523),
  ('expression -> expression BINAND expression','expression',3,'p_expression_binop','parser.py',524),
  ('expression -> expression BINOR expression','expression',3,'p_expression_binop','parser.py',525),
  ('expression -> expression BINXOR expression','expression',3,'p_expression_binop','parser.py',526),
  ('expression -> expression SHRU expression','expression',3,'p_expression_binop','parser.py',527),
  ('expression -> expression SHR expression','expression',3,'p_expression_binop','parser.py',528),
  ('expression -> expression SHL expression','expression',3,'p_expression_binop','parser.py',529),
  ('expression -> expression LT expression','expression',3,'p_expression_binop','parser.py',530),
  ('expression -> expression GT expression','expression',3,'p_expression_binop','parser.py',531),
  ('expression -> expression LE expression','expression',3,'p_expression_binop','parser.py',532),
  ('expression -> expression GE expression','expression',3,'p_expression_binop','parser.py',533),
  ('expression -> expression EQ expression','expression',3,'p_expression_binop','parser.py',534),
  ('expression -> expression NEQ expression','expression',3,'p_expression_binop','parser.py',535),
  ('expression -> NAME LBRACKET NUMBER RBRACKET ASSIGN expression','expression',6,'p_expression_assign','parser.py',582),
  ('expression -> NAME LPAREN NUMBER RPAREN','expression',4,'p_expression_call1','parser.py',595),
  ('expression -> NAME LPAREN expression COMMA expression RPAREN','expression',6,'p_expression_call2','parser.py',601),
  ('expression -> NAME LPAREN NUMBER COMMA NAME ASSIGN NUMBER COMMA NAME ASSIGN NUMBER RPAREN','expression',12,'p_expression_call3','parser.py',616),
  ('expression -> NAME LPAREN NUMBER COMMA NAME ASSIGN NUMBER COMMA NAME ASSIGN NUMBER COMMA NAME ASSIGN NUMBER RPAREN','expression',16,'p_expression_call3','parser.py',617),
  ('expression -> NAME LPAREN NUMBER COMMA NAME ASSIGN expression COMMA NAME ASSIGN NUMBER COMMA NAME ASSIGN NUMBER RPAREN','expression',16,'p_expression_call3','parser.py',618),
  ('expression -> NAME LPAREN NUMBER COMMA NAME ASSIGN NUMBER COMMA NAME ASSIGN NUMBER COMMA NAME ASSIGN NUMBER COMMA NAME ASSIGN NUMBER RPAREN','expression',20,'p_expression_call3','parser.py',619),
  ('expression -> LPAREN expression RPAREN','expression',3,'p_expression_group','parser.py',644),
  ('expression -> NAME LBRACKET NUMBER RBRACKET','expression',4,'p_expression_storage','parser.py',649),
  ('expression -> NUMBER','expression',1,'p_expression_number','parser.py',657),
  ('expression -> SUB NUMBER','expression',2,'p_expression_number','parser.py',658),
  ('expression -> NAME','expression',1,'p_expression_name','parser.py',667),
]
