{"version":3,"sources":["Screen.tsx","index.tsx"],"names":["Screen","_StreamlitComponentBa","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","render","_jsx","_handleWindowResize","bind","_assertThisInitialized","_createClass","key","value","window","addEventListener","this","removeEventListener","Streamlit","setComponentValue","_window","innerWidth","innerHeight","getWindowSize","StreamlitComponentBase","withStreamlitConnection","ReactDOM","React","StrictMode","children","document","getElementById"],"mappings":"6NAaMA,EAAM,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACV,SAAAA,EAAYK,GAAa,IAADC,EAEwC,OAFxCC,YAAA,KAAAP,IACtBM,EAAAH,EAAAK,KAAA,KAAMH,IAgBDI,OAAS,WAId,OACEC,cAAA,SAGJ,EAvBEJ,EAAKK,oBAAsBL,EAAKK,oBAAoBC,KAAIC,YAAAP,IAAMA,CAChE,CAYC,OAZAQ,YAAAd,EAAA,EAAAe,IAAA,oBAAAC,MAED,WACEC,OAAOC,iBAAiB,SAAUC,KAAKR,qBACvCQ,KAAKR,qBACP,GAAC,CAAAI,IAAA,uBAAAC,MACD,WACEC,OAAOG,oBAAoB,SAAUD,KAAKR,qBAC1CQ,KAAKR,qBACP,GAAC,CAAAI,IAAA,sBAAAC,MACD,WACEK,IAAUC,kBAnBQ,WACpB,IAAAC,EAAoCN,OACpC,MAAO,CAAEO,WADSD,EAAVC,WACaC,YADUF,EAAXE,YAEtB,CAgBgCC,GAC9B,KAAC1B,CAAA,CAhBS,CAAS2B,KA8BNC,cAAwB5B,GCvCvC6B,IAASpB,OACPC,cAACoB,IAAMC,WAAU,CAAAC,SACftB,cAACV,EAAM,MAETiC,SAASC,eAAe,Q","file":"static/js/main.061ca5f4.chunk.js","sourcesContent":["import {\r\n  Streamlit,\r\n  StreamlitComponentBase,\r\n  withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\n\r\n// the `render()` function is called when component is re-rendered\r\n\r\nconst getWindowSize = () => {\r\n  const { innerWidth, innerHeight } = window\r\n  return { innerWidth, innerHeight }\r\n}\r\nclass Screen extends StreamlitComponentBase<any> {\r\n  constructor(props: any) {\r\n    super(props)\r\n    this._handleWindowResize = this._handleWindowResize.bind(this)\r\n  }\r\n\r\n  componentDidMount() {\r\n    window.addEventListener(\"resize\", this._handleWindowResize)\r\n    this._handleWindowResize()\r\n  }\r\n  componentWillUnmount() {\r\n    window.removeEventListener(\"resize\", this._handleWindowResize)\r\n    this._handleWindowResize()\r\n  }\r\n  _handleWindowResize() {\r\n    Streamlit.setComponentValue(getWindowSize())\r\n  }\r\n\r\n  public render = (): ReactNode => {\r\n    // Arguments that are passed to the plugin in Python are accessible\r\n    // via `this.props.args`\r\n    \r\n    return (\r\n      <div >\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\n// connection between component and Streamlit\r\nexport default withStreamlitConnection(Screen)\r\n","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport Screen from \"./Screen\"\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Screen />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}