{"version":3,"sources":["PostCard.tsx","index.tsx"],"names":["CardComponent","_StreamlitComponentBa","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","url","render","title","props","subtitle","body","link","github","img_link","post","date","_jsx","style","padding","children","_jsxs","Card","variant","display","width","transitionDuration","height","CardHeader","subheader","CardMedia","component","src","CardContent","Typography","CardActions","disableSpacing","Button","size","onClick","window","open","setState","Streamlit","setComponentValue","_createClass","StreamlitComponentBase","withStreamlitConnection","ReactDOM","React","StrictMode","Postcard","document","getElementById"],"mappings":"8QAcMA,EAAa,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAiEhB,OAjEgBP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACVM,MAAQ,CAAEC,IAAK,MAAMZ,EAErBa,OAAS,WAGd,IAAMC,EAAQd,EAAKe,MAAMV,KAAY,MAC/BW,EAAWhB,EAAKe,MAAMV,KAAe,SACrCY,EAAOjB,EAAKe,MAAMV,KAAkB,YACpCa,EAAOlB,EAAKe,MAAMV,KAAU,IAC5Bc,EAASnB,EAAKe,MAAMV,KAAa,OACjCe,EAAWpB,EAAKe,MAAMV,KAAe,SACrCgB,EAAOrB,EAAKe,MAAMV,KAAW,KAC7BiB,EAAOtB,EAAKe,MAAMV,KAAW,KAQnC,OACEkB,cAAA,OAAKC,MAAO,CAAEC,QAAS,UAAWC,SAChCC,eAACC,IAAI,CAACC,QAAQ,WAAWL,MATb,CACdM,QAAS,QACTC,MAAO,MACPC,mBAAoB,OACpBC,OAAQ,OAKoCP,SAAA,CACvCZ,GAASS,cAACW,IAAU,CAACpB,MAAOA,EAAOqB,UAAWb,IAC9CF,GACCG,cAACa,IAAS,CAACC,UAAU,MAAMJ,OAAO,MAAMK,IAAKlB,IAG/CO,eAACY,IAAW,CAAAb,SAAA,CACTV,GAAYO,cAACW,IAAU,CAACC,UAAWnB,IACnCC,GAAQM,cAACiB,IAAU,CAACX,QAAQ,QAAOH,SAAET,OAExCU,eAACc,IAAW,CAACC,gBAAc,EAAAhB,SAAA,CACxBP,GACCI,cAACoB,IAAM,CACLC,KAAK,QACLC,QAAS,kBAAMC,OAAOC,KAAK5B,EAAQ,SAAS,EAACO,SAC9C,WAIFR,GACCK,cAACoB,IAAM,CAACC,KAAK,QAAQC,QAAS,kBAAMC,OAAOC,KAAK7B,EAAM,SAAS,EAACQ,SAAC,SAKlEL,GACCE,cAACoB,IAAM,CACLC,KAAK,QACLC,QAAS,kBACP7C,EAAKgD,UACH,iBAAO,CAAEpC,IAAKS,EAAM,IACpB,kBAAM4B,IAAUC,kBAAkBlD,EAAKW,MAAMC,IAAI,GAClD,EACFc,SACF,wBAQb,EAAC1B,CAAA,QAAAmD,YAAAxD,EAAA,CAjEgB,CAASyD,KAqEbC,cAAwB1D,GC/EvC2D,IAASzC,OACPU,cAACgC,IAAMC,WAAU,CAAA9B,SACfH,cAACkC,EAAQ,MAEXC,SAASC,eAAe,Q","file":"static/js/main.19002e51.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport Card from \"@mui/material/Card\"\nimport CardHeader from \"@mui/material/CardHeader\"\nimport CardMedia from \"@mui/material/CardMedia\"\nimport CardContent from \"@mui/material/CardContent\"\nimport { Typography, CardActions } from \"@mui/material\"\nimport Button from \"@mui/material/Button\"\n\n// the `render()` function is called when component is re-rendered\nclass CardComponent extends StreamlitComponentBase<any> {\n  public state = { url: null }\n\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`\n    const title = this.props.args[\"title\"]\n    const subtitle = this.props.args[\"subtitle\"]\n    const body = this.props.args[\"description\"]\n    const link = this.props.args[\"url\"]\n    const github = this.props.args[\"github\"]\n    const img_link = this.props.args[\"img_path\"]\n    const post = this.props.args[\"post\"]\n    const date = this.props.args[\"date\"]\n    var cardStyle = {\n      display: \"block\",\n      width: \"100\",\n      transitionDuration: \"0.3s\",\n      height: \"100\",\n    }\n\n    return (\n      <div style={{ padding: \"0.5rem\" }}>\n        <Card variant=\"outlined\" style={cardStyle}>\n          {title && <CardHeader title={title} subheader={date} />}\n          {img_link && (\n            <CardMedia component=\"img\" height=\"200\" src={img_link} />\n          )}\n\n          <CardContent>\n            {subtitle && <CardHeader subheader={subtitle} />}\n            {body && <Typography variant=\"body2\">{body}</Typography>}\n          </CardContent>\n          <CardActions disableSpacing>\n            {github && (\n              <Button\n                size=\"small\"\n                onClick={() => window.open(github, \"_blank\")}\n              >\n                github\n              </Button>\n            )}\n            {link && (\n              <Button size=\"small\" onClick={() => window.open(link, \"_blank\")}>\n                link\n              </Button>\n            )}\n\n            {post && (\n              <Button\n                size=\"small\"\n                onClick={() =>\n                  this.setState(\n                    () => ({ url: post }),\n                    () => Streamlit.setComponentValue(this.state.url)\n                  )\n                }\n              >\n                Open Article\n              </Button>\n            )}\n          </CardActions>\n        </Card>\n      </div>\n    )\n  }\n}\n\n// connection between component and Streamlit\nexport default withStreamlitConnection(CardComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Postcard from \"./PostCard\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Postcard />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}