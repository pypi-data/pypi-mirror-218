{"version":3,"sources":["PostCard.tsx","index.tsx"],"names":["CardComponent","_StreamlitComponentBa","_inherits","_super","_createSuper","_this","_classCallCheck","_len","arguments","length","args","Array","_key","call","apply","concat","state","url","render","title","props","subtitle","body","link","github","img_link","post","date","_jsx","style","padding","children","_jsxs","Card","variant","CardHeader","subheader","CardMedia","component","height","src","CardContent","Typography","CardActions","disableSpacing","Button","size","onClick","window","open","setState","Streamlit","setComponentValue","_createClass","StreamlitComponentBase","withStreamlitConnection","ReactDOM","React","StrictMode","Postcard","document","getElementById"],"mappings":"8QAcMA,EAAa,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GAAA,SAAAA,IAAA,IAAAK,EAAAC,YAAA,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAmDhB,OAnDgBP,EAAAF,EAAAU,KAAAC,MAAAX,EAAA,OAAAY,OAAAL,KACVM,MAAQ,CAAEC,IAAK,MAAMZ,EAErBa,OAAS,WAGd,IAAMC,EAAQd,EAAKe,MAAMV,KAAY,MAC/BW,EAAWhB,EAAKe,MAAMV,KAAe,SACrCY,EAAOjB,EAAKe,MAAMV,KAAkB,YACpCa,EAAOlB,EAAKe,MAAMV,KAAU,IAC5Bc,EAASnB,EAAKe,MAAMV,KAAa,OACjCe,EAAWpB,EAAKe,MAAMV,KAAe,SACrCgB,EAAOrB,EAAKe,MAAMV,KAAW,KAC7BiB,EAAOtB,EAAKe,MAAMV,KAAW,KAEnC,OACEkB,cAAA,OAAKC,MAAO,CAAEC,QAAS,UAAWC,SAChCC,eAACC,IAAI,CAACC,QAAQ,WAAUH,SAAA,CACtBH,cAACO,IAAU,CAAChB,MAAOA,EAAOiB,UAAWT,IACrCC,cAACS,IAAS,CAACC,UAAU,MAAMC,OAAO,MAAMC,IAAKf,IAC7CG,cAACO,IAAU,CAACC,UAAWf,IACvBO,cAACa,IAAW,CAAAV,SACVH,cAACc,IAAU,CAACR,QAAQ,QAAOH,SAAET,MAE/BU,eAACW,IAAW,CAACC,gBAAc,EAAAb,SAAA,CACzBH,cAACiB,IAAM,CAACC,KAAK,QAAQC,QAAS,kBAAMC,OAAOC,KAAKzB,EAAQ,SAAS,EAACO,SAAC,WAGlER,GACCK,cAACiB,IAAM,CAACC,KAAK,QAAQC,QAAS,kBAAMC,OAAOC,KAAK1B,EAAM,SAAS,EAACQ,SAAC,SAKlEL,GACCE,cAACiB,IAAM,CACLC,KAAK,QACLC,QAAS,kBACP1C,EAAK6C,UACH,iBAAO,CAAEjC,IAAKS,EAAM,IACpB,kBAAMyB,IAAUC,kBAAkB/C,EAAKW,MAAMC,IAAI,GAClD,EACFc,SACF,wBAQb,EAAC1B,CAAA,QAAAgD,YAAArD,EAAA,CAnDgB,CAASsD,KAuDbC,cAAwBvD,GCjEvCwD,IAAStC,OACPU,cAAC6B,IAAMC,WAAU,CAAA3B,SACfH,cAAC+B,EAAQ,MAEXC,SAASC,eAAe,Q","file":"static/js/main.5833844e.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport Card from \"@mui/material/Card\"\nimport CardHeader from \"@mui/material/CardHeader\"\nimport CardMedia from \"@mui/material/CardMedia\"\nimport CardContent from \"@mui/material/CardContent\"\nimport { Typography, CardActions } from \"@mui/material\"\nimport Button from \"@mui/material/Button\"\n\n// the `render()` function is called when component is re-rendered\nclass CardComponent extends StreamlitComponentBase<any> {\n  public state = { url: null }\n\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`\n    const title = this.props.args[\"title\"]\n    const subtitle = this.props.args[\"subtitle\"]\n    const body = this.props.args[\"description\"]\n    const link = this.props.args[\"url\"]\n    const github = this.props.args[\"github\"]\n    const img_link = this.props.args[\"img_path\"]\n    const post = this.props.args[\"post\"]\n    const date = this.props.args[\"date\"]\n\n    return (\n      <div style={{ padding: \"0.5rem\" }}>\n        <Card variant=\"outlined\">\n          <CardHeader title={title} subheader={date} />\n          <CardMedia component=\"img\" height=\"200\" src={img_link} />\n          <CardHeader subheader={subtitle} />\n          <CardContent>\n            <Typography variant=\"body2\">{body}</Typography>\n          </CardContent>\n          <CardActions disableSpacing>\n            <Button size=\"small\" onClick={() => window.open(github, \"_blank\")}>\n              github\n            </Button>\n            {link && (\n              <Button size=\"small\" onClick={() => window.open(link, \"_blank\")}>\n                link\n              </Button>\n            )}\n\n            {post && (\n              <Button\n                size=\"small\"\n                onClick={() =>\n                  this.setState(\n                    () => ({ url: post }),\n                    () => Streamlit.setComponentValue(this.state.url)\n                  )\n                }\n              >\n                Open Article\n              </Button>\n            )}\n          </CardActions>\n        </Card>\n      </div>\n    )\n  }\n}\n\n// connection between component and Streamlit\nexport default withStreamlitConnection(CardComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Postcard from \"./PostCard\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Postcard />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}