{"version":3,"sources":["PostCard.tsx","index.tsx"],"names":["getWindowSize","_window","window","innerWidth","innerHeight","CardComponent","_StreamlitComponentBa","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","state","url","height","render","title","args","subtitle","body","link","github","img_link","post","date","cardStyle","minWidth","maxWidth","transitionDuration","_jsx","style","padding","children","_jsxs","Card","variant","CardHeader","subheader","CardMedia","component","src","CardContent","Typography","CardActions","disableSpacing","Button","size","onClick","open","setState","Streamlit","setComponentValue","_handleWindowResize","bind","_assertThisInitialized","_createClass","key","value","addEventListener","this","removeEventListener","Math","floor","console","log","StreamlitComponentBase","withStreamlitConnection","ReactDOM","React","StrictMode","Postcard","document","getElementById"],"mappings":"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","file":"static/js/main.ff14e290.chunk.js","sourcesContent":["import {\n  Streamlit,\n  StreamlitComponentBase,\n  withStreamlitConnection,\n} from \"streamlit-component-lib\"\nimport React, { ReactNode } from \"react\"\nimport Card from \"@mui/material/Card\"\nimport CardHeader from \"@mui/material/CardHeader\"\nimport CardMedia from \"@mui/material/CardMedia\"\nimport CardContent from \"@mui/material/CardContent\"\nimport { Typography, CardActions } from \"@mui/material\"\nimport Button from \"@mui/material/Button\"\n\n// the `render()` function is called when component is re-rendered\n\nconst getWindowSize = () => {\n  const { innerWidth, innerHeight } = window\n  return { innerWidth, innerHeight }\n}\nclass CardComponent extends StreamlitComponentBase<any> {\n  constructor(props: any) {\n    super(props)\n    this._handleWindowResize = this._handleWindowResize.bind(this)\n  }\n  public state = { url: null, height: \"450px\" }\n\n  componentDidMount() {\n    window.addEventListener(\"resize\", this._handleWindowResize)\n  }\n\n  componentWillUnmount() {\n    window.removeEventListener(\"resize\", this._handleWindowResize)\n  }\n\n  _handleWindowResize() {\n    if (getWindowSize().innerWidth < 200) {\n      this.setState(() => ({\n        height: Math.floor(700),\n      }))\n    } else if (getWindowSize().innerWidth < 300) {\n      this.setState(() => ({\n        height: Math.floor(600),\n      }))\n    } else if (getWindowSize().innerWidth < 440) {\n      this.setState(() => ({\n        height: Math.floor(500),\n      }))\n    } else {\n      this.setState(() => ({\n        height: Math.floor(450),\n      }))\n    }\n    console.log(getWindowSize())\n    console.log(this.state.height)\n  }\n\n  public render = (): ReactNode => {\n    // Arguments that are passed to the plugin in Python are accessible\n    // via `this.props.args`\n    const title = this.props.args[\"title\"]\n    const subtitle = this.props.args[\"subtitle\"]\n    const body = this.props.args[\"description\"]\n    const link = this.props.args[\"url\"]\n    const github = this.props.args[\"github\"]\n    const img_link = this.props.args[\"img_path\"]\n    const post = this.props.args[\"post\"]\n    const date = this.props.args[\"date\"]\n    var cardStyle = {\n      minWidth: \"100\",\n      maxWidth: \"100\",\n      transitionDuration: \"0.3s\",\n      height: this.state.height,\n    }\n\n    return (\n      <div style={{ padding: \"0.5rem\" }}>\n        <Card variant=\"outlined\" style={cardStyle}>\n          {title && <CardHeader title={title} subheader={date} />}\n          {img_link && (\n            <CardMedia component=\"img\" height=\"200\" src={img_link} />\n          )}\n\n          <CardContent>\n            {subtitle && <CardHeader subheader={subtitle} />}\n            {body && <Typography variant=\"body2\">{body}</Typography>}\n          </CardContent>\n          <CardActions disableSpacing>\n            {github && (\n              <Button\n                size=\"small\"\n                onClick={() => window.open(github, \"_blank\")}\n              >\n                github\n              </Button>\n            )}\n            {link && (\n              <Button size=\"small\" onClick={() => window.open(link, \"_blank\")}>\n                link\n              </Button>\n            )}\n\n            {post && (\n              <Button\n                size=\"small\"\n                onClick={() =>\n                  this.setState(\n                    () => ({ url: post }),\n                    () => Streamlit.setComponentValue(this.state.url)\n                  )\n                }\n              >\n                Open Article\n              </Button>\n            )}\n          </CardActions>\n        </Card>\n      </div>\n    )\n  }\n}\n\n// connection between component and Streamlit\nexport default withStreamlitConnection(CardComponent)\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport Postcard from \"./PostCard\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <Postcard />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n"],"sourceRoot":""}