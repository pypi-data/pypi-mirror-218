Metadata-Version: 2.1
Name: crelm
Version: 0.0.36
Summary: Utility that automates turning simple C classes into Python objects
Home-page: https://github.com/wideopensource/crelm
Author: WideOpenTech
Author-email: foss@wideopentech.co.uk
Requires-Python: >=3.8,<4.0
Classifier: License :: OSI Approved :: MIT License
Classifier: Operating System :: OS Independent
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.8
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Classifier: Programming Language :: Python :: 3
Requires-Dist: cffi (>=1.15.1,<2.0.0)
Requires-Dist: john (>=0.1.1a2,<0.2.0)
Requires-Dist: pexpect (>=4.8.0,<5.0.0)
Project-URL: Repository, https://github.com/wideopensource/crelm
Description-Content-Type: text/markdown

# Crelm
The Crelm package provides a relatively simple API around the CFFI system. Give it C code or source files, it gives you a package with bindings to functions and `struct`s. Easiest way to get started is hack up the examples in [the repo](https://github.com/wideopensource/crelm/tree/main/examples).

### Installation

pip3 install crelm

### Simple Demo

```
from crelm import Factory

paste = Factory(debug=False, verbose=True).create_Tube('add2') \
    .add_source_text('int add2(int a, int b) { return a + b; }') \
    .squeeze()

print(f'2 + 3 = {paste.add2(2, 3)}')
```

