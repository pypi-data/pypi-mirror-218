# coding: utf-8

"""
    Nomad Pilot

    This is the API descriptor for the Nomad Pilot API, responsible for shipping and logistics processing. Developed by [Samarkand Global](https://www.samarkand.global/) in partnership with [SF Express](https://www.sf-express.com/), [eSinotrans](http://air.esinotrans.com/), [sto](http://sto-express.co.uk/). Read the documentation online at [Nomad API Suite](https://api.samarkand.io/). - Install for node with `npm install nomad_pilot_cli` - Install for python with `pip install nomad-pilot-cli` - Install for Maven users `groupId, com.gitlab.samarkand-nomad; artifactId, nomad-pilot-cli`  # noqa: E501

    The version of the OpenAPI document: 1.53.0
    Contact: paul@samarkand.global
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from nomad_pilot_cli.configuration import Configuration


class DeliveryStatus(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    allowed enum values
    """
    PREPARE_ORDER = "PREPARE_ORDER"
    SORT_ORDER = "SORT_ORDER"
    PACK_ORDER = "PACK_ORDER"
    ORDER_OUTBOUND = "ORDER_OUTBOUND"
    DELIVERY = "DELIVERY"
    FLIGHT_DEPARTURE = "FLIGHT_DEPARTURE"
    FLIGHT_ARRIVE = "FLIGHT_ARRIVE"
    CUSTOM_CLEAR = "CUSTOM_CLEAR"
    CUSTOM_CLEAR_COMPLETE = "CUSTOM_CLEAR_COMPLETE"
    CUSTOM_CLEAR_FAILURE = "CUSTOM_CLEAR_FAILURE"
    DOMESTIC_DELIVERY = "DOMESTIC_DELIVERY"
    DOMESTIC_IN_TRANSIT = "DOMESTIC_IN_TRANSIT"
    DOMESTIC_SIGNING = "DOMESTIC_SIGNING"
    DOMESTIC_SUCCESS = "DOMESTIC_SUCCESS"
    DOMESTIC_RETURNED = "DOMESTIC_RETURNED"
    DOMESTIC_FAILURE = "DOMESTIC_FAILURE"

    allowable_values = [PREPARE_ORDER, SORT_ORDER, PACK_ORDER, ORDER_OUTBOUND, DELIVERY, FLIGHT_DEPARTURE, FLIGHT_ARRIVE, CUSTOM_CLEAR, CUSTOM_CLEAR_COMPLETE, CUSTOM_CLEAR_FAILURE, DOMESTIC_DELIVERY, DOMESTIC_IN_TRANSIT, DOMESTIC_SIGNING, DOMESTIC_SUCCESS, DOMESTIC_RETURNED, DOMESTIC_FAILURE]  # noqa: E501

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
    }

    attribute_map = {
    }

    def __init__(self, local_vars_configuration=None):  # noqa: E501
        """DeliveryStatus - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration
        self.discriminator = None

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, DeliveryStatus):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, DeliveryStatus):
            return True

        return self.to_dict() != other.to_dict()
