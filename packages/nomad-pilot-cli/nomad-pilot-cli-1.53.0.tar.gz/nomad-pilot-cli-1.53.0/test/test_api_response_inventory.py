# coding: utf-8

"""
    Nomad Pilot

    This is the API descriptor for the Nomad Pilot API, responsible for shipping and logistics processing. Developed by [Samarkand Global](https://www.samarkand.global/) in partnership with [SF Express](https://www.sf-express.com/), [eSinotrans](http://air.esinotrans.com/), [sto](http://sto-express.co.uk/). Read the documentation online at [Nomad API Suite](https://api.samarkand.io/). - Install for node with `npm install nomad_pilot_cli` - Install for python with `pip install nomad-pilot-cli` - Install for Maven users `groupId, com.gitlab.samarkand-nomad; artifactId, nomad-pilot-cli`  # noqa: E501

    The version of the OpenAPI document: 1.53.0
    Contact: paul@samarkand.global
    Generated by: https://openapi-generator.tech
"""


from __future__ import absolute_import

import unittest
import datetime

import nomad_pilot_cli
from nomad_pilot_cli.models.api_response_inventory import ApiResponseInventory  # noqa: E501
from nomad_pilot_cli.rest import ApiException

class TestApiResponseInventory(unittest.TestCase):
    """ApiResponseInventory unit test stubs"""

    def setUp(self):
        pass

    def tearDown(self):
        pass

    def make_instance(self, include_optional):
        """Test ApiResponseInventory
            include_option is a boolean, when False only required
            params are included, when True both required and
            optional params are included """
        # model = nomad_pilot_cli.models.api_response_inventory.ApiResponseInventory()  # noqa: E501
        if include_optional :
            return ApiResponseInventory(
                code = 56, 
                message = '0', 
                connector_responses = [
                    nomad_pilot_cli.models.api_response_connector_response.ApiResponseConnectorResponse(
                        input = '{"product_id": 12121}', 
                        mapping_name = 'GetProductOp', 
                        api = [
                            '0'
                            ], 
                        http_request_raw_data = '-', 
                        code = 56, 
                        response = '0', 
                        response_en = '0', 
                        platform = 'youzan', 
                        request_count = 1, 
                        response_time = 1000, )
                    ], 
                products = [
                    nomad_pilot_cli.models.inventory_response_product.InventoryResponseProduct(
                        merchant_goods_no = '0', 
                        platform_goods_no = '0', 
                        warehouse_goods_no = '0', 
                        barcodes = '0', 
                        third_category_no = '0', 
                        goods_name = '0', 
                        shop_no = '0', 
                        stock_status = '0', 
                        stock_type = '0', 
                        total_num = '0', 
                        usable_num = '0', 
                        record_count = '0', 
                        brand_name = '0', 
                        manufacturer = '0', 
                        produce_address = '0', 
                        gross_weight = 1.337, 
                        net_weight = 1.337, 
                        safe_days = 56, 
                        advent_day = 56, )
                    ], 
                purchases = [
                    nomad_pilot_cli.models.inventory_response_purchase.InventoryResponsePurchase(
                        warehouse_purchase_no = '0', 
                        warehouse_goods_no = '0', 
                        supplier_no = '0', 
                        po_order_status = '0', 
                        storage_status = '0', 
                        create_time = '0', 
                        complete_time = '0', 
                        product_name = '0', 
                        receive_box_number = '0', 
                        gross_weight = '0', 
                        volume = '0', 
                        po_items = [
                            nomad_pilot_cli.models.inventory_purchase_item.InventoryPurchaseItem(
                                goods_no = '0', 
                                goods_name = '0', 
                                goods_status = '0', 
                                serial_no = '0', 
                                num_application = '0', 
                                un_qualified_qty = '0', 
                                qualified_qty = '0', 
                                real_instore_qty = '0', 
                                short_qty = '0', 
                                damaged_qty = '0', 
                                empty_qty = '0', 
                                expired_qty = '0', 
                                other_qty = '0', 
                                goods_damaged_qty = '0', 
                                deformed_qty = '0', 
                                error_qty = '0', 
                                excess_qty = '0', 
                                barcode_scan_fail_qty = '0', 
                                expiration_date_error_qty = '0', 
                                barcode_error_qty = '0', 
                                pollution_qty = '0', 
                                mark_unclear_qty = '0', 
                                remark = '0', 
                                order_line = '0', 
                                real_goods_status = '0', 
                                real_goods_level = '0', 
                                check_result_str = '0', 
                                err_reason = '0', 
                                qc_time_str = '0', 
                                batch_code = '0', 
                                isv_goods_no = '0', )
                            ], 
                        qc_qualified_items = [
                            nomad_pilot_cli.models.inventory_purchase_item.InventoryPurchaseItem(
                                goods_no = '0', 
                                goods_name = '0', 
                                goods_status = '0', 
                                serial_no = '0', 
                                num_application = '0', 
                                un_qualified_qty = '0', 
                                qualified_qty = '0', 
                                real_instore_qty = '0', 
                                short_qty = '0', 
                                damaged_qty = '0', 
                                empty_qty = '0', 
                                expired_qty = '0', 
                                other_qty = '0', 
                                goods_damaged_qty = '0', 
                                deformed_qty = '0', 
                                error_qty = '0', 
                                excess_qty = '0', 
                                barcode_scan_fail_qty = '0', 
                                expiration_date_error_qty = '0', 
                                barcode_error_qty = '0', 
                                pollution_qty = '0', 
                                mark_unclear_qty = '0', 
                                remark = '0', 
                                order_line = '0', 
                                real_goods_status = '0', 
                                real_goods_level = '0', 
                                check_result_str = '0', 
                                err_reason = '0', 
                                qc_time_str = '0', 
                                batch_code = '0', 
                                isv_goods_no = '0', )
                            ], 
                        qc_unqualified_items = [
                            nomad_pilot_cli.models.inventory_purchase_item.InventoryPurchaseItem(
                                goods_no = '0', 
                                goods_name = '0', 
                                goods_status = '0', 
                                serial_no = '0', 
                                num_application = '0', 
                                un_qualified_qty = '0', 
                                qualified_qty = '0', 
                                real_instore_qty = '0', 
                                short_qty = '0', 
                                damaged_qty = '0', 
                                empty_qty = '0', 
                                expired_qty = '0', 
                                other_qty = '0', 
                                goods_damaged_qty = '0', 
                                deformed_qty = '0', 
                                error_qty = '0', 
                                excess_qty = '0', 
                                barcode_scan_fail_qty = '0', 
                                expiration_date_error_qty = '0', 
                                barcode_error_qty = '0', 
                                pollution_qty = '0', 
                                mark_unclear_qty = '0', 
                                remark = '0', 
                                order_line = '0', 
                                real_goods_status = '0', 
                                real_goods_level = '0', 
                                check_result_str = '0', 
                                err_reason = '0', 
                                qc_time_str = '0', 
                                batch_code = '0', 
                                isv_goods_no = '0', )
                            ], )
                    ]
            )
        else :
            return ApiResponseInventory(
        )

    def testApiResponseInventory(self):
        """Test ApiResponseInventory"""
        inst_req_only = self.make_instance(include_optional=False)
        inst_req_and_optional = self.make_instance(include_optional=True)


if __name__ == '__main__':
    unittest.main()
