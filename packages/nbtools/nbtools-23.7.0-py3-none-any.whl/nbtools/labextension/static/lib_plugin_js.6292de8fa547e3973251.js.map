{"version":3,"sources":["webpack://@g2nb/nbtools/./lib/plugin.js"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAA+D;AACA;AACP;AACX;AACE;AACE;AACA;AACA;AACQ;AACN;AACkB;AACb;AACb;AACkB;AAC7D,mEAAmE,EAAE,wCAAY,GAAG,sCAAgB,GAAG,uCAAiB;AACxH;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,oDAAa,EAAE,yDAAa;AAC3C,eAAe,yEAAsB,EAAE,yEAAgB;AACvD,eAAe,2DAAS,EAAE,qEAAe,EAAE,+DAAS,EAAE,mEAAgB;AACtE;AACA;AACA;AACA,iEAAe,cAAc,EAAC;AAC9B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,8BAA8B,mDAAY;AAC1C,8BAA8B,wDAAY;AAC1C;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,cAAc,iDAAW;AACzB,iBAAiB,oDAAc;AAC/B;AACA,KAAK;AACL;AACA,IAAI,qDAAa;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY;AACZ;AACA;AACA,IAAI,iEAA0B;AAC9B,IAAI,sEAA+B;AACnC,IAAI,6DAAsB;AAC1B,4BAA4B,qDAAc,CAAC;AAC3C;AACA;AACA;AACA;AACA;AACA;AACA;AACA,YAAY,iDAAS;AACrB;AACA;AACA;AACA,gBAAgB,2DAAqB;AACrC;AACA;AACA;AACA,SAAS;AACT,KAAK;AACL;AACA;AACA,6BAA6B,iDAAW;AACxC;AACA;AACA;AACA;AACA;AACA;AACA,yCAAyC,YAAY;AACrD;AACA;AACA;AACA;AACA,WAAW,oBAAoB;AAC/B,WAAW,UAAU;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA,qCAAqC,oBAAoB,GAAG,yBAAyB;AACrF","file":"lib_plugin_js.6292de8fa547e3973251.js","sourcesContent":["import { IJupyterWidgetRegistry } from '@jupyter-widgets/base';\nimport { ISettingRegistry } from '@jupyterlab/settingregistry';\nimport { MODULE_NAME, MODULE_VERSION } from './version';\nimport * as base_exports from './basewidget';\nimport * as uioutput_exports from './uioutput';\nimport * as uibuilder_exports from './uibuilder';\nimport { IMainMenu } from '@jupyterlab/mainmenu';\nimport { ToolBrowser, Toolbox } from \"./toolbox\";\nimport { IToolRegistry, ToolRegistry } from \"./registry\";\nimport { pulse_red, usage_tracker } from \"./utils\";\nimport { ILabShell, ILayoutRestorer } from \"@jupyterlab/application\";\nimport { INotebookTracker } from '@jupyterlab/notebook';\nimport { ContextManager } from \"./context\";\nimport { DataRegistry, IDataRegistry } from \"./dataregistry\";\nconst module_exports = Object.assign(Object.assign(Object.assign({}, base_exports), uioutput_exports), uibuilder_exports);\nconst EXTENSION_ID = '@g2nb/nbtools:plugin';\nconst NAMESPACE = 'nbtools';\n/**\n * The nbtools plugin.\n */\nconst nbtools_plugin = {\n    id: EXTENSION_ID,\n    provides: [IToolRegistry, IDataRegistry],\n    requires: [IJupyterWidgetRegistry, ISettingRegistry],\n    optional: [IMainMenu, ILayoutRestorer, ILabShell, INotebookTracker],\n    activate: activate_widget_extension,\n    autoStart: true\n};\nexport default nbtools_plugin;\n/**\n * Activate the widget extension.\n */\nasync function activate_widget_extension(app, widget_registry, settings, mainmenu, restorer, shell, notebook_tracker) {\n    // Initialize the ContextManager\n    init_context(app, notebook_tracker);\n    // Initialize settings\n    const setting_dict = await init_settings(settings);\n    // Create the tool and data registries\n    const tool_registry = new ToolRegistry(setting_dict);\n    const data_registry = new DataRegistry();\n    // Add items to the help menu\n    add_help_links(app, mainmenu);\n    // Add keyboard shortcuts\n    add_keyboard_shortcuts(app, tool_registry);\n    // Add the toolbox\n    add_tool_browser(app, restorer);\n    // Register the nbtools widgets with the widget registry\n    widget_registry.registerWidget({\n        name: MODULE_NAME,\n        version: MODULE_VERSION,\n        exports: module_exports,\n    });\n    // Register the plugin as loaded\n    usage_tracker('labextension_load', location.protocol + '//' + location.host + location.pathname);\n    // Return the tool registry so that it is provided to other extensions\n    return [tool_registry, data_registry];\n}\nasync function init_settings(settings) {\n    let setting = null;\n    try {\n        setting = await settings.load(EXTENSION_ID);\n    }\n    catch (_a) {\n        console.log('Unable to load nbtools settings');\n    }\n    return { force_render: setting ? setting.get('force_render').composite : true };\n}\nfunction init_context(app, notebook_tracker) {\n    ContextManager.jupyter_app = app;\n    ContextManager.notebook_tracker = notebook_tracker;\n    ContextManager.context();\n    window.ContextManager = ContextManager; // Left in for development purposes\n}\nfunction add_keyboard_shortcuts(app, tool_registry) {\n    app.commands.addCommand(\"nbtools:insert-tool\", {\n        label: 'Insert Notebook Tool',\n        execute: () => {\n            // Open the tool manager, if necessary\n            app.shell.activateById('nbtools-browser');\n            pulse_red(document.getElementById('nbtools-browser'));\n            // If only one tool is available, add it\n            const tools = tool_registry.list();\n            if (tools.length === 1)\n                Toolbox.add_tool_cell(tools[0]);\n            // Otherwise give the search box focus\n            else\n                document.querySelector('.nbtools-search').focus();\n        },\n    });\n}\nfunction add_tool_browser(app, restorer) {\n    const tool_browser = new ToolBrowser();\n    tool_browser.title.iconClass = 'nbtools-icon fa fa-th jp-SideBar-tabIcon';\n    tool_browser.title.caption = 'Toolbox';\n    tool_browser.id = 'nbtools-browser';\n    // Add the tool browser widget to the application restorer\n    if (restorer)\n        restorer.add(tool_browser, NAMESPACE);\n    app.shell.add(tool_browser, 'left', { rank: 102 });\n}\n/**\n * Add the nbtools documentation and feedback links to the help menu\n *\n * @param {Application<Widget>} app\n * @param {IMainMenu} mainmenu\n */\nfunction add_help_links(app, mainmenu) {\n    const feedback = 'nbtools:feedback';\n    const documentation = 'nbtools:documentation';\n    // Add feedback command to the command palette\n    app.commands.addCommand(feedback, {\n        label: 'g2nb Help Forum',\n        caption: 'Open the g2nb help forum',\n        isEnabled: () => !!app.shell,\n        execute: () => {\n            const url = 'https://community.mesirovlab.org/c/g2nb/';\n            let element = document.createElement('a');\n            element.href = url;\n            element.target = '_blank';\n            document.body.appendChild(element);\n            element.click();\n            document.body.removeChild(element);\n            return void 0;\n        }\n    });\n    // Add documentation command to the command palette\n    app.commands.addCommand(documentation, {\n        label: 'nbtools Documentation',\n        caption: 'Open documentation for nbtools',\n        isEnabled: () => !!app.shell,\n        execute: () => {\n            const url = 'https://github.com/g2nb/nbtools#nbtools';\n            let element = document.createElement('a');\n            element.href = url;\n            element.target = '_blank';\n            document.body.appendChild(element);\n            element.click();\n            document.body.removeChild(element);\n            return void 0;\n        }\n    });\n    // Add documentation link to the help menu\n    if (mainmenu)\n        mainmenu.helpMenu.addGroup([{ command: feedback }, { command: documentation }], 2);\n}\n"],"sourceRoot":""}