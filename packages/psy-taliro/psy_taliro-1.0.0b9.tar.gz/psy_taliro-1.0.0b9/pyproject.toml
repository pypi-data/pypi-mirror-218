[build-system]
requires = ["poetry-core>=1.0.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry]
name = "PSY-TaLiRo"
version = "1.0.0b9"
description = "System-level verification library using STL"
authors = ["Quinn Thibeault <qthibeau@asu.edu>", "Jacob Anderson <jwande18@asu.edu>"]
license = "BSD-3-Clause"
packages = [
    {include = "staliro", from = "src"}
]

[tool.poetry.dependencies]
python = ">=3.8, <3.11"
antlr4-python3-runtime = ">=4.7"
attrs = "^21.0.0"
numpy = "^1.21.5"
scipy = "^1.6.2"
typing-extensions = "^4.2.0"
matplotlib = "^3.5.2"
py-taliro = { version = "^0.2.1", optional = true, markers = "sys_platform == 'linux'" }
rtamt = { version = "^0.3.5", optional = true }
tltk-mtl = { version = "^0.0.27", optional = true, markers = "sys_platform == 'linux'" }

[tool.poetry.extras]
rtamt = ["rtamt"]
pytaliro = ["py-taliro"]
tltk = ["tltk-mtl"]

[tool.poetry.group.dev.dependencies]
black = "*"
flake8 = "^4.0.0"
flake8-comprehensions = "^3.4.0"
flake8-pyi = "^20.10.0"
flake8-return = "^1.1.2"
flake8-use-fstring = "^1.1"
flake8-annotations-complexity = "^0.0.6"
flake8-todo = "^0.7"
isort = "*"
mypy = "^0"
pep8-naming = "^0.11.1"

[tool.poetry.group.test.dependencies]
pandas = "^1.3.1"

[tool.poetry.group.examples.dependencies]
aerobench = { git = "https://github.com/cpslab-asu/aerobenchvvpython.git" }
kaleido = "0.2.1"
plotly = "^5.3.1"
py-taliro = { version = "*", markers = "sys_platform == 'linux'"}
rtamt = "*"
tltk-mtl = { version = "*", markers = "sys_platform == 'linux'" }

[tool.poetry.group.docs]
optional = true

[tool.poetry.group.docs.dependencies]
Sphinx = "^4.1.2"
sphinx-autodocgen = "^1.2"
sphinx-autobuild = "^2021.3.14"
furo = "^2022.4.7"
rstcheck = "^5.0.0"

[tool.black]
line-length = 100
extend-exclude = '''
/src/staliro/parser/stlParserListener.py
| /src/staliro/parser/stlParser.py
| /src/staliro/parser/stlLexer.py
'''

[tool.isort]
profile = "black"
line_length=100
skip_gitignore = true
src_paths = ["src"]
extend_skip = ["stlLexer.py", "stlParser.py", "stlParserListener.py", "stlParserVisitor.py"]

[tool.poe.tasks]
test = "python3 -m unittest discover -v -s 'tests' -p 'test_*.py'"
nonlinear = "python3 examples/nonlinear.py"
