Metadata-Version: 2.1
Name: gbmessserver12345
Version: 0.1.0
Summary: Study project: Async messenger, server part
Author: Ivan St
Author-email: empty@mail.com
Requires-Python: >=3.9,<4.0
Classifier: Programming Language :: Python :: 3
Classifier: Programming Language :: Python :: 3.9
Classifier: Programming Language :: Python :: 3.10
Classifier: Programming Language :: Python :: 3.11
Requires-Dist: pycryptodomex (>=3.18.0,<4.0.0)
Requires-Dist: pyqt5 (>=5.15.9,<6.0.0)
Requires-Dist: sqlalchemy (>=2.0.17,<3.0.0)
Description-Content-Type: text/x-rst

Серверное приложение
=============================================

Серверное приложение мессенджера. Обрабатывает подключения клиентов и обменивается с ними сообщениями. Имеет графический и консольный интерфейсы администратора. 

**Запуск сервера**

Запуск сервера выполняется из корневой директории путем вызова модуля ``server.py`` из командной строки с параметрами: 

1. -p / --port - Порт, на котором принимаются соединения
2. -a / --host - Адрес, с которого принимаются соединения.
3. -s / --silent Запуск без графической оболочки.

*В данном режиме не поддерживается ввод команд.*

Примеры использования:

``python server.py -p 8080``

*Запуск сервера на порту 8080*

``python server.py -a localhost``

*Запуск сервера принимающего только соединения с localhost*

``python server.py -s``

*Запуск без графической оболочки*

**Администрирование**
Ведение пользователей выполняется в графической оболочке, создание может выполняться в интерфейсе командной строки.
Для создания пользователя из интерфейса командной строки необходимо вызвать модуль ``server.py``, указав команду ``user_add`` с параметрами:
1. -l / --login - Логин пользователя;
2. -p / --password - Пароль.

``python server.py user_add -l test2 -p 123``

*Создание пользователя test2 с паролем 123*

server.py
~~~~~~~~~

Запускаемый модуль,содержит парсер аргументов командной строки и функционал инициализации приложения.

