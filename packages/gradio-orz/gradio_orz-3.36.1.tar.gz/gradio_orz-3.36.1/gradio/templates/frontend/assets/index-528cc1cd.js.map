{"version":3,"file":"index-528cc1cd.js","sources":["../../../../js/upload-button/src/UploadButton.svelte","../../../../js/app/src/components/UploadButton/UploadButton.svelte","../../../../js/app/src/components/UploadButton/index.ts"],"sourcesContent":["<script lang=\"ts\">\r\n\timport { Button } from \"@gradio/button\";\r\n\timport { createEventDispatcher } from \"svelte\";\r\n\timport type { FileData } from \"@gradio/upload\";\r\n\r\n\texport let elem_id = \"\";\r\n\texport let elem_classes: string[] = [];\r\n\texport let visible = true;\r\n\texport let file_count: string;\r\n\texport let file_types: string[] = [];\r\n\texport let include_file_metadata = true;\r\n\texport let size: \"sm\" | \"lg\" = \"lg\";\r\n\texport let scale: number | null = null;\r\n\texport let min_width: number | undefined = undefined;\r\n\texport let mode: \"static\" | \"dynamic\" = \"dynamic\";\r\n\texport let variant: \"primary\" | \"secondary\" | \"stop\" = \"secondary\";\r\n\texport let label: string;\r\n\r\n\tlet hidden_upload: HTMLInputElement;\r\n\tconst dispatch = createEventDispatcher();\r\n\tlet accept_file_types: string | null;\r\n\tif (file_types == null) {\r\n\t\taccept_file_types = null;\r\n\t} else {\r\n\t\tfile_types = file_types.map((x) => {\r\n\t\t\tif (x.startsWith(\".\")) {\r\n\t\t\t\treturn x;\r\n\t\t\t}\r\n\t\t\treturn x + \"/*\";\r\n\t\t});\r\n\t\taccept_file_types = file_types.join(\", \");\r\n\t}\r\n\r\n\tconst openFileUpload = () => {\r\n\t\thidden_upload.click();\r\n\t};\r\n\r\n\tconst loadFiles = (files: FileList) => {\r\n\t\tlet _files: File[] = Array.from(files);\r\n\t\tif (!files.length) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tif (file_count === \"single\") {\r\n\t\t\t_files = [files[0]];\r\n\t\t}\r\n\t\tvar all_file_data: (FileData | File)[] = [];\r\n\t\t_files.forEach((f, i) => {\r\n\t\t\tall_file_data[i] = include_file_metadata\r\n\t\t\t\t? {\r\n\t\t\t\t\t\tname: f.name,\r\n\t\t\t\t\t\tsize: f.size,\r\n\t\t\t\t\t\tdata: \"\",\r\n\t\t\t\t\t\tblob: f\r\n\t\t\t\t  }\r\n\t\t\t\t: f;\r\n\t\t\tif (\r\n\t\t\t\tall_file_data.filter((x) => x !== undefined).length === files.length\r\n\t\t\t) {\r\n\t\t\t\tdispatch(\r\n\t\t\t\t\t\"load\",\r\n\t\t\t\t\tfile_count == \"single\" ? all_file_data[0] : all_file_data\r\n\t\t\t\t);\r\n\t\t\t}\r\n\t\t});\r\n\t};\r\n\r\n\tconst loadFilesFromUpload = (e: Event) => {\r\n\t\tconst target = e.target as HTMLInputElement;\r\n\t\tif (!target.files) {\r\n\t\t\treturn;\r\n\t\t}\r\n\t\tloadFiles(target.files);\r\n\t};\r\n\r\n\tconst clearInputValue = (e: Event) => {\r\n\t\tconst target = e.target as HTMLInputElement;\r\n\t\tif (target.value) target.value = \"\";\r\n\t};\r\n</script>\r\n\r\n<input\r\n\tclass=\"hide\"\r\n\taccept={accept_file_types}\r\n\ttype=\"file\"\r\n\tbind:this={hidden_upload}\r\n\ton:change={loadFilesFromUpload}\r\n\ton:click={clearInputValue}\r\n\tmultiple={file_count === \"multiple\" || undefined}\r\n\twebkitdirectory={file_count === \"directory\" || undefined}\r\n\tmozdirectory={file_count === \"directory\" || undefined}\r\n\tdata-testid=\"{label}-upload-button\"\r\n/>\r\n\r\n<Button\r\n\t{size}\r\n\t{variant}\r\n\t{elem_id}\r\n\t{elem_classes}\r\n\t{visible}\r\n\ton:click={openFileUpload}\r\n\t{scale}\r\n\t{min_width}\r\n\tdisabled={mode === \"static\"}\r\n>\r\n\t<slot />\r\n</Button>\r\n\r\n<style>\r\n\t.hide {\r\n\t\tdisplay: none;\r\n\t}\r\n</style>\r\n","<script lang=\"ts\">\r\n\timport { createEventDispatcher, tick, getContext } from \"svelte\";\r\n\timport type { FileData } from \"@gradio/upload\";\r\n\timport { UploadButton } from \"@gradio/upload-button\";\r\n\timport { upload_files as default_upload_files } from \"@gradio/client\";\r\n\timport { blobToBase64 } from \"@gradio/upload\";\r\n\timport { _ } from \"svelte-i18n\";\r\n\r\n\texport let elem_id = \"\";\r\n\texport let elem_classes: string[] = [];\r\n\texport let visible = true;\r\n\texport let label: string;\r\n\texport let value: null | FileData;\r\n\texport let file_count: string;\r\n\texport let file_types: string[] = [];\r\n\texport let root: string;\r\n\texport let size: \"sm\" | \"lg\" = \"lg\";\r\n\texport let scale: number | null = null;\r\n\texport let min_width: number | undefined = undefined;\r\n\texport let mode: \"static\" | \"dynamic\" = \"dynamic\";\r\n\texport let variant: \"primary\" | \"secondary\" | \"stop\" = \"secondary\";\r\n\r\n\tconst upload_files =\r\n\t\tgetContext<typeof default_upload_files>(\"upload_files\") ??\r\n\t\tdefault_upload_files;\r\n\r\n\tasync function handle_upload({ detail }: CustomEvent<FileData>) {\r\n\t\tvalue = detail;\r\n\t\tawait tick();\r\n\t\tlet files = (Array.isArray(detail) ? detail : [detail]).map(\r\n\t\t\t(file_data) => file_data.blob!\r\n\t\t);\r\n\r\n\t\tupload_files(root, files).then(async (response) => {\r\n\t\t\tif (response.error) {\r\n\t\t\t\t(Array.isArray(detail) ? detail : [detail]).forEach(\r\n\t\t\t\t\tasync (file_data, i) => {\r\n\t\t\t\t\t\tfile_data.data = await blobToBase64(file_data.blob!);\r\n\t\t\t\t\t\tfile_data.blob = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t);\r\n\t\t\t} else {\r\n\t\t\t\t(Array.isArray(detail) ? detail : [detail]).forEach((file_data, i) => {\r\n\t\t\t\t\tif (response.files) {\r\n\t\t\t\t\t\tfile_data.orig_name = file_data.name;\r\n\t\t\t\t\t\tfile_data.name = response.files[i];\r\n\t\t\t\t\t\tfile_data.is_file = true;\r\n\t\t\t\t\t\tfile_data.blob = undefined;\r\n\t\t\t\t\t}\r\n\t\t\t\t});\r\n\t\t\t}\r\n\r\n\t\t\tdispatch(\"change\", value);\r\n\t\t\tdispatch(\"upload\", detail);\r\n\t\t});\r\n\t}\r\n\r\n\tconst dispatch = createEventDispatcher<{\r\n\t\tchange: FileData | null;\r\n\t\tupload: FileData;\r\n\t}>();\r\n</script>\r\n\r\n<UploadButton\r\n\t{elem_id}\r\n\t{elem_classes}\r\n\t{visible}\r\n\t{file_count}\r\n\t{file_types}\r\n\t{size}\r\n\t{scale}\r\n\t{min_width}\r\n\t{mode}\r\n\t{variant}\r\n\t{label}\r\n\ton:click\r\n\ton:load={handle_upload}\r\n>\r\n\t{$_(label)}\r\n</UploadButton>\r\n","export { default as Component } from \"./UploadButton.svelte\";\r\nexport const modes = [\"static\", \"dynamic\"];\r\n"],"names":["ctx","insert","target","input","anchor","dirty","button_changes","elem_id","$$props","elem_classes","visible","file_count","file_types","include_file_metadata","size","scale","min_width","mode","variant","label","hidden_upload","dispatch","createEventDispatcher","accept_file_types","x","openFileUpload","loadFiles","files","_files","all_file_data","f","i","loadFilesFromUpload","e","clearInputValue","$$value","t_value","set_data","t","value","root","upload_files","getContext","default_upload_files","handle_upload","detail","$$invalidate","tick","file_data","response","blobToBase64","modes"],"mappings":"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"}