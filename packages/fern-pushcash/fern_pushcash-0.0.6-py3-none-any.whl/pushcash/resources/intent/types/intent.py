# This file was auto-generated by Fern from our API Definition.

import datetime as dt
import typing

import pydantic

from ....core.datetime_utils import serialize_datetime
from ...commons.types.currency import Currency
from ...commons.types.direction import Direction
from .intent_failure_details import IntentFailureDetails
from .intent_status import IntentStatus


class Intent(pydantic.BaseModel):
    id: str
    created_at: str = pydantic.Field(description=("Creation timestamp for the Intent\n"))
    direction: Direction
    user_id: str
    amount: int = pydantic.Field(description=("amount (in cents) for the transaction\n"))
    currency: Currency
    status: IntentStatus
    failure_details: typing.Optional[IntentFailureDetails] = pydantic.Field(
        description=("Failure details is non-null only for 'declined', 'error', 'timedout', 'chargedback'\n")
    )

    def json(self, **kwargs: typing.Any) -> str:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().json(**kwargs_with_defaults)

    def dict(self, **kwargs: typing.Any) -> typing.Dict[str, typing.Any]:
        kwargs_with_defaults: typing.Any = {"by_alias": True, "exclude_unset": True, **kwargs}
        return super().dict(**kwargs_with_defaults)

    class Config:
        frozen = True
        json_encoders = {dt.datetime: serialize_datetime}
