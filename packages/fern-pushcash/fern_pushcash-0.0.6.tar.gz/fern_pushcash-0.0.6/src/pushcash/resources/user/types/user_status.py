# This file was auto-generated by Fern from our API Definition.

import enum
import typing

T_Result = typing.TypeVar("T_Result")


class UserStatus(str, enum.Enum):
    CREATED = "created"
    AUTHENTICATED = "authenticated"
    ACTIVE = "active"
    SUSPENDED = "suspended"

    def visit(
        self,
        created: typing.Callable[[], T_Result],
        authenticated: typing.Callable[[], T_Result],
        active: typing.Callable[[], T_Result],
        suspended: typing.Callable[[], T_Result],
    ) -> T_Result:
        if self is UserStatus.CREATED:
            return created()
        if self is UserStatus.AUTHENTICATED:
            return authenticated()
        if self is UserStatus.ACTIVE:
            return active()
        if self is UserStatus.SUSPENDED:
            return suspended()
