{"version":3,"sources":["Modal.tsx","webpack:///./src/index.tsx?d986"],"names":["BaseWebModal","_StreamlitComponentBa","_inherits","_super","_createSuper","props","_this","_classCallCheck","call","render","React","createElement","Modal","isOpen","state","size","role","onClose","console","log","ModalHeader","title","ModalBody","body","ModalFooter","ModalButton","onClick","kind","ButtonKind","tertiary","onConfirm","validationButtonLabel","setState","Streamlit","setComponentValue","args","_createClass","key","value","setFrameHeight","StreamlitComponentBase","withStreamlitConnection","engine","Styletron","ReactDOM","StrictMode","StyletronProvider","document","getElementById"],"mappings":"wRA0BMA,EAAY,SAAAC,GAAAC,YAAAF,EAAAC,GAAA,IAAAE,EAAAC,YAAAJ,GACd,SAAAA,EAAYK,GAAa,IAADC,EASnB,OATmBC,YAAA,KAAAP,IACpBM,EAAAH,EAAAK,KAAA,KAAMH,IAWHI,OAAS,WACZ,OACIC,IAAAC,cAACC,IAAK,CACFC,OAAQP,EAAKQ,MAAMD,OACnBE,KAAMT,EAAKQ,MAAMC,KACjBC,KAAMV,EAAKQ,MAAME,KACjBC,QAASX,EAAKW,SAEbC,QAAQC,IAAIb,EAAKQ,OAClBJ,IAAAC,cAACS,IAAW,KAAEd,EAAKQ,MAAMO,OACzBX,IAAAC,cAACW,IAAS,KACLhB,EAAKQ,MAAMS,MAEhBb,IAAAC,cAACa,IAAW,KACRd,IAAAC,cAACc,IAAW,CACRC,QAASpB,EAAKW,QACdU,KAAMC,IAAWC,UAAU,UAG/BnB,IAAAC,cAACc,IAAW,CAACC,QAASpB,EAAKwB,WAAYxB,EAAKQ,MAAMiB,0BAIjEzB,EAEOwB,UAAY,WAChBxB,EAAK0B,SAAS,CAAEnB,QAAQ,IACxBoB,IAAUC,mBAAkB,IAC/B5B,EAEOW,QAAU,WACdX,EAAK0B,SAAS,CAAEnB,QAAQ,IACxBoB,IAAUC,kBAAkB,OA1C5B5B,EAAKQ,MAAQ,CACTO,MAAOf,EAAKD,MAAM8B,KAAY,MAC9BZ,KAAMjB,EAAKD,MAAM8B,KAAW,KAC5BtB,OAAQP,EAAKD,MAAM8B,KAAc,QACjCnB,KAAMV,EAAKD,MAAM8B,KAAW,KAC5BpB,KAAMT,EAAKD,MAAM8B,KAAW,KAC5BJ,sBAAuBzB,EAAKD,MAAM8B,KAA8B,yBACnE7B,EAEuD,OAD3D8B,YAAApC,EAAA,EAAAqC,IAAA,oBAAAC,MACD,WAA6BL,IAAUM,eAAe,SAAMvC,EAZ9C,CAASwC,KAiDZC,cAAwBzC,G,QCpEjC0C,EAAS,I,MAAIC,GAEnBC,IAASnC,OACPC,IAAAC,cAACD,IAAMmC,WAAU,KACfnC,IAAAC,cAACmC,IAAiB,CAACR,MAAOI,GACxBhC,IAAAC,cAACX,EAAY,QAGjB+C,SAASC,eAAe,W","file":"static/js/main.fcdf4979.chunk.js","sourcesContent":["import {\r\n    Streamlit,\r\n    StreamlitComponentBase,\r\n    withStreamlitConnection,\r\n} from \"streamlit-component-lib\"\r\nimport React, { ReactNode } from \"react\"\r\nimport {\r\n    Modal,\r\n    ModalHeader,\r\n    ModalBody,\r\n    ModalFooter,\r\n    ModalButton,\r\n} from \"baseui/modal\";\r\nimport { KIND as ButtonKind } from \"baseui/button\";\r\n\r\n\r\ninterface Props {\r\n    title: string,\r\n    body: string,\r\n    isOpen: boolean,\r\n    role: string,\r\n    size: string,\r\n    validationButtonLabel: string\r\n}\r\n\r\n\r\nclass BaseWebModal extends StreamlitComponentBase<Props> {\r\n    constructor(props: any) {\r\n        super(props);\r\n        this.state = {\r\n            title: this.props.args[\"title\"],\r\n            body: this.props.args[\"body\"],\r\n            isOpen: this.props.args[\"is_open\"],\r\n            role: this.props.args[\"role\"],\r\n            size: this.props.args[\"size\"],\r\n            validationButtonLabel: this.props.args[\"validation_button_label\"]\r\n        }\r\n    };\r\n    public componentDidMount() { Streamlit.setFrameHeight(250) }\r\n    public render = (): ReactNode => {\r\n        return (\r\n            <Modal\r\n                isOpen={this.state.isOpen}\r\n                size={this.state.size}\r\n                role={this.state.role}\r\n                onClose={this.onClose}\r\n            >\r\n                {console.log(this.state)}\r\n                <ModalHeader>{this.state.title}</ModalHeader>\r\n                <ModalBody>\r\n                    {this.state.body}\r\n                </ModalBody>\r\n                <ModalFooter>\r\n                    <ModalButton\r\n                        onClick={this.onClose}\r\n                        kind={ButtonKind.tertiary}>\r\n                        Cancel\r\n                    </ModalButton>\r\n                    <ModalButton onClick={this.onConfirm}>{this.state.validationButtonLabel}</ModalButton>\r\n                </ModalFooter>\r\n            </Modal>\r\n        )\r\n    };\r\n\r\n    private onConfirm = () => {\r\n        this.setState({ isOpen: false });\r\n        Streamlit.setComponentValue(true)\r\n    }\r\n\r\n    private onClose = () => {\r\n        this.setState({ isOpen: false });\r\n        Streamlit.setComponentValue(null)\r\n    }\r\n}\r\n\r\nexport default withStreamlitConnection(BaseWebModal)","import React from \"react\"\r\nimport ReactDOM from \"react-dom\"\r\nimport BaseWebModal from \"./Modal\"\r\nimport { Provider as StyletronProvider } from \"styletron-react\";\r\nimport { Client as Styletron } from \"styletron-engine-atomic\";\r\n\r\n\r\nconst engine = new Styletron();\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <StyletronProvider value={engine}>\r\n      <BaseWebModal />\r\n    </StyletronProvider>\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n)\r\n"],"sourceRoot":""}