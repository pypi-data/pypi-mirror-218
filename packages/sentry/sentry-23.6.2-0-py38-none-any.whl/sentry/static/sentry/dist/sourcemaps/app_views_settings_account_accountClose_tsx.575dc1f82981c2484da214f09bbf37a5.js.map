{"version":3,"file":"chunks/app_views_settings_account_accountClose_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/confirmAccountClose.tsx","webpack:///./app/views/settings/account/accountClose.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = AsyncComponent['state'];\nexport type AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport {t} from 'sentry/locale';\n\nexport function ConfirmAccountClose({\n  handleRemoveAccount,\n}: {\n  handleRemoveAccount: () => void;\n}) {\n  return (\n    <Confirm\n      priority=\"danger\"\n      message={t(\n        'This is permanent and cannot be undone, are you really sure you want to do this?'\n      )}\n      onConfirm={handleRemoveAccount}\n    >\n      <Button priority=\"danger\">{t('Close Account')}</Button>\n    </Confirm>\n  );\n}\n","import styled from '@emotion/styled';\n\nimport {addErrorMessage, addLoadingMessage} from 'sentry/actionCreators/indicator';\nimport {ModalRenderProps, openModal} from 'sentry/actionCreators/modal';\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport {ConfirmAccountClose} from 'sentry/views/settings/account/confirmAccountClose';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst BYE_URL = '/';\nconst leaveRedirect = () => (window.location.href = BYE_URL);\n\nconst Important = styled('div')`\n  font-weight: bold;\n  font-size: 1.2em;\n`;\n\nfunction GoodbyeModalContent({Header, Body, Footer}: ModalRenderProps) {\n  return (\n    <div>\n      <Header>{t('Closing Account')}</Header>\n      <Body>\n        <TextBlock>\n          {t('Your account has been deactivated and scheduled for removal.')}\n        </TextBlock>\n        <TextBlock>\n          {t('Thanks for using Sentry! We hope to see you again soon!')}\n        </TextBlock>\n      </Body>\n      <Footer>\n        <Button href={BYE_URL}>{t('Goodbye')}</Button>\n      </Footer>\n    </div>\n  );\n}\n\ntype OwnedOrg = {\n  organization: Organization;\n  singleOwner: boolean;\n};\n\ntype Props = AsyncView['props'];\n\ntype State = AsyncView['state'] & {\n  organizations: OwnedOrg[] | null;\n  /**\n   * Org slugs that will be removed\n   */\n  orgsToRemove: Set<string> | null;\n};\n\nclass AccountClose extends AsyncView<Props, State> {\n  leaveRedirectTimeout: number | undefined = undefined;\n\n  componentWillUnmount() {\n    window.clearTimeout(this.leaveRedirectTimeout);\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['organizations', '/organizations/?owner=1']];\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      orgsToRemove: null,\n    };\n  }\n\n  get singleOwnerOrgs() {\n    return this.state.organizations\n      ?.filter(({singleOwner}) => singleOwner)\n      ?.map(({organization}) => organization.slug);\n  }\n\n  getTitle() {\n    return t('Close Account');\n  }\n\n  handleChange = (\n    {slug}: Organization,\n    isSingle: boolean,\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => {\n    const checked = event.target.checked;\n\n    // Can't unselect an org where you are the single owner\n    if (isSingle) {\n      return;\n    }\n\n    this.setState(state => {\n      const set = state.orgsToRemove || new Set(this.singleOwnerOrgs);\n      if (checked) {\n        set.add(slug);\n      } else {\n        set.delete(slug);\n      }\n\n      return {orgsToRemove: set};\n    });\n  };\n\n  get orgSlugsToRemove() {\n    const {orgsToRemove} = this.state;\n    return (\n      (orgsToRemove === null ? this.singleOwnerOrgs : Array.from(orgsToRemove)) || []\n    );\n  }\n\n  handleRemoveAccount = async () => {\n    const orgs = this.orgSlugsToRemove;\n\n    addLoadingMessage('Closing account\\u2026');\n\n    try {\n      await this.api.requestPromise('/users/me/', {\n        method: 'DELETE',\n        data: {organizations: orgs},\n      });\n\n      openModal(GoodbyeModalContent, {\n        onClose: leaveRedirect,\n      });\n\n      // Redirect after 10 seconds\n      window.clearTimeout(this.leaveRedirectTimeout);\n      this.leaveRedirectTimeout = window.setTimeout(leaveRedirect, 10000);\n    } catch {\n      addErrorMessage('Error closing account');\n    }\n  };\n\n  renderBody() {\n    const {organizations, orgsToRemove} = this.state;\n\n    const HookedCustomConfirmAccountClose = HookOrDefault({\n      hookName: 'component:confirm-account-close',\n      defaultComponent: props => <ConfirmAccountClose {...props} />,\n    });\n\n    return (\n      <div>\n        <SettingsPageHeader title={this.getTitle()} />\n\n        <TextBlock>\n          {t('This will permanently remove all associated data for your user')}.\n        </TextBlock>\n\n        <Alert type=\"error\" showIcon>\n          <Important>\n            {t('Closing your account is permanent and cannot be undone')}!\n          </Important>\n        </Alert>\n\n        <Panel>\n          <PanelHeader>{t('Remove the following organizations')}</PanelHeader>\n          <PanelBody>\n            <PanelAlert type=\"info\">\n              {t(\n                'Ownership will remain with other organization owners if an organization is not deleted.'\n              )}\n              <br />\n              {tct(\n                \"Boxes which can't be unchecked mean that you are the only organization owner and the organization [strong:will be deleted].\",\n                {strong: <strong />}\n              )}\n            </PanelAlert>\n\n            {organizations?.map(({organization, singleOwner}) => (\n              <PanelItem key={organization.slug}>\n                <label>\n                  <input\n                    style={{marginRight: 6}}\n                    type=\"checkbox\"\n                    value={organization.slug}\n                    onChange={this.handleChange.bind(this, organization, singleOwner)}\n                    name=\"organizations\"\n                    checked={\n                      orgsToRemove === null\n                        ? singleOwner\n                        : orgsToRemove.has(organization.slug)\n                    }\n                    disabled={singleOwner}\n                  />\n                  {organization.slug}\n                </label>\n              </PanelItem>\n            ))}\n          </PanelBody>\n        </Panel>\n        <HookedCustomConfirmAccountClose\n          handleRemoveAccount={this.handleRemoveAccount}\n          organizationSlugs={this.orgSlugsToRemove}\n        />\n      </div>\n    );\n  }\n}\n\nexport default AccountClose;\n"],"names":["AsyncView","AsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","ConfirmAccountClose","_ref","handleRemoveAccount","Confirm","priority","message","t","onConfirm","Button","leaveRedirect","window","location","href","Important","_styled","target","name","styles","GoodbyeModalContent","Header","Body","Footer","_jsxs","TextBlock","AccountClose","constructor","arguments","_defineProperty","undefined","_ref2","isSingle","event","slug","checked","setState","state","set","orgsToRemove","Set","singleOwnerOrgs","add","delete","async","orgs","orgSlugsToRemove","addLoadingMessage","api","requestPromise","method","data","organizations","openModal","onClose","clearTimeout","leaveRedirectTimeout","setTimeout","addErrorMessage","componentWillUnmount","getEndpoints","getDefaultState","super","filter","_ref3","singleOwner","map","_ref4","organization","Array","from","renderBody","HookedCustomConfirmAccountClose","HookOrDefault","hookName","defaultComponent","props","SettingsPageHeader","Alert","type","showIcon","Panel","PanelHeader","PanelBody","PanelAlert","tct","strong","_ref5","PanelItem","style","marginRight","value","onChange","handleChange","bind","has","disabled","organizationSlugs"],"sourceRoot":""}