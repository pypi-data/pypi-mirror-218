{"version":3,"file":"chunks/app_components_forms_controls_rangeSlider_index_tsx-app_views_issueDetails_grouping_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"yiBAEA,MAMA,GANoBA,E,kFAAAA,GAAO,QAAO,CAAAC,OAAA,aAAdD,CAAe,iCAEhBE,GAAKA,EAAEC,MAAMC,MAAI,aACzBF,GAAKA,EAAEC,MAAME,SAAO,K,oGC+E/B,SAASC,EAAWC,GAgBJ,IAhBK,GACnBC,EAAE,MACFC,EAAK,cACLC,EAAa,gBACbC,EAAe,KACfC,EAAI,SACJC,EAAQ,YACRC,EAAW,YACXC,EAAW,UACXC,EAAS,OACTC,EAAM,SACNC,EAAQ,WACRC,EAAU,eACVC,EAAc,UACdC,GAAY,KACTC,GACSf,EACZ,MAAOgB,EAAaC,IAAkBC,EAAAA,EAAAA,UACpCf,EAAgBA,EAAcgB,QAAQC,OAAOlB,GAAS,IAAMA,GAiC9D,SAASmB,EAAYC,GACnB,MAAMC,EAAiBC,WAAWF,EAAE5B,OAAOQ,OAC3Ce,EAAeM,GACfZ,IAZF,SAAwBY,GACtB,OAAKpB,EAKEA,EAAcoB,GAJZA,CAKX,CAKaE,CAAeF,GAAiBD,EAC7C,CAMA,SAASI,EACPJ,GAEsB,mBAAXZ,GAIXA,EAAOY,EACT,EAhDAK,EAAAA,EAAAA,YAAU,MAKV,WACE,KAAKC,EAAAA,EAAAA,IAAQ1B,GACX,OAGF,MAAM2B,EAAsB1B,GAAegB,QAAQC,OAAOlB,GAAS,MAAQ,EAIzEe,EADEY,GAAuB,EACVA,EAIF3B,EACjB,CAlBE4B,EAAmB,GAElB,CAAC5B,IAsEJ,MAAM,IAAC6B,EAAG,IAAEC,EAAG,KAAEC,EAAI,YAAEC,EAAW,aAAEC,GAvBpC,WACE,IAAKhC,EAAe,CAClB,MAAM,IAAC4B,EAAG,IAAEC,EAAG,KAAEC,GAAQlB,EACzB,MAAO,CACLgB,MACAC,MACAC,OACAC,YAAalB,EACbmB,aAAcnB,EAElB,CAEA,MAAMkB,EAAc/B,EAAca,GAElC,MAAO,CACLiB,KAAM,EACNF,IAAK,EACLC,IAAK7B,EAAciC,OAAS,EAC5BF,cACAC,cAAcP,EAAAA,EAAAA,IAAQM,GAAeA,GAAcG,EAAAA,EAAAA,GAAE,iBAEzD,CAEoDC,GAC9CC,EAAY/B,IAAc0B,IAAgBC,EAEhD,OACEK,EAAAA,EAAAA,IAAA,OAAK/B,UAAWA,EAAWgC,IAAK7B,EAAW8B,SAAA,EACvCtC,GAAmBU,IAAa6B,EAAAA,EAAAA,IAACC,EAAW,CAAAF,SAAEH,KAChDI,EAAAA,EAAAA,IAACE,EAAAA,EAAO,CAACC,MAAOjC,EAAgBP,UAAWA,EAAUyC,aAAW,EAACC,aAAW,EAAAN,UAC1EF,EAAAA,EAAAA,IAACS,EAAAA,EAAqB,CAAC7C,gBAAiBA,EAAgBsC,SAAA,EACtDC,EAAAA,EAAAA,IAACO,EAAAA,EAAM,CACLC,KAAK,QACL9C,KAAMA,EACNJ,GAAIA,EACJ8B,IAAKA,EACLC,IAAKA,EACLC,KAAMA,EACN3B,SAAUA,EACVK,SAAUU,EACV+B,QAAS/B,EACTgC,UAAW3B,EACX4B,QAAS5B,EACTxB,MAAOc,EACPuC,UAAWnD,EACX,iBAAgBmC,IAEjBnC,IACCuC,EAAAA,EAAAA,IAACa,EAAAA,EAAK,CACJjD,YAAaA,EACbL,MAAOc,EACPL,SAjEZ,SAAiCW,GAC/BL,EAAeO,WAAWF,EAAE5B,OAAOQ,QAAU,EAC/C,EAgEYQ,OAAQW,WAOtB,CAlIStB,EAAW0D,YAAA,cAoIpB,MAOA,GAP6BC,EAAAA,EAAAA,aAAgB,SAC3C3C,EACA0B,GAEA,OAAOE,EAAAA,EAAAA,IAAC5C,EAAW,IAAKgB,EAAOH,WAAY6B,GAC7C,G,sFC3NA,MA6JA,GA7JehD,E,kFAAAA,GAAO,QAAO,CAAAC,OAAA,aAAdD,CAAe,qEAKlBE,GAAKA,EAAEC,MAAMC,MAAI,SAAQF,GAAKA,EAAEC,MAAMC,MAAQF,EAAE4D,SAAW,EAAI,IAAE,wFAM3D5D,GAAKA,EAAEC,MAAM+D,QAAM,qGASnBhE,GAAKA,EAAEC,MAAM+D,QAAM,8FASnBhE,GAAKA,EAAEC,MAAM+D,QAAM,8EAMThE,GAAKA,EAAEC,MAAMgE,YAAU,yDAIjCjE,GAAKA,EAAEC,MAAMiE,QAAM,0JAUTlE,GAAKA,EAAEC,MAAMgE,YAAU,yDAIjCjE,GAAKA,EAAEC,MAAMiE,QAAM,mJAUTlE,GAAKA,EAAEC,MAAMgE,YAAU,yDAIjCjE,GAAKA,EAAEC,MAAMiE,QAAM,8IAUnBlE,GAAKA,EAAEC,MAAM+D,QAAM,8DAMnBhE,GAAKA,EAAEC,MAAM+D,QAAM,kGASjBhE,GAAKA,EAAEC,MAAM+D,QAAM,mCAInBhE,GAAKA,EAAEC,MAAM+D,QAAM,mCAInBhE,GAAKA,EAAEC,MAAM+D,QAAM,sDAMnBhE,GAAKA,EAAEC,MAAM+D,QAAM,oDAKnBhE,GAAKA,EAAEC,MAAM+D,QAAM,6CAKnBhE,GAAKA,EAAEC,MAAM+D,QAAM,0MAkBrBhE,GAAKA,EAAEC,MAAMkE,aAAW,2DAGxBnE,GAAKA,EAAEC,MAAMkE,aAAW,oDAGxBnE,GAAKA,EAAEC,MAAMkE,aAAW,qFAKxBnE,GAAKA,EAAEC,MAAMgE,YAAU,eAAejE,GAAKA,EAAEC,MAAMmE,OAAK,uFAIxDpE,GAAKA,EAAEC,MAAMgE,YAAU,eAAejE,GAAKA,EAAEC,MAAMmE,OAAK,yEAIxDpE,GAAKA,EAAEC,MAAMgE,YAAU,eAAejE,GAAKA,EAAEC,MAAMmE,OAAK,e,2NCvJ1E,MAQA,GAR8BtE,EAAAA,EAAAA,GAAO,MAAK,CAAAC,OAAA,YAAZD,CAAa,oFAIZE,GAAKA,EAAES,iBAAmB,OAAK,SACrD4D,EAAAA,EAAAA,GAAM,GAAE,I,uaCQjB,SAASC,EAAiBjE,GAA0D,IAAzD,aAACkE,EAAY,SAAEC,EAAQ,MAAEC,EAAK,OAAEC,EAAM,QAAEC,GAAetE,EAChF,OACE2C,EAAAA,EAAAA,IAAC4B,EAAAA,EAAO,CACNC,SAAU,CAAC,oBACXN,aAAcA,EACdO,eAAgBA,KACd9B,EAAAA,EAAAA,IAAC+B,EAAAA,GAAW,CAACC,aAAW,EAAAjC,UACtBC,EAAAA,EAAAA,IAACiC,EAAAA,GAAK,CAACzB,KAAK,UAAST,UAAEL,EAAAA,EAAAA,GAAE,6CAE3BK,UAEFC,EAAAA,EAAAA,IAACkC,EAAAA,EAAQ,CACPV,SAAUA,EACVW,QAASV,EAAMnE,GACfiE,aAAcA,EACdG,OAAQA,EACRU,SAAUT,EAAQU,QAI1B,CApBSf,EAAiBR,YAAA,oBAsB1B,SAAewB,EAAAA,EAAAA,GAAiBhB,E","sources":["webpack:///./app/components/forms/controls/rangeSlider/sliderLabel.tsx","webpack:///./app/components/forms/controls/rangeSlider/index.tsx","webpack:///./app/components/forms/controls/rangeSlider/slider.tsx","webpack:///./app/components/forms/controls/rangeSlider/sliderAndInputWrapper.tsx","webpack:///./app/views/issueDetails/grouping/index.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\nconst SliderLabel = styled('label')`\n  font-size: 14px;\n  margin-bottom: ${p => p.theme.grid}px;\n  color: ${p => p.theme.subText};\n`;\n\nexport default SliderLabel;\n","import {forwardRef as reactForwardRef, useEffect, useState} from 'react';\n\nimport Input from 'sentry/components/input';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {defined} from 'sentry/utils';\n\nimport Slider from './slider';\nimport SliderAndInputWrapper from './sliderAndInputWrapper';\nimport SliderLabel from './sliderLabel';\n\ntype SliderProps = {\n  name: string;\n\n  /**\n   * String is a valid type here only for empty string\n   * Otherwise react complains:\n   * \"`value` prop on `input` should not be null. Consider using an empty string to clear the component or `undefined` for uncontrolled components.\"\n   *\n   * And we want this to be a controlled input when value is empty\n   */\n  value: number | '';\n\n  /**\n   * Array of allowed values. Make sure `value` is in this list.\n   * THIS NEEDS TO BE SORTED\n   */\n  allowedValues?: number[];\n\n  className?: string;\n\n  disabled?: boolean;\n\n  disabledReason?: React.ReactNode;\n  /**\n   * Render prop for slider's label\n   * Is passed the value as an argument\n   */\n  formatLabel?: (value: number | '') => React.ReactNode;\n\n  forwardRef?: React.Ref<HTMLDivElement>;\n\n  /**\n   * HTML id of the range input\n   */\n  id?: string;\n\n  /**\n   * max allowed value, not needed if using `allowedValues`\n   */\n  max?: number;\n  /**\n   * min allowed value, not needed if using `allowedValues`\n   */\n  min?: number;\n\n  /**\n   * This is called when *any* MouseUp or KeyUp event happens.\n   * Used for \"smart\" Fields to trigger a \"blur\" event. `onChange` can\n   * be triggered quite frequently\n   */\n  onBlur?: (\n    event: React.MouseEvent<HTMLInputElement> | React.KeyboardEvent<HTMLInputElement>\n  ) => void;\n\n  onChange?: (\n    value: SliderProps['value'],\n    event: React.ChangeEvent<HTMLInputElement>\n  ) => void;\n  /**\n   * Placeholder for custom input\n   */\n  placeholder?: string;\n  /**\n   * Show input control for custom values\n   */\n  showCustomInput?: boolean;\n  /**\n   * Show label with current value\n   */\n  showLabel?: boolean;\n  step?: number;\n};\n\nfunction RangeSlider({\n  id,\n  value,\n  allowedValues,\n  showCustomInput,\n  name,\n  disabled,\n  placeholder,\n  formatLabel,\n  className,\n  onBlur,\n  onChange,\n  forwardRef,\n  disabledReason,\n  showLabel = true,\n  ...props\n}: SliderProps) {\n  const [sliderValue, setSliderValue] = useState(\n    allowedValues ? allowedValues.indexOf(Number(value || 0)) : value\n  );\n\n  useEffect(() => {\n    updateSliderValue();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [value]);\n\n  function updateSliderValue() {\n    if (!defined(value)) {\n      return;\n    }\n\n    const newSliderValueIndex = allowedValues?.indexOf(Number(value || 0)) ?? -1;\n\n    // If `allowedValues` is defined, then `sliderValue` represents index to `allowedValues`\n    if (newSliderValueIndex > -1) {\n      setSliderValue(newSliderValueIndex);\n      return;\n    }\n\n    setSliderValue(value);\n  }\n\n  function getActualValue(newSliderValue: SliderProps['value']): SliderProps['value'] {\n    if (!allowedValues) {\n      return newSliderValue;\n    }\n\n    // If `allowedValues` is defined, then `sliderValue` represents index to `allowedValues`\n    return allowedValues[newSliderValue];\n  }\n\n  function handleInput(e: React.ChangeEvent<HTMLInputElement>) {\n    const newSliderValue = parseFloat(e.target.value);\n    setSliderValue(newSliderValue);\n    onChange?.(getActualValue(newSliderValue), e);\n  }\n\n  function handleCustomInputChange(e: React.ChangeEvent<HTMLInputElement>) {\n    setSliderValue(parseFloat(e.target.value) || 0);\n  }\n\n  function handleBlur(\n    e: React.MouseEvent<HTMLInputElement> | React.KeyboardEvent<HTMLInputElement>\n  ) {\n    if (typeof onBlur !== 'function') {\n      return;\n    }\n\n    onBlur(e);\n  }\n\n  function getSliderData() {\n    if (!allowedValues) {\n      const {min, max, step} = props;\n      return {\n        min,\n        max,\n        step,\n        actualValue: sliderValue,\n        displayValue: sliderValue,\n      };\n    }\n\n    const actualValue = allowedValues[sliderValue];\n\n    return {\n      step: 1,\n      min: 0,\n      max: allowedValues.length - 1,\n      actualValue,\n      displayValue: defined(actualValue) ? actualValue : t('Invalid value'),\n    };\n  }\n\n  const {min, max, step, actualValue, displayValue} = getSliderData();\n  const labelText = formatLabel?.(actualValue) ?? displayValue;\n\n  return (\n    <div className={className} ref={forwardRef}>\n      {!showCustomInput && showLabel && <SliderLabel>{labelText}</SliderLabel>}\n      <Tooltip title={disabledReason} disabled={!disabled} skipWrapper isHoverable>\n        <SliderAndInputWrapper showCustomInput={showCustomInput}>\n          <Slider\n            type=\"range\"\n            name={name}\n            id={id}\n            min={min}\n            max={max}\n            step={step}\n            disabled={disabled}\n            onChange={handleInput}\n            onInput={handleInput}\n            onMouseUp={handleBlur}\n            onKeyUp={handleBlur}\n            value={sliderValue}\n            hasLabel={!showCustomInput}\n            aria-valuetext={labelText}\n          />\n          {showCustomInput && (\n            <Input\n              placeholder={placeholder}\n              value={sliderValue}\n              onChange={handleCustomInputChange}\n              onBlur={handleInput}\n            />\n          )}\n        </SliderAndInputWrapper>\n      </Tooltip>\n    </div>\n  );\n}\n\nconst RangeSliderContainer = reactForwardRef(function RangeSliderContainer(\n  props: SliderProps,\n  ref: React.Ref<any>\n) {\n  return <RangeSlider {...props} forwardRef={ref} />;\n});\n\nexport default RangeSliderContainer;\n\nexport type {SliderProps};\n","import styled from '@emotion/styled';\n\nconst Slider = styled('input')<{hasLabel: boolean}>`\n  /* stylelint-disable-next-line property-no-vendor-prefix */\n  -webkit-appearance: none;\n  width: 100%;\n  background: transparent;\n  margin: ${p => p.theme.grid}px 0 ${p => p.theme.grid * (p.hasLabel ? 2 : 1)}px;\n\n  &::-webkit-slider-runnable-track {\n    width: 100%;\n    height: 3px;\n    cursor: pointer;\n    background: ${p => p.theme.border};\n    border-radius: 3px;\n    border: 0;\n  }\n\n  &::-moz-range-track {\n    width: 100%;\n    height: 3px;\n    cursor: pointer;\n    background: ${p => p.theme.border};\n    border-radius: 3px;\n    border: 0;\n  }\n\n  &::-ms-track {\n    width: 100%;\n    height: 3px;\n    cursor: pointer;\n    background: ${p => p.theme.border};\n    border-radius: 3px;\n    border: 0;\n  }\n\n  &::-webkit-slider-thumb {\n    box-shadow: 0 0 0 3px ${p => p.theme.background};\n    height: 17px;\n    width: 17px;\n    border-radius: 50%;\n    background: ${p => p.theme.active};\n    cursor: pointer;\n    /* stylelint-disable-next-line property-no-vendor-prefix */\n    -webkit-appearance: none;\n    margin-top: -7px;\n    border: 0;\n    transition: background 0.1s, box-shadow 0.1s;\n  }\n\n  &::-moz-range-thumb {\n    box-shadow: 0 0 0 3px ${p => p.theme.background};\n    height: 17px;\n    width: 17px;\n    border-radius: 50%;\n    background: ${p => p.theme.active};\n    cursor: pointer;\n    /* stylelint-disable-next-line property-no-vendor-prefix */\n    -webkit-appearance: none;\n    margin-top: -7px;\n    border: 0;\n    transition: background 0.1s, box-shadow 0.1s;\n  }\n\n  &::-ms-thumb {\n    box-shadow: 0 0 0 3px ${p => p.theme.background};\n    height: 17px;\n    width: 17px;\n    border-radius: 50%;\n    background: ${p => p.theme.active};\n    cursor: pointer;\n    /* stylelint-disable-next-line property-no-vendor-prefix */\n    -webkit-appearance: none;\n    margin-top: -7px;\n    border: 0;\n    transition: background 0.1s, box-shadow 0.1s;\n  }\n\n  &::-ms-fill-lower {\n    background: ${p => p.theme.border};\n    border: 0;\n    border-radius: 50%;\n  }\n\n  &::-ms-fill-upper {\n    background: ${p => p.theme.border};\n    border: 0;\n    border-radius: 50%;\n  }\n\n  &:focus {\n    outline: none;\n\n    &::-webkit-slider-runnable-track {\n      background: ${p => p.theme.border};\n    }\n\n    &::-ms-fill-upper {\n      background: ${p => p.theme.border};\n    }\n\n    &::-ms-fill-lower {\n      background: ${p => p.theme.border};\n    }\n  }\n\n  &[disabled] {\n    &::-webkit-slider-thumb {\n      background: ${p => p.theme.border};\n      cursor: default;\n    }\n\n    &::-moz-range-thumb {\n      background: ${p => p.theme.border};\n      cursor: default;\n    }\n\n    &::-ms-thumb {\n      background: ${p => p.theme.border};\n      cursor: default;\n    }\n\n    &::-webkit-slider-runnable-track {\n      cursor: default;\n    }\n\n    &::-moz-range-track {\n      cursor: default;\n    }\n\n    &::-ms-track {\n      cursor: default;\n    }\n  }\n\n  &:not([disabled])::-webkit-slider-runnable-track:hover {\n    background: ${p => p.theme.activeHover};\n  }\n  &:not([disabled])::-moz-range-thumb:hover {\n    background: ${p => p.theme.activeHover};\n  }\n  &:not([disabled])::-ms-thumb:hover {\n    background: ${p => p.theme.activeHover};\n  }\n\n  &:focus::-webkit-slider-thumb,\n  &.focus-visible::-webkit-slider-thumb {\n    box-shadow: ${p => p.theme.background} 0 0 0 3px, ${p => p.theme.focus} 0 0 0 6px;\n  }\n  &:focus::-moz-range-thumb,\n  &.focus-visible::-moz-range-thumb {\n    box-shadow: ${p => p.theme.background} 0 0 0 3px, ${p => p.theme.focus} 0 0 0 6px;\n  }\n  &:focus::-ms-thumb,\n  &.focus-visible::-ms-thumb {\n    box-shadow: ${p => p.theme.background} 0 0 0 3px, ${p => p.theme.focus} 0 0 0 6px;\n  }\n`;\n\nexport default Slider;\n","import styled from '@emotion/styled';\n\nimport {space} from 'sentry/styles/space';\n\nconst SliderAndInputWrapper = styled('div')<{showCustomInput?: boolean}>`\n  display: grid;\n  align-items: center;\n  grid-auto-flow: column;\n  grid-template-columns: 4fr ${p => p.showCustomInput && '1fr'};\n  gap: ${space(1)};\n`;\n\nexport default SliderAndInputWrapper;\n","import {RouteComponentProps} from 'react-router';\n\nimport Feature from 'sentry/components/acl/feature';\nimport {Alert} from 'sentry/components/alert';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport {t} from 'sentry/locale';\nimport {Group, Organization, Project} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport Grouping from './grouping';\n\ntype Props = RouteComponentProps<{}, {}> & {\n  group: Group;\n  organization: Organization;\n  project: Project;\n};\n\nfunction GroupingContainer({organization, location, group, router, project}: Props) {\n  return (\n    <Feature\n      features={['grouping-tree-ui']}\n      organization={organization}\n      renderDisabled={() => (\n        <Layout.Page withPadding>\n          <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n        </Layout.Page>\n      )}\n    >\n      <Grouping\n        location={location}\n        groupId={group.id}\n        organization={organization}\n        router={router}\n        projSlug={project.slug}\n      />\n    </Feature>\n  );\n}\n\nexport default withOrganization(GroupingContainer);\n"],"names":["_styled","target","p","theme","grid","subText","RangeSlider","_ref","id","value","allowedValues","showCustomInput","name","disabled","placeholder","formatLabel","className","onBlur","onChange","forwardRef","disabledReason","showLabel","props","sliderValue","setSliderValue","useState","indexOf","Number","handleInput","e","newSliderValue","parseFloat","getActualValue","handleBlur","useEffect","defined","newSliderValueIndex","updateSliderValue","min","max","step","actualValue","displayValue","length","t","getSliderData","labelText","_jsxs","ref","children","_jsx","SliderLabel","Tooltip","title","skipWrapper","isHoverable","SliderAndInputWrapper","Slider","type","onInput","onMouseUp","onKeyUp","hasLabel","Input","displayName","reactForwardRef","border","background","active","activeHover","focus","space","GroupingContainer","organization","location","group","router","project","Feature","features","renderDisabled","Layout","withPadding","Alert","Grouping","groupId","projSlug","slug","withOrganization"],"sourceRoot":""}