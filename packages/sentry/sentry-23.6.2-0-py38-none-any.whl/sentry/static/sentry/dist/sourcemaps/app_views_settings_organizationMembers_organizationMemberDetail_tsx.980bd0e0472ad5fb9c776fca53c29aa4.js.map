{"version":3,"file":"chunks/app_views_settings_organizationMembers_organizationMemberDetail_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/radio.tsx","webpack:///./app/components/roleSelectControl.tsx","webpack:///./app/components/teamRoleSelect.tsx","webpack:///./app/utils/isMemberDisabledFromLimit.tsx","webpack:///./app/utils/orgRole.tsx","webpack:///./app/views/settings/components/teamSelect/teamSelectForMember.tsx","webpack:///./app/views/settings/organizationMembers/inviteMember/orgRoleSelect.tsx","webpack:///./app/views/settings/organizationMembers/organizationMemberDetail.tsx","webpack:///./app/views/settings/organizationTeams/roleOverwriteWarning.tsx"],"sourcesContent":["import {css, Theme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {growIn} from 'sentry/styles/animations';\n\ninterface CheckedProps extends React.InputHTMLAttributes<HTMLInputElement> {\n  disabled?: boolean;\n  radioSize?: 'small';\n}\n\nconst checkedCss = (p: CheckedProps, theme: Theme) => css`\n  display: block;\n  width: ${p.radioSize === 'small' ? '0.5rem' : '0.875rem'};\n  height: ${p.radioSize === 'small' ? '0.5rem' : '0.875rem'};\n  border-radius: 50%;\n  background-color: ${theme.active};\n  animation: 0.2s ${growIn} ease;\n  opacity: ${p.disabled ? 0.4 : null};\n`;\n\nconst Radio = styled('input')<CheckedProps>`\n  display: flex;\n  padding: 0;\n  width: ${p => (p.radioSize === 'small' ? '1rem' : '1.5rem')};\n  height: ${p => (p.radioSize === 'small' ? '1rem' : '1.5rem')};\n  position: relative;\n  border-radius: 50%;\n  align-items: center;\n  justify-content: center;\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: inset ${p => p.theme.dropShadowMedium};\n  background: none;\n  appearance: none;\n  transition: border 0.1s, box-shadow 0.1s;\n\n  /* TODO(bootstrap): Our bootstrap CSS adds this, we can remove when we remove that */\n  margin: 0 !important;\n\n  &:focus,\n  &.focus-visible {\n    outline: none;\n    border-color: ${p => p.theme.focusBorder};\n    box-shadow: ${p => p.theme.focusBorder} 0 0 0 1px;\n  }\n\n  &:checked:after {\n    content: '';\n    ${p => checkedCss(p, p.theme)}\n  }\n`;\n\nRadio.defaultProps = {\n  type: 'radio',\n};\n\nexport default Radio;\n","import styled from '@emotion/styled';\n\nimport SelectControl, {\n  ControlProps,\n} from 'sentry/components/forms/controls/selectControl';\nimport {MemberRole} from 'sentry/types';\n\ntype OptionType = {\n  details: React.ReactNode;\n  disabled: boolean;\n  label: string;\n  value: string;\n};\n\ntype Props = Omit<ControlProps<OptionType>, 'onChange' | 'value'> & {\n  disableUnallowed: boolean;\n  roles: MemberRole[];\n  /**\n   * Narrower type than SelectControl because there is no empty value\n   */\n  onChange?: (value: OptionType) => void;\n  value?: string | null;\n};\n\nfunction RoleSelectControl({roles, disableUnallowed, ...props}: Props) {\n  return (\n    <SelectControl\n      options={roles?.map(\n        (r: MemberRole) =>\n          ({\n            value: r.id,\n            label: r.name,\n            disabled: (disableUnallowed && !r.allowed) || r.isRetired,\n            details: <Details>{r.desc}</Details>,\n          } as OptionType)\n      )}\n      showDividers\n      {...props}\n    />\n  );\n}\n\nexport default RoleSelectControl;\n\nconst Details = styled('span')`\n  display: inline-block;\n  width: 20rem;\n`;\n","import styled from '@emotion/styled';\n\nimport {ControlProps} from 'sentry/components/forms/controls/selectControl';\nimport RoleSelectControl from 'sentry/components/roleSelectControl';\nimport {space} from 'sentry/styles/space';\nimport {Organization, Team, TeamMember, TeamRole} from 'sentry/types';\nimport {getEffectiveOrgRole} from 'sentry/utils/orgRole';\nimport {\n  hasOrgRoleOverwrite,\n  RoleOverwriteIcon,\n} from 'sentry/views/settings/organizationTeams/roleOverwriteWarning';\n\ninterface Props {\n  member: TeamMember;\n  onChangeTeamRole: (newRole: TeamRole['id'] | string) => void;\n  organization: Organization;\n  team: Team;\n  disabled?: boolean;\n  size?: ControlProps['size'];\n}\n\nfunction TeamRoleSelect({\n  organization,\n  team,\n  member,\n  onChangeTeamRole,\n  disabled,\n  size,\n}: Props) {\n  const {orgRoleList, teamRoleList, features} = organization;\n  if (!features.includes('team-roles')) {\n    return null;\n  }\n\n  // Determine the org-role, including if the current team has an org role\n  // and adding the user to the current team changes their minimum team-role\n  const possibleOrgRoles = [member.orgRole];\n  if (member.groupOrgRoles && member.groupOrgRoles.length > 0) {\n    possibleOrgRoles.push(member.groupOrgRoles[0].role.id);\n  }\n  if (team.orgRole) {\n    possibleOrgRoles.push(team.orgRole);\n  }\n  const effectiveOrgRole = getEffectiveOrgRole(possibleOrgRoles, orgRoleList);\n\n  // If the member's org-role has elevated permission, their team-role will\n  // inherit scopes from it\n  if (hasOrgRoleOverwrite({orgRole: effectiveOrgRole?.id, orgRoleList, teamRoleList})) {\n    const effectiveTeamRole = teamRoleList.find(\n      r => r.id === effectiveOrgRole?.minimumTeamRole\n    );\n\n    return (\n      <RoleName>\n        {effectiveTeamRole?.name || effectiveOrgRole?.minimumTeamRole}\n        <IconWrapper>\n          <RoleOverwriteIcon\n            orgRole={effectiveOrgRole?.id}\n            orgRoleList={orgRoleList}\n            teamRoleList={teamRoleList}\n          />\n        </IconWrapper>\n      </RoleName>\n    );\n  }\n\n  const teamRoleId =\n    member.teamRole || // From TeamMemberEndpoint\n    member.teamRoles?.find(tr => tr.teamSlug === team.slug)?.role || // From OrgMemberDetailEndpoint\n    null;\n  const teamRole = teamRoleList.find(r => r.id === teamRoleId) || teamRoleList[0];\n\n  return (\n    <RoleSelectControl\n      disabled={disabled}\n      disableUnallowed={false}\n      roles={teamRoleList}\n      value={teamRole.id}\n      onChange={option => onChangeTeamRole(option.value)}\n      size={size}\n    />\n  );\n}\n\nexport default TeamRoleSelect;\n\nconst RoleName = styled('div')`\n  display: flex;\n  align-items: center;\n`;\nconst IconWrapper = styled('div')`\n  height: ${space(2)};\n  margin-left: ${space(1)};\n`;\n","import {Member} from 'sentry/types';\n\n// check to see if a member has been disabled because of the member limit\nexport default function isMemberDisabledFromLimit(member?: Member | null) {\n  return member?.flags['member-limit:restricted'] ?? false;\n}\n","import {OrgRole} from 'sentry/types';\n\nexport function getEffectiveOrgRole(\n  memberOrgRoles: string[],\n  orgRoleList: OrgRole[]\n): OrgRole {\n  const orgRoleMap = orgRoleList.reduce((acc, role, index) => {\n    acc[role.id] = {index, role};\n    return acc;\n  }, {});\n\n  // sort by ascending index (high to low priority)\n  memberOrgRoles.sort((a, b) => orgRoleMap[b].index - orgRoleMap[a].index);\n\n  return orgRoleMap[memberOrgRoles[0]]?.role;\n}\n","import React from 'react';\nimport styled from '@emotion/styled';\nimport startCase from 'lodash/startCase';\n\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport {TeamBadge} from 'sentry/components/idBadge/teamBadge';\nimport Link from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport TeamRoleSelect from 'sentry/components/teamRoleSelect';\nimport {IconSubtract} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Member, Organization, Team} from 'sentry/types';\nimport {getEffectiveOrgRole} from 'sentry/utils/orgRole';\nimport {useTeams} from 'sentry/utils/useTeams';\nimport {RoleOverwritePanelAlert} from 'sentry/views/settings/organizationTeams/roleOverwriteWarning';\nimport {getButtonHelpText} from 'sentry/views/settings/organizationTeams/utils';\n\nimport {DropdownAddTeam, TeamSelectProps} from './utils';\n\ntype Props = TeamSelectProps & {\n  /**\n   * Member that this component is acting upon\n   */\n  member: Member;\n  /**\n   * Used when showing Teams for a Member\n   */\n  onChangeTeamRole: (teamSlug: string, teamRole: string) => void;\n  /**\n   * Used when showing Teams for a Member\n   */\n  selectedOrgRole: Member['orgRole'];\n  /**\n   * Used when showing Teams for a Member\n   */\n  selectedTeamRoles: Member['teamRoles'];\n};\n\nfunction TeamSelect({\n  disabled,\n  loadingTeams,\n  member,\n  selectedOrgRole,\n  selectedTeamRoles,\n  organization,\n  onAddTeam,\n  onRemoveTeam,\n  onCreateTeam,\n  onChangeTeamRole,\n}: Props) {\n  const {teams, onSearch, fetching: isLoadingTeams} = useTeams();\n  const {orgRoleList, teamRoleList} = organization;\n\n  const selectedTeamSlugs = new Set(selectedTeamRoles.map(tm => tm.teamSlug));\n  const selectedTeams = teams.filter(tm => selectedTeamSlugs.has(tm.slug));\n\n  // Determine if adding a team changes the minimum team-role\n  // Get org-roles from team membership, if any\n  const groupOrgRoles = selectedTeams\n    .filter(team => team.orgRole)\n    .map(team => team.orgRole as string);\n  if (selectedOrgRole) {\n    groupOrgRoles.push(selectedOrgRole);\n  }\n\n  // Sort them and to get the highest priority role\n  // Highest priority role may change minimum team role\n  const effectiveOrgRole = getEffectiveOrgRole(groupOrgRoles, orgRoleList);\n\n  const renderBody = () => {\n    if (selectedTeams.length === 0) {\n      return <EmptyMessage>{t('No Teams assigned')}</EmptyMessage>;\n    }\n\n    return (\n      <React.Fragment>\n        {organization.features.includes('team-roles') && effectiveOrgRole && (\n          <RoleOverwritePanelAlert\n            orgRole={effectiveOrgRole?.id}\n            orgRoleList={orgRoleList}\n            teamRoleList={teamRoleList}\n          />\n        )}\n\n        {selectedTeams.map(team => (\n          <TeamRow\n            key={team.slug}\n            disabled={disabled}\n            organization={organization}\n            team={team}\n            member={{\n              ...member,\n              groupOrgRoles: [{role: effectiveOrgRole, teamSlug: ''}],\n              orgRole: selectedOrgRole,\n              teamRoles: selectedTeamRoles,\n            }}\n            onChangeTeamRole={onChangeTeamRole}\n            onRemoveTeam={slug => onRemoveTeam(slug)}\n          />\n        ))}\n      </React.Fragment>\n    );\n  };\n\n  return (\n    <Panel>\n      <PanelHeader hasButtons>\n        {t('Team')}\n        <DropdownAddTeam\n          disabled={disabled}\n          isLoadingTeams={isLoadingTeams}\n          isAddingTeamToMember\n          canCreateTeam={false}\n          onSearch={onSearch}\n          onSelect={onAddTeam}\n          onCreateTeam={onCreateTeam}\n          organization={organization}\n          selectedTeams={selectedTeams.map(tm => tm.slug)}\n          teams={teams}\n        />\n      </PanelHeader>\n\n      <PanelBody>{loadingTeams ? <LoadingIndicator /> : renderBody()}</PanelBody>\n    </Panel>\n  );\n}\n\nfunction TeamRow({\n  disabled,\n  organization,\n  team,\n  member,\n  onRemoveTeam,\n  onChangeTeamRole,\n}: {\n  disabled: boolean;\n  member: Member;\n  onChangeTeamRole: Props['onChangeTeamRole'];\n  onRemoveTeam: Props['onRemoveTeam'];\n  organization: Organization;\n  team: Team;\n}) {\n  const hasOrgAdmin = organization.access.includes('org:admin');\n  const isIdpProvisioned = team.flags['idp:provisioned'];\n  const isPermissionGroup = team.orgRole !== null && !hasOrgAdmin;\n  const isRemoveDisabled = disabled || isIdpProvisioned || isPermissionGroup;\n\n  const buttonHelpText = getButtonHelpText(isIdpProvisioned, isPermissionGroup);\n  const orgRoleFromTeam = team.orgRole ? `${startCase(team.orgRole)} Team` : null;\n\n  return (\n    <TeamPanelItem data-test-id=\"team-row-for-member\">\n      <TeamPanelItemLeft>\n        <Link to={`/settings/${organization.slug}/teams/${team.slug}/`}>\n          <TeamBadge team={team} />\n        </Link>\n      </TeamPanelItemLeft>\n\n      <TeamOrgRole>{orgRoleFromTeam}</TeamOrgRole>\n\n      {organization.features.includes('team-roles') && (\n        <RoleSelectWrapper>\n          <TeamRoleSelect\n            disabled={disabled}\n            size=\"xs\"\n            organization={organization}\n            team={team}\n            member={member}\n            onChangeTeamRole={newRole => onChangeTeamRole(team.slug, newRole)}\n          />\n        </RoleSelectWrapper>\n      )}\n\n      <Button\n        size=\"xs\"\n        icon={<IconSubtract isCircled size=\"xs\" />}\n        title={buttonHelpText}\n        disabled={isRemoveDisabled}\n        onClick={() => onRemoveTeam(team.slug)}\n      >\n        {t('Remove')}\n      </Button>\n    </TeamPanelItem>\n  );\n}\n\nconst TeamPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n  justify-content: space-between;\n`;\n\nconst TeamPanelItemLeft = styled('div')`\n  flex-grow: 4;\n`;\n\nconst TeamOrgRole = styled('div')`\n  min-width: 90px;\n  flex-grow: 1;\n  display: flex;\n  justify-content: center;\n`;\n\nconst RoleSelectWrapper = styled('div')`\n  min-width: 200px;\n  margin-right: ${space(2)};\n`;\n\nexport default TeamSelect;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport Radio from 'sentry/components/radio';\nimport {t} from 'sentry/locale';\nimport {OrgRole} from 'sentry/types';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst Label = styled('label')`\n  display: flex;\n  flex: 1;\n  align-items: center;\n  margin-bottom: 0;\n`;\n\ntype Props = {\n  disabled: boolean;\n  enforceAllowed: boolean;\n  enforceRetired: boolean;\n  roleList: OrgRole[];\n  roleSelected: string;\n  setSelected: (id: string) => void;\n};\n\nclass OrganizationRoleSelect extends Component<Props> {\n  render() {\n    const {\n      disabled,\n      enforceRetired,\n      enforceAllowed,\n      roleList,\n      roleSelected,\n      setSelected,\n    } = this.props;\n\n    return (\n      <Panel>\n        <PanelHeader>\n          <div>{t('Organization Role')}</div>\n        </PanelHeader>\n\n        <PanelBody>\n          {roleList.map(role => {\n            const {desc, name, id, allowed, isRetired: roleRetired} = role;\n\n            const isRetired = enforceRetired && roleRetired;\n            const isDisabled = disabled || isRetired || (enforceAllowed && !allowed);\n\n            return (\n              <PanelItem\n                key={id}\n                onClick={() => !isDisabled && setSelected(id)}\n                css={!isDisabled ? {} : {color: 'grey', cursor: 'default'}}\n              >\n                <Label>\n                  <Radio id={id} value={name} checked={id === roleSelected} readOnly />\n                  <div style={{flex: 1, padding: '0 16px'}}>\n                    {name}\n                    <TextBlock noMargin>\n                      <div className=\"help-block\">{desc}</div>\n                    </TextBlock>\n                  </div>\n                </Label>\n              </PanelItem>\n            );\n          })}\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nexport default OrganizationRoleSelect;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\nimport * as Sentry from '@sentry/react';\nimport isEqual from 'lodash/isEqual';\n\nimport {removeAuthenticator} from 'sentry/actionCreators/account';\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {resendMemberInvite, updateMember} from 'sentry/actionCreators/members';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport NotFound from 'sentry/components/errors/notFound';\nimport FieldGroup from 'sentry/components/forms/fieldGroup';\nimport HookOrDefault from 'sentry/components/hookOrDefault';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconRefresh} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Member, Organization} from 'sentry/types';\nimport isMemberDisabledFromLimit from 'sentry/utils/isMemberDisabledFromLimit';\nimport Teams from 'sentry/utils/teams';\nimport {normalizeUrl} from 'sentry/utils/withDomainRequired';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TeamSelectForMember from 'sentry/views/settings/components/teamSelect/teamSelectForMember';\n\nimport OrganizationRoleSelect from './inviteMember/orgRoleSelect';\n\nconst MULTIPLE_ORGS = t('Cannot be reset since user is in more than one organization');\nconst NOT_ENROLLED = t('Not enrolled in two-factor authentication');\nconst NO_PERMISSION = t('You do not have permission to perform this action');\nconst TWO_FACTOR_REQUIRED = t(\n  'Cannot be reset since two-factor is required for this organization'\n);\n\ntype RouteParams = {\n  memberId: string;\n};\n\ntype Props = {\n  organization: Organization;\n} & RouteComponentProps<RouteParams, {}>;\n\ntype State = {\n  groupOrgRoles: Member['groupOrgRoles']; // Form state\n  member: Member | null;\n  orgRole: Member['orgRole']; // Form state\n  teamRoles: Member['teamRoles']; // Form state\n} & AsyncView['state'];\n\nconst DisabledMemberTooltip = HookOrDefault({\n  hookName: 'component:disabled-member-tooltip',\n  defaultComponent: ({children}) => <Fragment>{children}</Fragment>,\n});\n\nclass OrganizationMemberDetail extends AsyncView<Props, State> {\n  get hasTeamRoles() {\n    const {organization} = this.props;\n    return organization.features.includes('team-roles');\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      groupOrgRoles: [],\n      member: null,\n      orgRole: '',\n      teamRoles: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, params} = this.props;\n    return [\n      ['member', `/organizations/${organization.slug}/members/${params.memberId}/`],\n    ];\n  }\n\n  onRequestSuccess({data, stateKey}: {data: Member; stateKey: string}) {\n    if (stateKey === 'member') {\n      const {orgRole, teamRoles, groupOrgRoles} = data;\n      this.setState({\n        orgRole,\n        teamRoles,\n        groupOrgRoles,\n      });\n    }\n  }\n\n  handleSave = async () => {\n    const {organization, params} = this.props;\n    const {orgRole, teamRoles} = this.state;\n\n    addLoadingMessage(t('Saving...'));\n    this.setState({busy: true});\n\n    try {\n      const updatedMember = await updateMember(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        data: {orgRole, teamRoles} as any,\n      });\n      this.setState({\n        member: updatedMember,\n        orgRole: updatedMember.orgRole,\n        teamRoles: updatedMember.teamRoles,\n        busy: false,\n      });\n      addSuccessMessage(t('Saved'));\n    } catch (resp) {\n      const errorMessage =\n        (resp && resp.responseJSON && resp.responseJSON.detail) || t('Could not save...');\n      this.setState({busy: false});\n      addErrorMessage(errorMessage);\n    }\n  };\n\n  handleInvite = async (regenerate: boolean) => {\n    const {organization, params} = this.props;\n\n    addLoadingMessage(t('Sending invite...'));\n\n    this.setState({busy: true});\n\n    try {\n      const data = await resendMemberInvite(this.api, {\n        orgId: organization.slug,\n        memberId: params.memberId,\n        regenerate,\n      });\n\n      addSuccessMessage(t('Sent invite!'));\n\n      if (regenerate) {\n        this.setState(state => ({member: {...state.member, ...data}}));\n      }\n    } catch (_err) {\n      addErrorMessage(t('Could not send invite'));\n    }\n\n    this.setState({busy: false});\n  };\n\n  handle2faReset = async () => {\n    const {organization, router} = this.props;\n    const {user} = this.state.member!;\n\n    const requests =\n      user?.authenticators.map(auth => removeAuthenticator(this.api, user.id, auth.id)) ??\n      [];\n\n    try {\n      await Promise.all(requests);\n      router.push(normalizeUrl(`/settings/${organization.slug}/members/`));\n      addSuccessMessage(t('All authenticators have been removed'));\n    } catch (err) {\n      addErrorMessage(t('Error removing authenticators'));\n      Sentry.captureException(err);\n    }\n  };\n\n  onAddTeam = (teamSlug: string) => {\n    const teamRoles = [...this.state.teamRoles];\n    const i = teamRoles.findIndex(r => r.teamSlug === teamSlug);\n    if (i !== -1) {\n      return;\n    }\n\n    teamRoles.push({teamSlug, role: null});\n    this.setState({teamRoles});\n  };\n\n  onRemoveTeam = (teamSlug: string) => {\n    const teamRoles = this.state.teamRoles.filter(r => r.teamSlug !== teamSlug);\n    this.setState({teamRoles});\n  };\n\n  onChangeOrgRole = orgRole => this.setState({orgRole});\n\n  onChangeTeamRole = (teamSlug: string, role: string) => {\n    if (!this.hasTeamRoles) {\n      return;\n    }\n\n    const teamRoles = [...this.state.teamRoles];\n    const i = teamRoles.findIndex(r => r.teamSlug === teamSlug);\n    if (i === -1) {\n      return;\n    }\n\n    teamRoles[i] = {...teamRoles[i], role};\n    this.setState({teamRoles});\n  };\n\n  showResetButton = () => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user || !user.authenticators || organization.require2FA) {\n      return false;\n    }\n    const hasAuth = user.authenticators.length >= 1;\n    return hasAuth && user.canReset2fa;\n  };\n\n  getTooltip = (): string => {\n    const {organization} = this.props;\n    const {member} = this.state;\n    const {user} = member!;\n\n    if (!user) {\n      return '';\n    }\n\n    if (!user.authenticators) {\n      return NO_PERMISSION;\n    }\n    if (!user.authenticators.length) {\n      return NOT_ENROLLED;\n    }\n    if (!user.canReset2fa) {\n      return MULTIPLE_ORGS;\n    }\n    if (organization.require2FA) {\n      return TWO_FACTOR_REQUIRED;\n    }\n\n    return '';\n  };\n\n  get memberDeactivated() {\n    return isMemberDisabledFromLimit(this.state.member);\n  }\n\n  get hasFormChanged() {\n    const {member, orgRole, teamRoles} = this.state;\n    if (!member) {\n      return false;\n    }\n\n    if (orgRole !== member.orgRole || !isEqual(teamRoles, member.teamRoles)) {\n      return true;\n    }\n\n    return false;\n  }\n\n  renderMemberStatus(member: Member) {\n    if (this.memberDeactivated) {\n      return (\n        <em>\n          <DisabledMemberTooltip>{t('Deactivated')}</DisabledMemberTooltip>\n        </em>\n      );\n    }\n    if (member.expired) {\n      return <em>{t('Invitation Expired')}</em>;\n    }\n    if (member.pending) {\n      return <em>{t('Invitation Pending')}</em>;\n    }\n    return t('Active');\n  }\n\n  renderBody() {\n    const {organization} = this.props;\n    const {member, orgRole, teamRoles} = this.state;\n\n    if (!member) {\n      return <NotFound />;\n    }\n\n    const {access, features, orgRoleList} = organization;\n    const canEdit = access.includes('org:write') && !this.memberDeactivated;\n    const hasTeamRoles = features.includes('team-roles');\n\n    const {email, expired, pending, invite_link: inviteLink} = member;\n    const canResend = !expired;\n    const showAuth = !pending;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={\n            <Fragment>\n              <div>{member.name}</div>\n              <ExtraHeaderText>{t('Member Settings')}</ExtraHeaderText>\n            </Fragment>\n          }\n        />\n\n        <Panel>\n          <PanelHeader>{t('Basics')}</PanelHeader>\n\n          <PanelBody>\n            <PanelItem>\n              <Details>\n                <div>\n                  <DetailLabel>{t('Email')}</DetailLabel>\n                  <div>\n                    <ExternalLink href={`mailto:${email}`}>{email}</ExternalLink>\n                  </div>\n                </div>\n                <div>\n                  <DetailLabel>{t('Status')}</DetailLabel>\n                  <div data-test-id=\"member-status\">\n                    {this.renderMemberStatus(member)}\n                  </div>\n                </div>\n                <div>\n                  <DetailLabel>{t('Added')}</DetailLabel>\n                  <div>\n                    <DateTime dateOnly date={member.dateCreated} />\n                  </div>\n                </div>\n              </Details>\n            </PanelItem>\n            <PanelItem>\n              {inviteLink && (\n                <InviteSection>\n                  <InviteField>\n                    <DetailLabel>{t('Invite Link')}</DetailLabel>\n                    <TextCopyInput>{inviteLink}</TextCopyInput>\n                    <p className=\"help-block\">\n                      {t(\n                        'This invite link can be used by anyone who knows it. Keep it secure!'\n                      )}\n                    </p>\n                  </InviteField>\n                  <ButtonBar gap={1}>\n                    {canResend && (\n                      <Button\n                        data-test-id=\"resend-invite\"\n                        onClick={() => this.handleInvite(false)}\n                      >\n                        {t('Resend Invite')}\n                      </Button>\n                    )}\n                    <Button\n                      onClick={() => this.handleInvite(true)}\n                      title={t(\n                        'Generate New Invite. This will invalidate the previous invite link!'\n                      )}\n                      priority=\"danger\"\n                      aria-label={t('Generate New Invite')}\n                      icon={<IconRefresh size=\"sm\" />}\n                    />\n                  </ButtonBar>\n                </InviteSection>\n              )}\n            </PanelItem>\n          </PanelBody>\n        </Panel>\n\n        {showAuth && (\n          <Panel>\n            <PanelHeader>{t('Authentication')}</PanelHeader>\n            <PanelBody>\n              <FieldGroup\n                alignRight\n                flexibleControlStateSize\n                label={t('Reset two-factor authentication')}\n                help={t(\n                  'Resetting two-factor authentication will remove all two-factor authentication methods for this member.'\n                )}\n              >\n                <Tooltip disabled={this.showResetButton()} title={this.getTooltip()}>\n                  <Confirm\n                    disabled={!this.showResetButton()}\n                    message={tct(\n                      'Are you sure you want to disable all two-factor authentication methods for [name]?',\n                      {name: member.name ? member.name : 'this member'}\n                    )}\n                    onConfirm={this.handle2faReset}\n                  >\n                    <Button priority=\"danger\">\n                      {t('Reset two-factor authentication')}\n                    </Button>\n                  </Confirm>\n                </Tooltip>\n              </FieldGroup>\n            </PanelBody>\n          </Panel>\n        )}\n\n        <OrganizationRoleSelect\n          enforceAllowed={false}\n          enforceRetired={hasTeamRoles}\n          disabled={!canEdit}\n          roleList={orgRoleList}\n          roleSelected={orgRole}\n          setSelected={this.onChangeOrgRole}\n        />\n\n        <Teams slugs={member.teams}>\n          {({initiallyLoaded}) => (\n            <Fragment>\n              <TeamSelectForMember\n                disabled={!canEdit}\n                organization={organization}\n                member={member}\n                selectedOrgRole={orgRole}\n                selectedTeamRoles={teamRoles}\n                onChangeTeamRole={this.onChangeTeamRole}\n                onAddTeam={this.onAddTeam}\n                onRemoveTeam={this.onRemoveTeam}\n                loadingTeams={!initiallyLoaded}\n              />\n            </Fragment>\n          )}\n        </Teams>\n\n        <Footer>\n          <Button\n            priority=\"primary\"\n            busy={this.state.busy}\n            onClick={this.handleSave}\n            disabled={!canEdit || !this.hasFormChanged}\n          >\n            {t('Save Member')}\n          </Button>\n        </Footer>\n      </Fragment>\n    );\n  }\n}\n\nexport default withOrganization(OrganizationMemberDetail);\n\nconst ExtraHeaderText = styled('div')`\n  color: ${p => p.theme.gray300};\n  font-weight: normal;\n  font-size: ${p => p.theme.fontSizeLarge};\n`;\n\nconst Details = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  grid-template-columns: 2fr 1fr 1fr;\n  gap: ${space(2)};\n  width: 100%;\n\n  @media (max-width: ${p => p.theme.breakpoints.small}) {\n    grid-auto-flow: row;\n    grid-template-columns: auto;\n  }\n`;\n\nconst DetailLabel = styled('div')`\n  font-weight: bold;\n  margin-bottom: ${space(0.5)};\n  color: ${p => p.theme.textColor};\n`;\n\nconst InviteField = styled('div')`\n  flex-grow: 1;\n`;\n\nconst InviteSection = styled('div')`\n  flex-grow: 1;\n  display: flex;\n  gap: ${space(1)};\n`;\n\nconst Footer = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n`;\n","import {PanelAlert} from 'sentry/components/panels';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconInfo} from 'sentry/icons';\nimport {tct} from 'sentry/locale';\nimport {OrgRole, TeamRole} from 'sentry/types';\n\ntype Props = {\n  orgRole: OrgRole['id'] | undefined;\n  orgRoleList: OrgRole[];\n  teamRoleList: TeamRole[];\n  isSelf?: boolean;\n};\n\nexport function RoleOverwriteIcon(props: Props) {\n  const hasOverride = hasOrgRoleOverwrite(props);\n  if (!hasOverride) {\n    return null;\n  }\n\n  return (\n    <Tooltip title={getOverwriteString(props)}>\n      <IconInfo size=\"sm\" color=\"gray300\" />\n    </Tooltip>\n  );\n}\n\nexport function RoleOverwritePanelAlert(props: Props) {\n  const hasOverride = hasOrgRoleOverwrite(props);\n  if (!hasOverride) {\n    return null;\n  }\n\n  return (\n    <PanelAlert data-test-id=\"alert-role-overwrite\">\n      {getOverwriteString(props)}\n    </PanelAlert>\n  );\n}\n\n/**\n * Check that the user's org role has a minimum team role that maps to the lowest\n * possible team role\n */\nexport function hasOrgRoleOverwrite(props: Props) {\n  const {orgRole, orgRoleList, teamRoleList} = props;\n\n  const orgRoleObj = orgRoleList.find(r => r.id === orgRole);\n  return teamRoleList.findIndex(r => r.id === orgRoleObj?.minimumTeamRole) > 0;\n}\n\n/**\n * Standardize string so situations where org-level vs team-level roles is easier to recognize\n */\nexport function getOverwriteString(props: Props) {\n  const {orgRole, orgRoleList, teamRoleList, isSelf} = props;\n  const orgRoleObj = orgRoleList.find(r => r.id === orgRole);\n  const teamRoleObj = teamRoleList.find(r => r.id === orgRoleObj?.minimumTeamRole);\n  if (!orgRoleObj || !teamRoleObj) {\n    return '';\n  }\n\n  return tct(\n    '[selfNoun] organization role as [article] [orgRole] has granted [selfPronoun] a minimum team-level role of [teamRole]',\n    {\n      selfNoun: isSelf ? 'Your' : \"This user's\",\n      selfPronoun: isSelf ? 'you' : 'them',\n      article: 'AEIOU'.includes(orgRoleObj.name[0]) ? 'an' : 'a',\n      orgRole: <strong>{orgRoleObj.name}</strong>,\n      teamRole: <strong>{teamRoleObj.name}</strong>,\n    }\n  );\n}\n\nexport default RoleOverwriteIcon;\n"],"names":["Radio","_styled","target","p","radioSize","theme","border","dropShadowMedium","focusBorder","checkedCss","css","active","growIn","disabled","defaultProps","type","RoleSelectControl","_ref","roles","disableUnallowed","props","_jsx","SelectControl","options","map","r","value","id","label","name","allowed","isRetired","details","Details","children","desc","showDividers","displayName","styles","TeamRoleSelect","organization","team","member","onChangeTeamRole","size","orgRoleList","teamRoleList","features","includes","possibleOrgRoles","orgRole","groupOrgRoles","length","push","role","effectiveOrgRole","getEffectiveOrgRole","hasOrgRoleOverwrite","effectiveTeamRole","find","minimumTeamRole","_jsxs","RoleName","IconWrapper","RoleOverwriteIcon","teamRoleId","teamRole","teamRoles","tr","teamSlug","slug","onChange","option","space","isMemberDisabledFromLimit","flags","memberOrgRoles","orgRoleMap","reduce","acc","index","sort","a","b","TeamSelect","loadingTeams","selectedOrgRole","selectedTeamRoles","onAddTeam","onRemoveTeam","onCreateTeam","teams","onSearch","fetching","isLoadingTeams","useTeams","selectedTeamSlugs","Set","tm","selectedTeams","filter","has","Panel","PanelHeader","hasButtons","t","DropdownAddTeam","isAddingTeamToMember","canCreateTeam","onSelect","PanelBody","LoadingIndicator","EmptyMessage","React","RoleOverwritePanelAlert","TeamRow","_ref2","hasOrgAdmin","access","isIdpProvisioned","isPermissionGroup","isRemoveDisabled","buttonHelpText","getButtonHelpText","orgRoleFromTeam","startCase","TeamPanelItem","TeamPanelItemLeft","Link","to","TeamBadge","TeamOrgRole","RoleSelectWrapper","newRole","Button","icon","IconSubtract","isCircled","title","onClick","PanelItem","Label","OrganizationRoleSelect","Component","render","enforceRetired","enforceAllowed","roleList","roleSelected","setSelected","this","roleRetired","isDisabled","color","cursor","checked","readOnly","style","flex","padding","TextBlock","noMargin","className","MULTIPLE_ORGS","NOT_ENROLLED","NO_PERMISSION","TWO_FACTOR_REQUIRED","DisabledMemberTooltip","HookOrDefault","hookName","defaultComponent","Fragment","OrganizationMemberDetail","AsyncView","constructor","arguments","_defineProperty","async","params","state","addLoadingMessage","setState","busy","updatedMember","updateMember","api","orgId","memberId","data","addSuccessMessage","resp","errorMessage","responseJSON","detail","addErrorMessage","resendMemberInvite","regenerate","_err","router","user","requests","authenticators","auth","removeAuthenticator","Promise","all","normalizeUrl","err","Sentry","findIndex","hasTeamRoles","i","require2FA","canReset2fa","getDefaultState","super","getEndpoints","onRequestSuccess","stateKey","memberDeactivated","hasFormChanged","isEqual","renderMemberStatus","expired","pending","renderBody","NotFound","canEdit","email","invite_link","inviteLink","canResend","showAuth","SettingsPageHeader","ExtraHeaderText","DetailLabel","ExternalLink","href","DateTime","dateOnly","date","dateCreated","InviteSection","InviteField","TextCopyInput","ButtonBar","gap","handleInvite","priority","IconRefresh","FieldGroup","alignRight","flexibleControlStateSize","help","Tooltip","showResetButton","getTooltip","Confirm","message","tct","onConfirm","handle2faReset","onChangeOrgRole","Teams","slugs","_ref3","initiallyLoaded","TeamSelectForMember","Footer","handleSave","withOrganization","gray300","fontSizeLarge","breakpoints","small","textColor","getOverwriteString","IconInfo","PanelAlert","orgRoleObj","isSelf","teamRoleObj","selfNoun","selfPronoun","article"],"sourceRoot":""}