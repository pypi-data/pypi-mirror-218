{"version":3,"file":"chunks/app_views_settings_account_accountSecurity_accountSecurityDetails_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/accountSecurity/components/recoveryCodes.tsx","webpack:///./app/views/settings/account/accountSecurity/components/u2fEnrolledDetails.tsx","webpack:///./app/views/settings/account/accountSecurity/accountSecurityDetails.tsx","webpack:///./app/views/settings/account/accountSecurity/components/confirmHeader.tsx","webpack:///./app/views/settings/account/accountSecurity/components/removeConfirm.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = AsyncComponent['state'];\nexport type AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport {CopyToClipboardButton} from 'sentry/components/copyToClipboardButton';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport {\n  Panel,\n  PanelAlert,\n  PanelBody,\n  PanelHeader,\n  PanelItem,\n} from 'sentry/components/panels';\nimport {IconDownload, IconPrint} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ntype Props = {\n  codes: string[];\n  isEnrolled: boolean;\n  onRegenerateBackupCodes: () => void;\n  className?: string;\n};\n\nfunction RecoveryCodes({className, isEnrolled, codes, onRegenerateBackupCodes}: Props) {\n  const printCodes = () => {\n    // eslint-disable-next-line dot-notation\n    const iframe = window.frames['printable'];\n    iframe.document.write(codes.join('<br>'));\n    iframe.print();\n    iframe.document.close();\n  };\n\n  if (!isEnrolled || !codes) {\n    return null;\n  }\n\n  const formattedCodes = codes.join(' \\n');\n\n  return (\n    <CodeContainer className={className}>\n      <PanelHeader hasButtons>\n        {t('Unused Codes')}\n\n        <Actions>\n          <CopyToClipboardButton text={formattedCodes} size=\"sm\" />\n          <Button size=\"sm\" onClick={printCodes} aria-label={t('print')}>\n            <IconPrint />\n          </Button>\n          <Button\n            size=\"sm\"\n            download=\"sentry-recovery-codes.txt\"\n            href={`data:text/plain;charset=utf-8,${formattedCodes}`}\n            aria-label={t('download')}\n          >\n            <IconDownload />\n          </Button>\n          <Confirm\n            onConfirm={onRegenerateBackupCodes}\n            message={t(\n              'Are you sure you want to regenerate recovery codes? Your old codes will no longer work.'\n            )}\n          >\n            <Button priority=\"danger\" size=\"sm\">\n              {t('Regenerate Codes')}\n            </Button>\n          </Confirm>\n        </Actions>\n      </PanelHeader>\n      <PanelBody>\n        <PanelAlert type=\"warning\">\n          {t(\n            'Make sure to save a copy of your recovery codes and store them in a safe place.'\n          )}\n        </PanelAlert>\n        <div>{!!codes.length && codes.map(code => <Code key={code}>{code}</Code>)}</div>\n        {!codes.length && (\n          <EmptyMessage>{t('You have no more recovery codes to use')}</EmptyMessage>\n        )}\n      </PanelBody>\n      <iframe data-test-id=\"frame\" name=\"printable\" style={{display: 'none'}} />\n    </CodeContainer>\n  );\n}\n\nexport default RecoveryCodes;\n\nconst CodeContainer = styled(Panel)`\n  margin-top: ${space(4)};\n`;\n\nconst Actions = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(1)};\n`;\n\nconst Code = styled(PanelItem)`\n  font-family: ${p => p.theme.text.familyMono};\n  padding: ${space(2)};\n`;\n","import {Fragment, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport Confirm from 'sentry/components/confirm';\nimport DateTime from 'sentry/components/dateTime';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport Input from 'sentry/components/input';\nimport {Panel, PanelBody, PanelHeader, PanelItem} from 'sentry/components/panels';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconClose, IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport ConfirmHeader from 'sentry/views/settings/account/accountSecurity/components/confirmHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nfunction U2fEnrolledDetails(props) {\n  const {className, isEnrolled, devices, id, onRemoveU2fDevice, onRenameU2fDevice} =\n    props;\n\n  if (id !== 'u2f' || !isEnrolled) {\n    return null;\n  }\n\n  const hasDevices = devices?.length;\n  // Note Tooltip doesn't work because of bootstrap(?) pointer events for disabled buttons\n  const isLastDevice = hasDevices === 1;\n  return (\n    <Panel className={className}>\n      <PanelHeader>{t('Device name')}</PanelHeader>\n\n      <PanelBody>\n        {!hasDevices && (\n          <EmptyMessage>{t('You have not added any U2F devices')}</EmptyMessage>\n        )}\n        {hasDevices &&\n          devices?.map((device, i) => (\n            <Device\n              key={i}\n              device={device}\n              isLastDevice={isLastDevice}\n              onRenameU2fDevice={onRenameU2fDevice}\n              onRemoveU2fDevice={onRemoveU2fDevice}\n            />\n          ))}\n        <AddAnotherPanelItem>\n          <Button to=\"/settings/account/security/mfa/u2f/enroll/\" size=\"sm\">\n            {t('Add Another Device')}\n          </Button>\n        </AddAnotherPanelItem>\n      </PanelBody>\n    </Panel>\n  );\n}\n\nfunction Device(props) {\n  const {device, isLastDevice, onRenameU2fDevice, onRemoveU2fDevice} = props;\n  const [deviceName, setDeviceName] = useState(device.name);\n  const [isEditing, setEditting] = useState(false);\n\n  if (!isEditing) {\n    return (\n      <DevicePanelItem key={device.name}>\n        <DeviceInformation>\n          <Name>{device.name}</Name>\n          <FadedDateTime date={device.timestamp} />\n        </DeviceInformation>\n        <Actions>\n          <Button size=\"sm\" onClick={() => setEditting(true)}>\n            {t('Rename Device')}\n          </Button>\n        </Actions>\n        <Actions>\n          <Confirm\n            onConfirm={() => onRemoveU2fDevice(device)}\n            disabled={isLastDevice}\n            message={\n              <Fragment>\n                <ConfirmHeader>{t('Do you want to remove U2F device?')}</ConfirmHeader>\n                <TextBlock>\n                  {t('Are you sure you want to remove the U2F device \"%s\"?', device.name)}\n                </TextBlock>\n              </Fragment>\n            }\n          >\n            <Button size=\"sm\" priority=\"danger\">\n              <Tooltip\n                disabled={!isLastDevice}\n                title={t('Can not remove last U2F device')}\n              >\n                <IconDelete size=\"xs\" />\n              </Tooltip>\n            </Button>\n          </Confirm>\n        </Actions>\n      </DevicePanelItem>\n    );\n  }\n\n  return (\n    <DevicePanelItem key={device.name}>\n      <DeviceInformation>\n        <DeviceNameInput\n          type=\"text\"\n          value={deviceName}\n          onChange={e => {\n            setDeviceName(e.target.value);\n          }}\n        />\n        <FadedDateTime date={device.timestamp} />\n      </DeviceInformation>\n      <Actions>\n        <Button\n          priority=\"primary\"\n          size=\"sm\"\n          onClick={() => {\n            onRenameU2fDevice(device, deviceName);\n            setEditting(false);\n          }}\n        >\n          Rename Device\n        </Button>\n      </Actions>\n\n      <Actions>\n        <Button\n          size=\"sm\"\n          title=\"Cancel rename\"\n          onClick={() => {\n            setDeviceName(device.name);\n            setEditting(false);\n          }}\n        >\n          <IconClose size=\"xs\" />\n        </Button>\n      </Actions>\n    </DevicePanelItem>\n  );\n}\n\nconst DeviceNameInput = styled(Input)`\n  width: 50%;\n  margin-right: ${space(2)};\n`;\n\nconst DevicePanelItem = styled(PanelItem)`\n  padding: 0;\n`;\n\nconst DeviceInformation = styled('div')`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  flex: 1 1;\n  height: 72px;\n\n  padding: ${space(2)};\n  padding-right: 0;\n`;\n\nconst FadedDateTime = styled(DateTime)`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  opacity: 0.6;\n`;\n\nconst Name = styled('div')`\n  flex: 1;\n`;\n\nconst Actions = styled('div')`\n  margin: ${space(2)};\n`;\n\nconst AddAnotherPanelItem = styled(PanelItem)`\n  justify-content: flex-end;\n  padding: ${space(2)};\n`;\n\nexport default styled(U2fEnrolledDetails)`\n  margin-top: ${space(4)};\n`;\n","/**\n * AccountSecurityDetails is only displayed when user is enrolled in the 2fa method.\n * It displays created + last used time of the 2fa method.\n *\n * Also displays 2fa method specific details.\n */\nimport {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Button} from 'sentry/components/button';\nimport CircleIndicator from 'sentry/components/circleIndicator';\nimport DateTime from 'sentry/components/dateTime';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Authenticator, AuthenticatorDevice} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport RecoveryCodes from 'sentry/views/settings/account/accountSecurity/components/recoveryCodes';\nimport RemoveConfirm from 'sentry/views/settings/account/accountSecurity/components/removeConfirm';\nimport U2fEnrolledDetails from 'sentry/views/settings/account/accountSecurity/components/u2fEnrolledDetails';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nconst ENDPOINT = '/users/me/authenticators/';\n\ntype AuthenticatorDateProps = {\n  /**\n   * Can be null or a Date object.\n   * Component will have value \"never\" if it is null\n   */\n  date: string | null;\n  label: string;\n};\n\nfunction AuthenticatorDate({label, date}: AuthenticatorDateProps) {\n  return (\n    <Fragment>\n      <DateLabel>{label}</DateLabel>\n      <div>{date ? <DateTime date={date} /> : t('never')}</div>\n    </Fragment>\n  );\n}\n\ntype Props = {\n  deleteDisabled: boolean;\n  onRegenerateBackupCodes: () => void;\n} & RouteComponentProps<{authId: string}, {}>;\n\ntype State = {\n  authenticator: Authenticator | null;\n} & AsyncView['state'];\n\nclass AccountSecurityDetails extends AsyncView<Props, State> {\n  getTitle() {\n    return t('Security');\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {params} = this.props;\n    const {authId} = params;\n\n    return [['authenticator', `${ENDPOINT}${authId}/`]];\n  }\n\n  handleRemove = async (device?: AuthenticatorDevice) => {\n    const {authenticator} = this.state;\n\n    if (!authenticator || !authenticator.authId) {\n      return;\n    }\n\n    // if the device is defined, it means that U2f is being removed\n    // reason for adding a trailing slash is a result of the endpoint on line 109 needing it but it can't be set there as if deviceId is None, the route will end with '//'\n    const deviceId = device ? `${device.key_handle}/` : '';\n    const deviceName = device ? device.name : t('Authenticator');\n\n    this.setState({loading: true});\n\n    try {\n      await this.api.requestPromise(`${ENDPOINT}${authenticator.authId}/${deviceId}`, {\n        method: 'DELETE',\n      });\n      this.props.router.push('/settings/account/security');\n      addSuccessMessage(t('%s has been removed', deviceName));\n    } catch {\n      // Error deleting authenticator\n      this.setState({loading: false});\n      addErrorMessage(t('Error removing %s', deviceName));\n    }\n  };\n\n  handleRename = async (device: AuthenticatorDevice, deviceName: string) => {\n    const {authenticator} = this.state;\n\n    if (!authenticator?.authId) {\n      return;\n    }\n    // if the device is defined, it means that U2f is being renamed\n    // reason for adding a trailing slash is a result of the endpoint on line 109 needing it but it can't be set there as if deviceId is None, the route will end with '//'\n    const deviceId = device ? `${device.key_handle}/` : '';\n\n    this.setState({loading: true});\n    const data = {\n      name: deviceName,\n    };\n\n    try {\n      await this.api.requestPromise(`${ENDPOINT}${authenticator.authId}/${deviceId}`, {\n        method: 'PUT',\n        data,\n      });\n      this.props.router.push(`/settings/account/security/mfa/${authenticator.authId}`);\n      addSuccessMessage(t('Device was renamed'));\n    } catch {\n      this.setState({loading: false});\n      addErrorMessage(t('Error renaming the device'));\n    }\n  };\n\n  renderBody() {\n    const {authenticator} = this.state;\n\n    if (!authenticator) {\n      return null;\n    }\n\n    const {deleteDisabled, onRegenerateBackupCodes} = this.props;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={\n            <Fragment>\n              <span>{authenticator.name}</span>\n              <AuthenticatorStatus\n                data-test-id={`auth-status-${\n                  authenticator.isEnrolled ? 'enabled' : 'disabled'\n                }`}\n                enabled={authenticator.isEnrolled}\n              />\n            </Fragment>\n          }\n          action={\n            <AuthenticatorActions>\n              {authenticator.isEnrolled && authenticator.allowRotationInPlace && (\n                <Button to={`/settings/account/security/mfa/${authenticator.id}/enroll/`}>\n                  {t('Rotate Secret Key')}\n                </Button>\n              )}\n              {authenticator.isEnrolled && authenticator.removeButton && (\n                <Tooltip\n                  title={t(\n                    \"Two-factor authentication is required for at least one organization you're a member of.\"\n                  )}\n                  disabled={!deleteDisabled}\n                >\n                  <RemoveConfirm onConfirm={this.handleRemove} disabled={deleteDisabled}>\n                    <Button priority=\"danger\">{authenticator.removeButton}</Button>\n                  </RemoveConfirm>\n                </Tooltip>\n              )}\n            </AuthenticatorActions>\n          }\n        />\n\n        <TextBlock>{authenticator.description}</TextBlock>\n\n        <AuthenticatorDates>\n          <AuthenticatorDate label={t('Created at')} date={authenticator.createdAt} />\n          <AuthenticatorDate label={t('Last used')} date={authenticator.lastUsedAt} />\n        </AuthenticatorDates>\n\n        <U2fEnrolledDetails\n          isEnrolled={authenticator.isEnrolled}\n          id={authenticator.id}\n          devices={authenticator.devices}\n          onRemoveU2fDevice={this.handleRemove}\n          onRenameU2fDevice={this.handleRename}\n        />\n\n        {authenticator.isEnrolled && authenticator.phone && (\n          <PhoneWrapper>\n            {t('Confirmation codes are sent to the following phone number')}:\n            <Phone>{authenticator.phone}</Phone>\n          </PhoneWrapper>\n        )}\n\n        <RecoveryCodes\n          onRegenerateBackupCodes={onRegenerateBackupCodes}\n          isEnrolled={authenticator.isEnrolled}\n          codes={authenticator.codes}\n        />\n      </Fragment>\n    );\n  }\n}\n\nexport default AccountSecurityDetails;\n\nconst AuthenticatorStatus = styled(CircleIndicator)`\n  margin-left: ${space(1)};\n`;\n\nconst AuthenticatorActions = styled('div')`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n\n  > * {\n    margin-left: ${space(1)};\n  }\n`;\n\nconst AuthenticatorDates = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  grid-template-columns: max-content auto;\n`;\n\nconst DateLabel = styled('span')`\n  font-weight: bold;\n`;\n\nconst PhoneWrapper = styled('div')`\n  margin-top: ${space(4)};\n`;\n\nconst Phone = styled('span')`\n  font-weight: bold;\n  margin-left: ${space(1)};\n`;\n","import styled from '@emotion/styled';\n\nconst ConfirmHeader = styled('div')`\n  font-size: 1.2em;\n  margin-bottom: 10px;\n`;\n\nexport default ConfirmHeader;\n","import {Fragment} from 'react';\n\nimport Confirm from 'sentry/components/confirm';\nimport {t} from 'sentry/locale';\nimport ConfirmHeader from 'sentry/views/settings/account/accountSecurity/components/confirmHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = React.ComponentProps<typeof Confirm>;\n\nconst message = (\n  <Fragment>\n    <ConfirmHeader>{t('Do you want to remove this method?')}</ConfirmHeader>\n    <TextBlock>\n      {t(\n        'Removing the last authentication method will disable two-factor authentication completely.'\n      )}\n    </TextBlock>\n  </Fragment>\n);\n\nfunction RemoveConfirm(props: Props) {\n  return <Confirm {...props} message={message} />;\n}\n\nexport default RemoveConfirm;\n"],"names":["AsyncView","AsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","RecoveryCodes","_ref","className","isEnrolled","codes","onRegenerateBackupCodes","formattedCodes","join","_jsxs","CodeContainer","PanelHeader","hasButtons","t","Actions","CopyToClipboardButton","text","size","Button","onClick","printCodes","iframe","window","frames","document","write","print","close","IconPrint","download","href","IconDownload","Confirm","onConfirm","message","priority","PanelBody","PanelAlert","type","length","map","code","Code","EmptyMessage","name","style","display","_styled","Panel","target","space","PanelItem","p","theme","familyMono","U2fEnrolledDetails","props","devices","id","onRemoveU2fDevice","onRenameU2fDevice","hasDevices","isLastDevice","device","i","Device","AddAnotherPanelItem","to","deviceName","setDeviceName","useState","isEditing","setEditting","DevicePanelItem","DeviceInformation","DeviceNameInput","value","onChange","e","FadedDateTime","date","timestamp","IconClose","Name","disabled","Fragment","ConfirmHeader","TextBlock","Tooltip","IconDelete","Input","styles","DateTime","fontSizeRelativeSmall","ENDPOINT","AuthenticatorDate","label","DateLabel","AccountSecurityDetails","constructor","arguments","_defineProperty","async","authenticator","state","authId","deviceId","key_handle","setState","loading","api","requestPromise","method","router","push","addSuccessMessage","addErrorMessage","data","getEndpoints","params","renderBody","deleteDisabled","SettingsPageHeader","AuthenticatorStatus","enabled","action","AuthenticatorActions","allowRotationInPlace","removeButton","RemoveConfirm","handleRemove","description","AuthenticatorDates","createdAt","lastUsedAt","handleRename","phone","PhoneWrapper","Phone","CircleIndicator"],"sourceRoot":""}