{"version":3,"file":"chunks/app_views_issueDetails_grouping_grouping_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/utils/useCleanQueryParamsOnRouteLeave.tsx","webpack:///./app/views/issueDetails/grouping/errorMessage.tsx","webpack:///./app/views/issueDetails/grouping/newIssue.tsx","webpack:///./app/views/issueDetails/grouping/grouping.tsx"],"sourcesContent":["import {useCallback, useEffect} from 'react';\nimport {browserHistory} from 'react-router';\nimport type {Location} from 'history';\n\nimport {useLocation} from 'sentry/utils/useLocation';\n\ntype Opts = {\n  fieldsToClean: string[];\n};\n\nexport function handleRouteLeave<Q extends object>({\n  fieldsToClean,\n  newLocation,\n  oldPathname,\n}: {\n  fieldsToClean: string[];\n  newLocation: Location<Q>;\n  oldPathname: string;\n}) {\n  const hasSomeValues = fieldsToClean.some(\n    field => newLocation.query[field] !== undefined\n  );\n\n  if (newLocation.pathname === oldPathname || !hasSomeValues) {\n    return;\n  }\n\n  // Removes fields from the URL on route leave so that the parameters will\n  // not interfere with other pages\n  const query = fieldsToClean.reduce(\n    (newQuery, field) => {\n      newQuery[field] = undefined;\n      return newQuery;\n    },\n    {...newLocation.query}\n  );\n\n  browserHistory.replace({\n    pathname: newLocation.pathname,\n    query,\n  });\n}\n\nfunction useCleanQueryParamsOnRouteLeave({fieldsToClean}: Opts) {\n  const location = useLocation();\n\n  const onRouteLeave = useCallback(\n    newLocation => {\n      handleRouteLeave({\n        fieldsToClean,\n        newLocation,\n        oldPathname: location.pathname,\n      });\n    },\n    [location.pathname, fieldsToClean]\n  );\n\n  useEffect(() => {\n    return browserHistory.listen(onRouteLeave);\n  }, [onRouteLeave]);\n}\n\nexport default useCleanQueryParamsOnRouteLeave;\n","import {Fragment} from 'react';\n\nimport {Alert} from 'sentry/components/alert';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport FeatureBadge from 'sentry/components/featureBadge';\nimport LoadingError from 'sentry/components/loadingError';\nimport {Panel} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {Group, Organization, Project} from 'sentry/types';\n\ntype ErrorCode =\n  | 'issue_not_hierarchical'\n  | 'project_not_hierarchical'\n  | 'no_events'\n  | 'merged_issues'\n  | 'missing_feature';\n\ntype Error = {\n  status: number;\n  responseJSON?: {\n    detail: {\n      code: ErrorCode;\n      extra: Record<string, any>;\n      message: string;\n    };\n  };\n};\n\ntype Props = {\n  error: Error | string;\n  groupId: Group['id'];\n  hasProjectWriteAccess: boolean;\n  onRetry: () => void;\n  orgSlug: Organization['slug'];\n  projSlug: Project['slug'];\n  className?: string;\n};\n\nfunction ErrorMessage({\n  error,\n  groupId,\n  onRetry,\n  orgSlug,\n  projSlug,\n  hasProjectWriteAccess,\n  className,\n}: Props) {\n  function getErrorDetails(errorCode: ErrorCode) {\n    switch (errorCode) {\n      case 'merged_issues':\n        return {\n          title: t('Grouping breakdown is not available in this issue'),\n          subTitle: t(\n            'This issue needs to be fully unmerged before grouping breakdown is available'\n          ),\n          action: (\n            <Button\n              priority=\"primary\"\n              to={`/organizations/${orgSlug}/issues/${groupId}/merged/?${location.search}`}\n            >\n              {t('Unmerge issue')}\n            </Button>\n          ),\n        };\n      case 'missing_feature':\n        return {\n          title: t(\n            'This project does not have the grouping breakdown available. Is your organization still an early adopter?'\n          ),\n        };\n\n      case 'no_events':\n        return {\n          title: t('This issue has no events'),\n        };\n      case 'issue_not_hierarchical':\n        return {\n          title: t('Grouping breakdown is not available in this issue'),\n          subTitle: t(\n            'Only new issues with the latest grouping strategy have this feature available'\n          ),\n        };\n      case 'project_not_hierarchical':\n        return {\n          title: (\n            <Fragment>\n              {t('Update your Grouping Config')}\n              <FeatureBadge type=\"beta\" />\n            </Fragment>\n          ),\n          subTitle: (\n            <Fragment>\n              <p>\n                {t(\n                  'Enable advanced grouping insights and functionality by updating this project to the latest Grouping Config:'\n                )}\n              </p>\n\n              <ul>\n                <li>\n                  {tct(\n                    '[strong:Breakdowns:] Explore events in this issue by call hierarchy.',\n                    {strong: <strong />}\n                  )}\n                </li>\n                <li>\n                  {tct(\n                    '[strong:Stack trace annotations:] See important frames Sentry uses to group issues directly in the stack trace.',\n                    {strong: <strong />}\n                  )}\n                </li>\n              </ul>\n            </Fragment>\n          ),\n          leftAligned: true,\n          action: (\n            <ButtonBar gap={1}>\n              <Button\n                priority=\"primary\"\n                to={`/settings/${orgSlug}/projects/${projSlug}/issue-grouping/#upgrade-grouping`}\n                disabled={!hasProjectWriteAccess}\n                title={\n                  !hasProjectWriteAccess\n                    ? t('You do not have permission to update this project')\n                    : undefined\n                }\n              >\n                {t('Upgrade Grouping Strategy')}\n              </Button>\n              <Button href=\"https://docs.sentry.io/product/data-management-settings/event-grouping/grouping-breakdown/\">\n                {t('Read the docs')}\n              </Button>\n            </ButtonBar>\n          ),\n        };\n      default:\n        return {};\n    }\n  }\n\n  if (typeof error === 'string') {\n    return (\n      <Alert type=\"warning\" className={className}>\n        {error}\n      </Alert>\n    );\n  }\n\n  if (error.status === 403 && error.responseJSON?.detail) {\n    const {code, message} = error.responseJSON.detail;\n    const {action, title, subTitle, leftAligned} = getErrorDetails(code);\n\n    return (\n      <Panel className={className}>\n        <EmptyMessage\n          size=\"large\"\n          title={title ?? message}\n          description={subTitle}\n          action={action}\n          leftAligned={leftAligned}\n        />\n      </Panel>\n    );\n  }\n\n  return (\n    <LoadingError\n      message={t('Unable to load grouping levels, please try again later')}\n      onRetry={onRetry}\n      className={className}\n    />\n  );\n}\n\nexport default ErrorMessage;\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport EventOrGroupHeader from 'sentry/components/eventOrGroupHeader';\nimport TimeSince from 'sentry/components/timeSince';\nimport {IconClock} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {Event} from 'sentry/types/event';\n\ntype Props = {\n  eventCount: number;\n  organization: Organization;\n  sampleEvent: Event;\n};\n\nfunction NewIssue({sampleEvent, eventCount, organization}: Props) {\n  return (\n    <Fragment>\n      <EventDetails>\n        <EventOrGroupHeader\n          data={sampleEvent}\n          organization={organization}\n          grouping\n          hideIcons\n          hideLevel\n          source=\"new-issue\"\n        />\n        <ExtraInfo>\n          <TimeWrapper>\n            <StyledIconClock legacySize=\"11px\" />\n            <TimeSince\n              date={\n                sampleEvent.dateCreated\n                  ? sampleEvent.dateCreated\n                  : sampleEvent.dateReceived\n              }\n              suffix={t('old')}\n            />\n          </TimeWrapper>\n        </ExtraInfo>\n      </EventDetails>\n      <EventCount>{eventCount}</EventCount>\n    </Fragment>\n  );\n}\n\nexport default NewIssue;\n\nconst EventDetails = styled('div')`\n  overflow: hidden;\n  line-height: 1.1;\n`;\n\nconst ExtraInfo = styled('div')`\n  display: grid;\n  grid-auto-flow: column;\n  gap: ${space(2)};\n  justify-content: flex-start;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: max-content 1fr;\n  align-items: center;\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nconst EventCount = styled('div')`\n  align-items: center;\n  font-variant-numeric: tabular-nums;\n  line-height: 1.1;\n`;\n\nconst StyledIconClock = styled(IconClock)`\n  color: ${p => p.theme.subText};\n`;\n","import {Fragment, useEffect, useState} from 'react';\nimport {InjectedRouter} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport debounce from 'lodash/debounce';\n\nimport {Client} from 'sentry/api';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport {FeatureFeedback} from 'sentry/components/featureFeedback';\nimport RangeSlider from 'sentry/components/forms/controls/rangeSlider';\nimport Slider from 'sentry/components/forms/controls/rangeSlider/slider';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport {DEFAULT_DEBOUNCE_DURATION} from 'sentry/constants';\nimport {t, tct, tn} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {BaseGroup, Group, Organization, Project} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport parseLinkHeader from 'sentry/utils/parseLinkHeader';\nimport toArray from 'sentry/utils/toArray';\nimport useCleanQueryParamsOnRouteLeave from 'sentry/utils/useCleanQueryParamsOnRouteLeave';\nimport withApi from 'sentry/utils/withApi';\n\nimport ErrorMessage from './errorMessage';\nimport NewIssue from './newIssue';\n\ntype Error = React.ComponentProps<typeof ErrorMessage>['error'];\n\ntype Props = {\n  api: Client;\n  groupId: Group['id'];\n  location: Location<{cursor?: string; level?: number}>;\n  organization: Organization;\n  projSlug: Project['slug'];\n  router: InjectedRouter;\n};\n\ntype GroupingLevelDetails = Partial<Pick<BaseGroup, 'title' | 'metadata'>> & {\n  eventCount: number;\n  hash: string;\n  latestEvent: BaseGroup['latestEvent'];\n};\n\ntype GroupingLevel = {\n  id: number;\n  isCurrent: boolean;\n};\n\nexport const groupingFeedbackTypes = [\n  t('Too eager grouping'),\n  t('Too specific grouping'),\n  t('Other grouping issue'),\n];\n\nconst GROUPING_BREAKDOWN__DOC_LINK =\n  'https://docs.sentry.io/product/data-management-settings/event-grouping/grouping-breakdown/';\n\nfunction Grouping({api, groupId, location, organization, router, projSlug}: Props) {\n  const {cursor, level} = location.query;\n  const [isLoading, setIsLoading] = useState(false);\n  const [isGroupingLevelDetailsLoading, setIsGroupingLevelDetailsLoading] =\n    useState(false);\n  const [error, setError] = useState<undefined | Error | string>(undefined);\n  const [groupingLevels, setGroupingLevels] = useState<GroupingLevel[]>([]);\n  const [activeGroupingLevel, setActiveGroupingLevel] = useState<number | undefined>(\n    undefined\n  );\n  const [activeGroupingLevelDetails, setActiveGroupingLevelDetails] = useState<\n    GroupingLevelDetails[]\n  >([]);\n\n  const [pagination, setPagination] = useState('');\n\n  useCleanQueryParamsOnRouteLeave({fieldsToClean: ['cursor', 'level']});\n  useEffect(() => {\n    fetchGroupingLevels();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    setSecondGrouping();\n  }, [groupingLevels]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    updateUrlWithNewLevel();\n  }, [activeGroupingLevel]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(() => {\n    fetchGroupingLevelDetails();\n  }, [activeGroupingLevel, cursor]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  const handleSetActiveGroupingLevel = debounce((groupingLevelId: number | '') => {\n    setActiveGroupingLevel(Number(groupingLevelId));\n  }, DEFAULT_DEBOUNCE_DURATION);\n\n  async function fetchGroupingLevels() {\n    setIsLoading(true);\n    setError(undefined);\n    try {\n      const response = await api.requestPromise(`/issues/${groupId}/grouping/levels/`);\n      setIsLoading(false);\n      setGroupingLevels(response.levels);\n    } catch (err) {\n      setIsLoading(false);\n      setError(err);\n    }\n  }\n\n  async function fetchGroupingLevelDetails() {\n    if (!groupingLevels.length || !defined(activeGroupingLevel)) {\n      return;\n    }\n\n    setIsGroupingLevelDetailsLoading(true);\n    setError(undefined);\n\n    try {\n      const [data, , resp] = await api.requestPromise(\n        `/issues/${groupId}/grouping/levels/${activeGroupingLevel}/new-issues/`,\n        {\n          method: 'GET',\n          includeAllArgs: true,\n          query: {\n            ...location.query,\n            per_page: 10,\n          },\n        }\n      );\n\n      const pageLinks = resp?.getResponseHeader?.('Link');\n      setPagination(pageLinks ?? '');\n      setActiveGroupingLevelDetails(toArray(data));\n      setIsGroupingLevelDetailsLoading(false);\n    } catch (err) {\n      setIsGroupingLevelDetailsLoading(false);\n      setError(err);\n    }\n  }\n\n  function updateUrlWithNewLevel() {\n    if (!defined(activeGroupingLevel) || level === activeGroupingLevel) {\n      return;\n    }\n\n    router.replace({\n      pathname: location.pathname,\n      query: {...location.query, cursor: undefined, level: activeGroupingLevel},\n    });\n  }\n\n  function setSecondGrouping() {\n    if (!groupingLevels.length) {\n      return;\n    }\n\n    if (defined(level)) {\n      if (!defined(groupingLevels[level])) {\n        setError(t('The level you were looking for was not found.'));\n        return;\n      }\n\n      if (level === activeGroupingLevel) {\n        return;\n      }\n\n      setActiveGroupingLevel(level);\n      return;\n    }\n\n    if (groupingLevels.length > 1) {\n      setActiveGroupingLevel(groupingLevels[1].id);\n      return;\n    }\n\n    setActiveGroupingLevel(groupingLevels[0].id);\n  }\n\n  if (isLoading) {\n    return <LoadingIndicator />;\n  }\n\n  if (error) {\n    return (\n      <Fragment>\n        <Layout.Body>\n          <Layout.Main fullWidth>\n            <ErrorWrapper>\n              <ButtonBar gap={1}>\n                <Button href={GROUPING_BREAKDOWN__DOC_LINK} external>\n                  {t('Read Docs')}\n                </Button>\n                <FeatureFeedback\n                  featureName=\"grouping\"\n                  feedbackTypes={groupingFeedbackTypes}\n                />\n              </ButtonBar>\n              <StyledErrorMessage\n                onRetry={fetchGroupingLevels}\n                groupId={groupId}\n                error={error}\n                projSlug={projSlug}\n                orgSlug={organization.slug}\n                hasProjectWriteAccess={organization.access.includes('project:write')}\n              />\n            </ErrorWrapper>\n          </Layout.Main>\n        </Layout.Body>\n      </Fragment>\n    );\n  }\n\n  if (!activeGroupingLevelDetails.length) {\n    return <LoadingIndicator />;\n  }\n\n  const links = parseLinkHeader(pagination);\n  const hasMore = links.previous?.results || links.next?.results;\n  const paginationCurrentQuantity = activeGroupingLevelDetails.length;\n\n  return (\n    <Layout.Body>\n      <Layout.Main fullWidth>\n        <Wrapper>\n          <Header>\n            {t(\n              'This issue is an aggregate of multiple events that sentry determined originate from the same root-cause. Use this page to explore more detailed groupings that exist within this issue.'\n            )}\n          </Header>\n          <Body>\n            <Actions>\n              <SliderWrapper>\n                {t('Fewer issues')}\n                <StyledRangeSlider\n                  name=\"grouping-level\"\n                  allowedValues={groupingLevels.map(groupingLevel =>\n                    Number(groupingLevel.id)\n                  )}\n                  value={activeGroupingLevel ?? 0}\n                  onChange={handleSetActiveGroupingLevel}\n                  showLabel={false}\n                />\n                {t('More issues')}\n              </SliderWrapper>\n              <StyledButtonBar gap={1}>\n                <Button href={GROUPING_BREAKDOWN__DOC_LINK} external>\n                  {t('Read Docs')}\n                </Button>\n                <FeatureFeedback\n                  featureName=\"grouping\"\n                  feedbackTypes={groupingFeedbackTypes}\n                />\n              </StyledButtonBar>\n            </Actions>\n            <Content isReloading={isGroupingLevelDetailsLoading}>\n              <StyledPanelTable headers={['', t('Events')]}>\n                {activeGroupingLevelDetails.map(\n                  ({hash, title, metadata, latestEvent, eventCount}) => {\n                    // XXX(markus): Ugly hack to make NewIssue show the right things.\n                    return (\n                      <NewIssue\n                        key={hash}\n                        sampleEvent={{\n                          ...latestEvent,\n                          metadata: {\n                            ...(metadata || latestEvent.metadata),\n                            current_level: activeGroupingLevel,\n                          },\n                          title: title || latestEvent.title,\n                        }}\n                        eventCount={eventCount}\n                        organization={organization}\n                      />\n                    );\n                  }\n                )}\n              </StyledPanelTable>\n              <StyledPagination\n                pageLinks={pagination}\n                disabled={isGroupingLevelDetailsLoading}\n                caption={tct('Showing [current] of [total] [result]', {\n                  result: hasMore\n                    ? t('results')\n                    : tn('result', 'results', paginationCurrentQuantity),\n                  current: paginationCurrentQuantity,\n                  total: hasMore\n                    ? `${paginationCurrentQuantity}+`\n                    : paginationCurrentQuantity,\n                })}\n              />\n            </Content>\n          </Body>\n        </Wrapper>\n      </Layout.Main>\n    </Layout.Body>\n  );\n}\n\nexport default withApi(Grouping);\n\nconst Wrapper = styled('div')`\n  flex: 1;\n  display: grid;\n  align-content: flex-start;\n  margin: -${space(3)} -${space(4)};\n  padding: ${space(3)} ${space(4)};\n`;\n\nconst Header = styled('p')`\n  && {\n    margin-bottom: ${space(2)};\n  }\n`;\n\nconst Body = styled('div')`\n  display: grid;\n  gap: ${space(3)};\n`;\n\nconst Actions = styled('div')`\n  display: grid;\n  align-items: center;\n  gap: ${space(3)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: 1fr max-content;\n    gap: ${space(2)};\n  }\n`;\n\nconst StyledButtonBar = styled(ButtonBar)`\n  justify-content: flex-start;\n`;\n\nconst StyledErrorMessage = styled(ErrorMessage)`\n  width: 100%;\n`;\n\nconst ErrorWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-end;\n  gap: ${space(1)};\n`;\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: 1fr minmax(60px, auto);\n  > * {\n    padding: ${space(1.5)} ${space(2)};\n    :nth-child(-n + 2) {\n      padding: ${space(2)};\n    }\n    :nth-child(2n) {\n      display: flex;\n      text-align: right;\n      justify-content: flex-end;\n    }\n  }\n\n  @media (min-width: ${p => p.theme.breakpoints.xlarge}) {\n    grid-template-columns: 1fr minmax(80px, auto);\n  }\n`;\n\nconst StyledPagination = styled(Pagination)`\n  margin-top: 0;\n`;\n\nconst Content = styled('div')<{isReloading: boolean}>`\n  ${p =>\n    p.isReloading &&\n    `\n      ${StyledPanelTable}, ${StyledPagination} {\n        opacity: 0.5;\n        pointer-events: none;\n      }\n    `}\n`;\n\nconst SliderWrapper = styled('div')`\n  display: grid;\n  gap: ${space(1.5)};\n  grid-template-columns: max-content max-content;\n  justify-content: space-between;\n  align-items: flex-start;\n  position: relative;\n  font-size: ${p => p.theme.fontSizeMedium};\n  color: ${p => p.theme.subText};\n  padding-bottom: ${space(2)};\n\n  @media (min-width: 700px) {\n    grid-template-columns: max-content minmax(270px, auto) max-content;\n    align-items: center;\n    justify-content: flex-start;\n    padding-bottom: 0;\n  }\n`;\n\nconst StyledRangeSlider = styled(RangeSlider)`\n  ${Slider} {\n    background: transparent;\n    margin-top: 0;\n    margin-bottom: 0;\n\n    ::-ms-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-moz-range-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n\n    ::-webkit-slider-thumb {\n      box-shadow: 0 0 0 3px ${p => p.theme.backgroundSecondary};\n    }\n  }\n\n  position: absolute;\n  bottom: 0;\n  left: ${space(1.5)};\n  right: ${space(1.5)};\n\n  @media (min-width: 700px) {\n    position: static;\n    left: auto;\n    right: auto;\n  }\n`;\n"],"names":["_ref2","fieldsToClean","location","useLocation","onRouteLeave","useCallback","newLocation","_ref","oldPathname","hasSomeValues","some","field","undefined","query","pathname","reduce","newQuery","browserHistory","replace","handleRouteLeave","useEffect","listen","ErrorMessage","error","groupId","onRetry","orgSlug","projSlug","hasProjectWriteAccess","className","_jsx","Alert","type","children","status","responseJSON","detail","code","message","action","title","subTitle","leftAligned","errorCode","t","Button","priority","to","search","_jsxs","Fragment","FeatureBadge","tct","strong","ButtonBar","gap","disabled","href","getErrorDetails","Panel","EmptyMessage","size","description","LoadingError","displayName","NewIssue","sampleEvent","eventCount","organization","EventDetails","EventOrGroupHeader","data","grouping","hideIcons","hideLevel","source","ExtraInfo","TimeWrapper","StyledIconClock","legacySize","TimeSince","date","dateCreated","dateReceived","suffix","EventCount","_styled","target","name","styles","space","p","theme","fontSizeSmall","IconClock","subText","groupingFeedbackTypes","GROUPING_BREAKDOWN__DOC_LINK","Grouping","api","router","cursor","level","isLoading","setIsLoading","useState","isGroupingLevelDetailsLoading","setIsGroupingLevelDetailsLoading","setError","groupingLevels","setGroupingLevels","activeGroupingLevel","setActiveGroupingLevel","activeGroupingLevelDetails","setActiveGroupingLevelDetails","pagination","setPagination","useCleanQueryParamsOnRouteLeave","fetchGroupingLevels","length","defined","id","setSecondGrouping","async","resp","requestPromise","method","includeAllArgs","per_page","pageLinks","getResponseHeader","toArray","err","fetchGroupingLevelDetails","handleSetActiveGroupingLevel","debounce","groupingLevelId","Number","DEFAULT_DEBOUNCE_DURATION","response","levels","LoadingIndicator","Layout","fullWidth","ErrorWrapper","external","FeatureFeedback","featureName","feedbackTypes","StyledErrorMessage","slug","access","includes","links","parseLinkHeader","hasMore","previous","results","next","paginationCurrentQuantity","Wrapper","Header","Body","Actions","SliderWrapper","StyledRangeSlider","allowedValues","map","groupingLevel","value","onChange","showLabel","StyledButtonBar","Content","isReloading","StyledPanelTable","headers","hash","metadata","latestEvent","current_level","StyledPagination","caption","result","tn","current","total","withApi","breakpoints","small","PanelTable","xlarge","Pagination","fontSizeMedium","RangeSlider","Slider","backgroundSecondary"],"sourceRoot":""}