{"version":3,"file":"chunks/app_views_performance_transactionSummary_transactionAnomalies_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/charts/components/markArea.tsx","webpack:///./app/components/charts/lineChart.tsx","webpack:///./app/components/events/searchBar.tsx","webpack:///./app/utils/performance/anomalies/anomaliesQuery.tsx","webpack:///./app/utils/withTags.tsx","webpack:///./app/views/performance/transactionSummary/transactionAnomalies/anomaliesTable.tsx","webpack:///./app/views/performance/transactionSummary/transactionAnomalies/anomalyChart.tsx","webpack:///./app/views/performance/transactionSummary/transactionAnomalies/content.tsx","webpack:///./app/views/performance/transactionSummary/transactionAnomalies/index.tsx"],"sourcesContent":["import 'echarts/lib/component/markArea';\n\nimport type {MarkAreaComponentOption} from 'echarts';\n\n/**\n * eCharts markArea\n *\n * See https://echarts.apache.org/en/option.html#series-line.markArea\n */\nexport default function MarkArea(\n  props: MarkAreaComponentOption\n): MarkAreaComponentOption {\n  return {\n    ...props,\n  };\n}\n","import type {LineSeriesOption} from 'echarts';\n\nimport {Series} from 'sentry/types/echarts';\n\nimport LineSeries from './series/lineSeries';\nimport BaseChart from './baseChart';\n\ntype ChartProps = Omit<React.ComponentProps<typeof BaseChart>, 'css'>;\n\nexport type LineChartSeries = Series &\n  Omit<LineSeriesOption, 'data' | 'name'> & {\n    dataArray?: LineSeriesOption['data'];\n  };\n\nexport interface LineChartProps extends Omit<ChartProps, 'series'> {\n  series: LineChartSeries[];\n  additionalSeries?: LineSeriesOption[];\n  seriesOptions?: LineSeriesOption;\n}\n\nexport function LineChart({series, seriesOptions, ...props}: LineChartProps) {\n  return (\n    <BaseChart\n      {...props}\n      series={series.map(({seriesName, data, dataArray, ...options}) =>\n        LineSeries({\n          ...seriesOptions,\n          ...options,\n          name: seriesName,\n          data: dataArray || data?.map(({value, name}) => [name, value]),\n          animation: false,\n          animationThreshold: 1,\n          animationDuration: 0,\n        })\n      )}\n    />\n  );\n}\n","import {useEffect, useMemo} from 'react';\nimport assign from 'lodash/assign';\nimport flatten from 'lodash/flatten';\nimport memoize from 'lodash/memoize';\nimport omit from 'lodash/omit';\n\nimport {fetchTagValues} from 'sentry/actionCreators/tags';\nimport SmartSearchBar from 'sentry/components/smartSearchBar';\nimport {NEGATION_OPERATOR, SEARCH_WILDCARD} from 'sentry/constants';\nimport {Organization, SavedSearchType, TagCollection} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport {CustomMeasurementCollection} from 'sentry/utils/customMeasurements/customMeasurements';\nimport {\n  Field,\n  FIELD_TAGS,\n  isAggregateField,\n  isEquation,\n  isMeasurement,\n  SEMVER_TAGS,\n  SPAN_OP_BREAKDOWN_FIELDS,\n  TRACING_FIELDS,\n} from 'sentry/utils/discover/fields';\nimport {\n  DEVICE_CLASS_TAG_VALUES,\n  FieldKey,\n  FieldKind,\n  isDeviceClass,\n} from 'sentry/utils/fields';\nimport Measurements from 'sentry/utils/measurements/measurements';\nimport useApi from 'sentry/utils/useApi';\nimport withTags from 'sentry/utils/withTags';\nimport {isCustomMeasurement} from 'sentry/views/dashboards/utils';\n\nconst SEARCH_SPECIAL_CHARS_REGEXP = new RegExp(\n  `^${NEGATION_OPERATOR}|\\\\${SEARCH_WILDCARD}`,\n  'g'\n);\n\nconst STATIC_FIELD_TAGS_SET = new Set(Object.keys(FIELD_TAGS));\nconst getFunctionTags = (fields: Readonly<Field[]> | undefined) => {\n  if (!fields?.length) {\n    return [];\n  }\n  return fields.reduce((acc, item) => {\n    if (\n      !STATIC_FIELD_TAGS_SET.has(item.field) &&\n      !isEquation(item.field) &&\n      !isCustomMeasurement(item.field)\n    ) {\n      acc[item.field] = {key: item.field, name: item.field, kind: FieldKind.FUNCTION};\n    }\n\n    return acc;\n  }, {});\n};\n\nconst getMeasurementTags = (\n  measurements: Parameters<\n    React.ComponentProps<typeof Measurements>['children']\n  >[0]['measurements'],\n  customMeasurements:\n    | Parameters<React.ComponentProps<typeof Measurements>['children']>[0]['measurements']\n    | undefined\n) => {\n  const measurementsWithKind = Object.keys(measurements).reduce((tags, key) => {\n    tags[key] = {\n      ...measurements[key],\n      kind: FieldKind.MEASUREMENT,\n    };\n    return tags;\n  }, {});\n\n  if (!customMeasurements) {\n    return measurementsWithKind;\n  }\n\n  return Object.keys(customMeasurements).reduce((tags, key) => {\n    tags[key] = {\n      ...customMeasurements[key],\n      kind: FieldKind.MEASUREMENT,\n    };\n    return tags;\n  }, measurementsWithKind);\n};\n\nconst STATIC_FIELD_TAGS = Object.keys(FIELD_TAGS).reduce((tags, key) => {\n  tags[key] = {\n    ...FIELD_TAGS[key],\n    kind: FieldKind.FIELD,\n  };\n  return tags;\n}, {});\n\nconst STATIC_FIELD_TAGS_WITHOUT_TRACING = omit(STATIC_FIELD_TAGS, TRACING_FIELDS);\n\nconst STATIC_SPAN_TAGS = SPAN_OP_BREAKDOWN_FIELDS.reduce((tags, key) => {\n  tags[key] = {name: key, kind: FieldKind.METRICS};\n  return tags;\n}, {});\n\nconst STATIC_SEMVER_TAGS = Object.keys(SEMVER_TAGS).reduce((tags, key) => {\n  tags[key] = {\n    ...SEMVER_TAGS[key],\n    kind: FieldKind.FIELD,\n  };\n  return tags;\n}, {});\n\nexport type SearchBarProps = Omit<React.ComponentProps<typeof SmartSearchBar>, 'tags'> & {\n  organization: Organization;\n  tags: TagCollection;\n  customMeasurements?: CustomMeasurementCollection;\n  fields?: Readonly<Field[]>;\n  includeSessionTagsValues?: boolean;\n  /**\n   * Used to define the max height of the menu in px.\n   */\n  maxMenuHeight?: number;\n  maxSearchItems?: React.ComponentProps<typeof SmartSearchBar>['maxSearchItems'];\n  omitTags?: string[];\n  projectIds?: number[] | Readonly<number[]>;\n};\n\nfunction SearchBar(props: SearchBarProps) {\n  const {\n    maxSearchItems,\n    organization,\n    tags,\n    omitTags,\n    fields,\n    projectIds,\n    includeSessionTagsValues,\n    maxMenuHeight,\n    customMeasurements,\n  } = props;\n\n  const api = useApi();\n\n  const functionTags = useMemo(() => getFunctionTags(fields), [fields]);\n  const tagsWithKind = useMemo(() => {\n    return Object.keys(tags).reduce((acc, key) => {\n      acc[key] = {\n        ...tags[key],\n        kind: FieldKind.TAG,\n      };\n      return acc;\n    }, {});\n  }, [tags]);\n\n  useEffect(() => {\n    // Clear memoized data on mount to make tests more consistent.\n    getEventFieldValues.cache.clear?.();\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [projectIds]);\n\n  // Returns array of tag values that substring match `query`; invokes `callback`\n  // with data when ready\n  const getEventFieldValues = memoize(\n    (tag, query, endpointParams): Promise<string[]> => {\n      const projectIdStrings = (projectIds as Readonly<number>[])?.map(String);\n\n      if (isAggregateField(tag.key) || isMeasurement(tag.key)) {\n        // We can't really auto suggest values for aggregate fields\n        // or measurements, so we simply don't\n        return Promise.resolve([]);\n      }\n\n      // device.class is stored as \"numbers\" in snuba, but we want to suggest high, medium,\n      // and low search filter values because discover maps device.class to these values.\n      if (isDeviceClass(tag.key)) {\n        return Promise.resolve(DEVICE_CLASS_TAG_VALUES);\n      }\n\n      return fetchTagValues({\n        api,\n        orgSlug: organization.slug,\n        tagKey: tag.key,\n        search: query,\n        projectIds: projectIdStrings,\n        endpointParams,\n        // allows searching for tags on transactions as well\n        includeTransactions: true,\n        // allows searching for tags on sessions as well\n        includeSessions: includeSessionTagsValues,\n      }).then(\n        results =>\n          flatten(results.filter(({name}) => defined(name)).map(({name}) => name)),\n        () => {\n          throw new Error('Unable to fetch event field values');\n        }\n      );\n    },\n    ({key}, query) => `${key}-${query}`\n  );\n\n  const getTagList = (\n    measurements: Parameters<\n      React.ComponentProps<typeof Measurements>['children']\n    >[0]['measurements']\n  ) => {\n    const measurementsWithKind = getMeasurementTags(measurements, customMeasurements);\n    const orgHasPerformanceView = organization.features.includes('performance-view');\n\n    const combinedTags: TagCollection = orgHasPerformanceView\n      ? Object.assign(\n          {},\n          measurementsWithKind,\n          functionTags,\n          STATIC_SPAN_TAGS,\n          STATIC_FIELD_TAGS\n        )\n      : Object.assign({}, STATIC_FIELD_TAGS_WITHOUT_TRACING);\n\n    assign(combinedTags, tagsWithKind, STATIC_FIELD_TAGS, STATIC_SEMVER_TAGS);\n\n    combinedTags.has = {\n      key: FieldKey.HAS,\n      name: 'Has property',\n      values: Object.keys(combinedTags).sort((a, b) => {\n        return a.toLowerCase().localeCompare(b.toLowerCase());\n      }),\n      predefined: true,\n      kind: FieldKind.FIELD,\n    };\n\n    const list =\n      omitTags && omitTags.length > 0 ? omit(combinedTags, omitTags) : combinedTags;\n    return list;\n  };\n\n  return (\n    <Measurements>\n      {({measurements}) => (\n        <SmartSearchBar\n          hasRecentSearches\n          savedSearchType={SavedSearchType.EVENT}\n          onGetTagValues={getEventFieldValues}\n          supportedTags={getTagList(measurements)}\n          prepareQuery={query => {\n            // Prepare query string (e.g. strip special characters like negation operator)\n            return query.replace(SEARCH_SPECIAL_CHARS_REGEXP, '');\n          }}\n          maxSearchItems={maxSearchItems}\n          excludedTags={[FieldKey.ENVIRONMENT, FieldKey.TOTAL_COUNT]}\n          maxMenuHeight={maxMenuHeight ?? 300}\n          customPerformanceMetrics={customMeasurements}\n          {...props}\n        />\n      )}\n    </Measurements>\n  );\n}\n\nexport default withTags(SearchBar);\n","import {EventsStatsData, Organization} from 'sentry/types';\nimport GenericDiscoverQuery, {\n  DiscoverQueryProps,\n  GenericChildrenProps,\n} from 'sentry/utils/discover/genericDiscoverQuery';\nimport {ANOMALY_FLAG} from 'sentry/views/performance/transactionSummary/transactionAnomalies/utils';\n\ntype AnomaliesProps = {};\ntype RequestProps = DiscoverQueryProps & AnomaliesProps;\n\nexport type ChildrenProps = Omit<GenericChildrenProps<AnomaliesProps>, 'tableData'> & {\n  data: AnomalyPayload | null;\n};\n\ntype Props = Omit<RequestProps, 'orgSlug'> & {\n  children: (props: ChildrenProps) => React.ReactNode;\n  organization: Organization;\n};\n\nexport type AnomalyConfidence = 'high' | 'low';\n\n// Should match events stats data in format.\ntype AnomalyStatsData = {\n  data: EventsStatsData;\n  end?: number;\n  start?: number;\n};\n\n// Anomaly info describes what the anomaly service determines is an 'anomaly area'.\nexport type AnomalyInfo = {\n  confidence: AnomalyConfidence;\n  end: number;\n  expected: number;\n  id: string;\n  received: number;\n  start: number;\n};\n\nexport type AnomalyPayload = {\n  anomalies: AnomalyInfo[];\n  y: AnomalyStatsData;\n  yhat_lower: AnomalyStatsData;\n  yhat_upper: AnomalyStatsData;\n};\n\nfunction transformStatsTimes(stats: AnomalyStatsData) {\n  stats.data.forEach(d => (d[0] = d[0] * 1000));\n  return stats;\n}\nfunction transformAnomaliesTimes(anoms: AnomalyInfo[]) {\n  anoms.forEach(a => {\n    a.start = a.start * 1000;\n    a.end = a.end * 1000;\n  });\n  return anoms;\n}\n\nfunction transformPayload(payload: AnomalyPayload): AnomalyPayload {\n  const newPayload = {...payload};\n  if (!payload.y || !payload.yhat_lower || !payload.yhat_upper || !payload.anomalies) {\n    return newPayload;\n  }\n\n  newPayload.y = transformStatsTimes(payload.y);\n  newPayload.yhat_upper = transformStatsTimes(payload.yhat_upper);\n  newPayload.yhat_lower = transformStatsTimes(payload.yhat_lower);\n  newPayload.anomalies = transformAnomaliesTimes(payload.anomalies);\n  return newPayload;\n}\n\nfunction AnomaliesSeriesQuery(props: Props) {\n  if (!props.organization.features.includes(ANOMALY_FLAG)) {\n    return (\n      <div>\n        {props.children({data: null, isLoading: false, error: null, pageLinks: null})}\n      </div>\n    );\n  }\n\n  return (\n    <GenericDiscoverQuery<AnomalyPayload, {}>\n      route=\"transaction-anomaly-detection\"\n      {...props}\n    >\n      {({tableData, ...rest}) => {\n        return props.children({\n          data: tableData && tableData.y ? transformPayload(tableData) : null,\n          ...rest,\n        });\n      }}\n    </GenericDiscoverQuery>\n  );\n}\n\nexport default AnomaliesSeriesQuery;\n","import {Component} from 'react';\n\nimport TagStore from 'sentry/stores/tagStore';\nimport {TagCollection} from 'sentry/types';\nimport getDisplayName from 'sentry/utils/getDisplayName';\n\ntype InjectedTagsProps = {\n  tags: TagCollection;\n};\n\ntype State = {\n  tags: TagCollection;\n};\n\n/**\n * HOC for getting *only* tags from the TagStore.\n */\nfunction withTags<P extends InjectedTagsProps>(WrappedComponent: React.ComponentType<P>) {\n  class WithTags extends Component<Omit<P, keyof InjectedTagsProps>, State> {\n    static displayName = `withTags(${getDisplayName(WrappedComponent)})`;\n\n    state: State = {\n      tags: TagStore.getState(),\n    };\n\n    componentWillUnmount() {\n      this.unsubscribe();\n    }\n\n    unsubscribe = TagStore.listen(\n      (tags: TagCollection) => this.setState({tags}),\n      undefined\n    );\n\n    render() {\n      const {tags, ...props} = this.props as P;\n      return <WrappedComponent {...({tags: tags ?? this.state.tags, ...props} as P)} />;\n    }\n  }\n\n  return WithTags;\n}\n\nexport default withTags;\n","import {ReactNode} from 'react';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\n\nimport Count from 'sentry/components/count';\nimport GridEditable, {\n  COL_WIDTH_UNDEFINED,\n  GridColumnOrder,\n} from 'sentry/components/gridEditable';\nimport SortLink from 'sentry/components/gridEditable/sortLink';\nimport {IconArrow} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {getFieldRenderer} from 'sentry/utils/discover/fieldRenderers';\nimport {ColumnType, fieldAlignment} from 'sentry/utils/discover/fields';\nimport {AnomalyInfo} from 'sentry/utils/performance/anomalies/anomaliesQuery';\n\ntype Props = {\n  isLoading: boolean;\n  location: Location;\n  organization: Organization;\n  anomalies?: AnomalyInfo[];\n};\n\nconst transformRow = (anom: AnomalyInfo): TableDataRowWithExtras => {\n  return {\n    anomaly: `#${anom.id}`,\n    confidence: anom.confidence,\n    timestamp: new Date(anom.start),\n    timeInterval: anom.end - anom.start,\n    expected: anom.expected,\n    received: anom.received,\n  };\n};\n\nexport default function AnomaliesTable(props: Props) {\n  const {location, organization, isLoading, anomalies} = props;\n\n  const data: TableDataRowWithExtras[] = anomalies?.map(transformRow) || [];\n\n  return (\n    <GridEditable\n      isLoading={isLoading}\n      data={data}\n      columnOrder={Object.values(COLUMNS)}\n      columnSortBy={[]}\n      grid={{\n        renderHeadCell,\n        renderBodyCell: renderBodyCellWithMeta(location, organization),\n      }}\n      location={location}\n    />\n  );\n}\n\nfunction renderHeadCell(column: TableColumn, _index: number): ReactNode {\n  const align = fieldAlignment(column.key, COLUMN_TYPE[column.key]);\n  return (\n    <SortLink\n      title={column.name}\n      align={align}\n      direction={undefined}\n      canSort={false}\n      generateSortLink={() => undefined}\n    />\n  );\n}\n\nfunction renderBodyCellWithMeta(location: Location, organization: Organization) {\n  return function (\n    column: TableColumn,\n    dataRow: TableDataRowWithExtras\n  ): React.ReactNode {\n    const fieldRenderer = getFieldRenderer(column.key, COLUMN_TYPE);\n\n    if (column.key === 'confidence') {\n      return (\n        <ConfidenceCell>\n          {dataRow.confidence === 'low' ? (\n            <LowConfidence>{t('Low Confidence')}</LowConfidence>\n          ) : (\n            <HighConfidence>{t('High Confidence')}</HighConfidence>\n          )}\n        </ConfidenceCell>\n      );\n    }\n    if (column.key === 'expected') {\n      return (\n        <NumberCell>\n          <Count value={dataRow.expected} />\n        </NumberCell>\n      );\n    }\n    if (column.key === 'received') {\n      return (\n        <NumberCell>\n          <Count value={dataRow.received} />\n          <IconArrow\n            size=\"sm\"\n            direction={dataRow.received > dataRow.expected ? 'up' : 'down'}\n          />\n        </NumberCell>\n      );\n    }\n\n    return fieldRenderer(dataRow, {location, organization});\n  };\n}\n\nconst NumberCell = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  align-items: center;\n  gap: ${space(0.5)};\n`;\n\nconst LowConfidence = styled('div')`\n  color: ${p => p.theme.yellow400};\n`;\nconst HighConfidence = styled('div')`\n  color: ${p => p.theme.red400};\n`;\n\nconst ConfidenceCell = styled('div')`\n  text-align: left;\n  justify-self: flex-end;\n  flex-grow: 1;\n`;\n\ntype TableColumnKey =\n  | 'anomaly'\n  | 'confidence'\n  | 'timeInterval'\n  | 'timestamp'\n  | 'expected'\n  | 'received';\n\ntype TableColumn = GridColumnOrder<TableColumnKey>;\n\ntype TableDataRow = Record<TableColumnKey, any>;\n\ntype TableDataRowWithExtras = TableDataRow & {};\n\nconst COLUMNS: Record<TableColumnKey, TableColumn> = {\n  anomaly: {\n    key: 'anomaly',\n    name: t('Anomaly'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  confidence: {\n    key: 'confidence',\n    name: t('Confidence'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  timeInterval: {\n    key: 'timeInterval',\n    name: t('Time Interval'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  timestamp: {\n    key: 'timestamp',\n    name: t('Timestamp'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  expected: {\n    key: 'expected',\n    name: t('Expected'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n  received: {\n    key: 'received',\n    name: t('Received'),\n    width: COL_WIDTH_UNDEFINED,\n  },\n};\n\nconst COLUMN_TYPE: Record<TableColumnKey, ColumnType> = {\n  anomaly: 'string',\n  confidence: 'string',\n  timeInterval: 'duration',\n  timestamp: 'date',\n  expected: 'number',\n  received: 'number',\n};\n","import ChartZoom from 'sentry/components/charts/chartZoom';\nimport {LineChart, LineChartProps} from 'sentry/components/charts/lineChart';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {DateString} from 'sentry/types';\nimport {Series} from 'sentry/types/echarts';\nimport {getUtcToLocalDateObject} from 'sentry/utils/dates';\nimport {axisLabelFormatter, tooltipFormatter} from 'sentry/utils/discover/charts';\nimport {aggregateOutputType} from 'sentry/utils/discover/fields';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useRouter from 'sentry/utils/useRouter';\n\ntype Props = {\n  data: Series[];\n  end: DateString;\n  start: DateString;\n  statsPeriod: string | undefined;\n  height?: number;\n};\n\nexport function AnomalyChart(props: Props) {\n  const router = useRouter();\n  const location = useLocation();\n  const {data, statsPeriod, height, start: propsStart, end: propsEnd} = props;\n\n  const start = propsStart ? getUtcToLocalDateObject(propsStart) : null;\n  const end = propsEnd ? getUtcToLocalDateObject(propsEnd) : null;\n  const {utc} = normalizeDateTimeParams(location.query);\n\n  const chartOptions: Omit<LineChartProps, 'series'> = {\n    legend: {\n      right: 10,\n      top: 5,\n      data: [t('High Confidence'), t('Low Confidence')],\n    },\n    seriesOptions: {\n      showSymbol: false,\n    },\n    height,\n    tooltip: {\n      trigger: 'axis',\n      valueFormatter: (value, label) =>\n        tooltipFormatter(value, aggregateOutputType(label)),\n    },\n    xAxis: undefined,\n    yAxis: {\n      axisLabel: {\n        // Coerces the axis to be count based\n        formatter: (value: number) => axisLabelFormatter(value, 'number'),\n      },\n    },\n  };\n\n  return (\n    <ChartZoom\n      router={router}\n      period={statsPeriod}\n      start={start}\n      end={end}\n      utc={utc === 'true'}\n    >\n      {zoomRenderProps => (\n        <LineChart {...zoomRenderProps} series={data} {...chartOptions} />\n      )}\n    </ChartZoom>\n  );\n}\n","import {Fragment, useMemo} from 'react';\nimport {browserHistory} from 'react-router';\nimport styled from '@emotion/styled';\nimport {Location} from 'history';\nimport omit from 'lodash/omit';\n\nimport MarkArea from 'sentry/components/charts/components/markArea';\nimport MarkLine from 'sentry/components/charts/components/markLine';\nimport {LineChartSeries} from 'sentry/components/charts/lineChart';\nimport DatePageFilter from 'sentry/components/datePageFilter';\nimport EnvironmentPageFilter from 'sentry/components/environmentPageFilter';\nimport SearchBar from 'sentry/components/events/searchBar';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport PageFilterBar from 'sentry/components/organizations/pageFilterBar';\nimport {normalizeDateTimeParams} from 'sentry/components/organizations/pageFilters/parse';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport {defined} from 'sentry/utils';\nimport EventView from 'sentry/utils/discover/eventView';\nimport AnomaliesQuery, {\n  AnomalyInfo,\n  AnomalyPayload,\n  ChildrenProps,\n} from 'sentry/utils/performance/anomalies/anomaliesQuery';\nimport {decodeScalar} from 'sentry/utils/queryString';\nimport theme from 'sentry/utils/theme';\n\nimport {GenericPerformanceWidget} from '../../landing/widgets/components/performanceWidget';\nimport {WidgetEmptyStateWarning} from '../../landing/widgets/components/selectableList';\nimport {QueryDefinition, WidgetDataResult} from '../../landing/widgets/types';\nimport {\n  PerformanceWidgetSetting,\n  WIDGET_DEFINITIONS,\n} from '../../landing/widgets/widgetDefinitions';\nimport {SetStateAction} from '../types';\n\nimport AnomaliesTable from './anomaliesTable';\nimport {AnomalyChart} from './anomalyChart';\n\ntype Props = {\n  eventView: EventView;\n  location: Location;\n  organization: Organization;\n  projectId: string;\n  setError: SetStateAction<string | undefined>;\n  transactionName: string;\n};\n\ntype AnomaliesSectionProps = Props & {\n  queryData: ChildrenProps;\n};\n\nconst anomalyAreaName = (anomaly: AnomalyInfo) => `#${anomaly.id}`;\nconst transformAnomalyToArea = (\n  anomaly: AnomalyInfo\n): [{name: string; xAxis: number}, {xAxis: number}] => [\n  {name: anomalyAreaName(anomaly), xAxis: anomaly.start},\n  {xAxis: anomaly.end},\n];\n\nconst transformAnomalyData = (\n  _: any,\n  results: {data: AnomalyPayload; error: null | string; isLoading: boolean}\n) => {\n  const data: LineChartSeries[] = [];\n  const resultData = results.data;\n\n  if (!resultData) {\n    return {\n      isLoading: results.isLoading,\n      isErrored: !!results.error,\n      data: undefined,\n      hasData: false,\n      loading: results.isLoading,\n    };\n  }\n\n  data.push({\n    seriesName: 'tpm()',\n    data: resultData.y.data.map(([name, [{count}]]) => ({\n      name,\n      value: count,\n    })),\n  });\n  data.push({\n    seriesName: 'tpm() lower bound',\n    data: resultData.yhat_lower.data.map(([name, [{count}]]) => ({\n      name,\n      value: count,\n    })),\n  });\n  data.push({\n    seriesName: 'tpm() upper bound',\n    data: resultData.yhat_upper.data.map(([name, [{count}]]) => ({\n      name,\n      value: count,\n    })),\n  });\n\n  const anomalies = results.data.anomalies;\n  const highConfidenceAreas = anomalies\n    .filter(a => a.confidence === 'high')\n    .map(transformAnomalyToArea);\n  const highConfidenceLines = anomalies\n    .filter(a => a.confidence === 'high')\n    .map(area => ({xAxis: area.start, name: anomalyAreaName(area)}));\n\n  const lowConfidenceAreas = anomalies\n    .filter(a => a.confidence === 'low')\n    .map(transformAnomalyToArea);\n  const lowConfidenceLines = anomalies\n    .filter(a => a.confidence === 'low')\n    .map(area => ({xAxis: area.start, name: anomalyAreaName(area)}));\n\n  data.push({\n    seriesName: 'High Confidence',\n    color: theme.red300,\n    data: [],\n    silent: true,\n    markLine: MarkLine({\n      animation: false,\n      lineStyle: {color: theme.red300, type: 'solid', width: 1, opacity: 1.0},\n      data: highConfidenceLines,\n      label: {\n        show: true,\n        rotate: 90,\n        color: theme.red300,\n        position: 'insideEndBottom',\n        fontSize: '10',\n        offset: [5, 5],\n        formatter: obj => `${(obj.data as any).name}`,\n      },\n    }),\n    markArea: MarkArea({\n      itemStyle: {\n        color: theme.red300,\n        opacity: 0.2,\n      },\n      label: {\n        show: false,\n      },\n      data: highConfidenceAreas,\n    }),\n  });\n\n  data.push({\n    seriesName: 'Low Confidence',\n    color: theme.yellow200,\n    data: [],\n    markLine: MarkLine({\n      animation: false,\n      lineStyle: {color: theme.yellow200, type: 'solid', width: 1, opacity: 1.0},\n      data: lowConfidenceLines,\n      label: {\n        show: true,\n        rotate: 90,\n        color: theme.yellow300,\n        position: 'insideEndBottom',\n        fontSize: '10',\n        offset: [5, 5],\n        formatter: obj => `${(obj.data as any).name}`,\n      },\n    }),\n    markArea: MarkArea({\n      itemStyle: {\n        color: theme.yellow200,\n        opacity: 0.2,\n      },\n      label: {\n        show: false,\n      },\n      data: lowConfidenceAreas,\n    }),\n  });\n\n  return {\n    isLoading: results.isLoading,\n    isErrored: !!results.error,\n    data,\n    hasData: true,\n    loading: results.isLoading,\n  };\n};\n\ntype AnomalyData = WidgetDataResult & ReturnType<typeof transformAnomalyData>;\n\ntype DataType = {\n  chart: AnomalyData;\n};\n\nfunction Anomalies(props: AnomaliesSectionProps) {\n  const height = 250;\n  const chartColor = theme.charts.colors[0];\n\n  const chart = useMemo<QueryDefinition<DataType, WidgetDataResult>>(() => {\n    return {\n      fields: '',\n      component: provided => <Fragment>{provided.children(props.queryData)}</Fragment>,\n      transform: transformAnomalyData,\n    };\n  }, [props.queryData]);\n\n  return (\n    <GenericPerformanceWidget<DataType>\n      {...props}\n      title={t('Transaction Count')}\n      titleTooltip={t(\n        'Represents transaction count across time, with added visualizations to highlight anomalies in your data.'\n      )}\n      fields={['']}\n      chartSetting={PerformanceWidgetSetting.TPM_AREA}\n      chartDefinition={WIDGET_DEFINITIONS[PerformanceWidgetSetting.TPM_AREA]}\n      Subtitle={() => <div />}\n      HeaderActions={() => <div />}\n      EmptyComponent={WidgetEmptyStateWarning}\n      Queries={{\n        chart,\n      }}\n      Visualizations={[\n        {\n          component: provided => {\n            const data =\n              provided.widgetData.chart.data?.map(series => {\n                if (series.seriesName !== 'tpm()') {\n                  series.lineStyle = {type: 'dashed', color: chartColor, width: 1.5};\n                }\n                if (series.seriesName === 'score') {\n                  series.lineStyle = {color: theme.red400};\n                }\n                return series;\n              }) ?? [];\n\n            return (\n              <AnomalyChart\n                {...provided}\n                data={data}\n                height={height}\n                statsPeriod={undefined}\n                start={null}\n                end={null}\n              />\n            );\n          },\n          height,\n        },\n      ]}\n    />\n  );\n}\n\nfunction AnomaliesContent(props: Props) {\n  const {location, organization, eventView} = props;\n  const query = decodeScalar(location.query.query, '');\n\n  function handleChange(key: string) {\n    return function (value: string | undefined) {\n      const queryParams = normalizeDateTimeParams({\n        ...(location.query || {}),\n        [key]: value,\n      });\n\n      // do not propagate pagination when making a new search\n      const toOmit = ['cursor'];\n      if (!defined(value)) {\n        toOmit.push(key);\n      }\n      const searchQueryParams = omit(queryParams, toOmit);\n\n      browserHistory.push({\n        ...location,\n        query: searchQueryParams,\n      });\n    };\n  }\n  return (\n    <Layout.Main fullWidth>\n      <FilterActions>\n        <PageFilterBar condensed>\n          <EnvironmentPageFilter />\n          <DatePageFilter alignDropdown=\"left\" />\n        </PageFilterBar>\n        <SearchBar\n          organization={organization}\n          projectIds={eventView.project}\n          query={query}\n          fields={eventView.fields}\n          onSearch={handleChange('query')}\n        />\n      </FilterActions>\n      <AnomaliesQuery\n        organization={organization}\n        location={location}\n        eventView={eventView}\n      >\n        {queryData => (\n          <Fragment>\n            <AnomaliesWrapper>\n              <Anomalies {...props} queryData={queryData} />\n            </AnomaliesWrapper>\n\n            <AnomaliesTable\n              anomalies={queryData.data?.anomalies}\n              {...props}\n              isLoading={queryData.isLoading}\n            />\n          </Fragment>\n        )}\n      </AnomaliesQuery>\n    </Layout.Main>\n  );\n}\n\nconst FilterActions = styled('div')`\n  display: grid;\n  gap: ${space(2)};\n  margin-bottom: ${space(2)};\n\n  @media (min-width: ${p => p.theme.breakpoints.small}) {\n    grid-template-columns: auto 1fr;\n  }\n`;\n\nconst AnomaliesWrapper = styled('div')`\n  margin-bottom: ${space(2)};\n`;\n\nexport default AnomaliesContent;\n","import {Location} from 'history';\n\nimport {t} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {MEPSettingProvider} from 'sentry/utils/performance/contexts/metricsEnhancedSetting';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport withProjects from 'sentry/utils/withProjects';\n\nimport PageLayout from '../pageLayout';\nimport Tab from '../tabs';\n\nimport AnomaliesContent from './content';\nimport {generateAnomaliesEventView} from './utils';\n\ntype Props = {\n  location: Location;\n  organization: Organization;\n  projects: Project[];\n};\n\nfunction TransactionAnomalies(props: Props) {\n  const {location, organization, projects} = props;\n\n  return (\n    <MEPSettingProvider>\n      <PageLayout\n        location={location}\n        organization={organization}\n        projects={projects}\n        tab={Tab.ANOMALIES}\n        generateEventView={generateAnomaliesEventView}\n        getDocumentTitle={getDocumentTitle}\n        childComponent={AnomaliesContent}\n      />\n    </MEPSettingProvider>\n  );\n}\n\nfunction getDocumentTitle(transactionName: string): string {\n  const hasTransactionName =\n    typeof transactionName === 'string' && String(transactionName).trim().length > 0;\n\n  if (hasTransactionName) {\n    return [String(transactionName).trim(), t('Performance')].join(' - ');\n  }\n\n  return [t('Summary'), t('Performance')].join(' - ');\n}\n\nexport default withProjects(withOrganization(TransactionAnomalies));\n"],"names":["MarkArea","props","LineChart","_ref","series","seriesOptions","_jsx","BaseChart","map","_ref2","seriesName","data","dataArray","options","LineSeries","name","_ref3","value","animation","animationThreshold","animationDuration","displayName","SEARCH_SPECIAL_CHARS_REGEXP","RegExp","NEGATION_OPERATOR","SEARCH_WILDCARD","STATIC_FIELD_TAGS_SET","Set","Object","keys","FIELD_TAGS","STATIC_FIELD_TAGS","reduce","tags","key","kind","FieldKind","FIELD","STATIC_FIELD_TAGS_WITHOUT_TRACING","omit","TRACING_FIELDS","STATIC_SPAN_TAGS","SPAN_OP_BREAKDOWN_FIELDS","METRICS","STATIC_SEMVER_TAGS","SEMVER_TAGS","SearchBar","maxSearchItems","organization","omitTags","fields","projectIds","includeSessionTagsValues","maxMenuHeight","customMeasurements","api","useApi","functionTags","useMemo","length","acc","item","has","field","isEquation","isCustomMeasurement","FUNCTION","getFunctionTags","tagsWithKind","TAG","useEffect","getEventFieldValues","cache","clear","memoize","tag","query","endpointParams","projectIdStrings","String","isAggregateField","isMeasurement","Promise","resolve","isDeviceClass","DEVICE_CLASS_TAG_VALUES","fetchTagValues","orgSlug","slug","tagKey","search","includeTransactions","includeSessions","then","results","flatten","filter","defined","Error","getTagList","measurements","measurementsWithKind","getMeasurementTags","MEASUREMENT","combinedTags","features","includes","assign","FieldKey","HAS","values","sort","a","b","toLowerCase","localeCompare","predefined","Measurements","children","_ref4","SmartSearchBar","hasRecentSearches","savedSearchType","SavedSearchType","EVENT","onGetTagValues","supportedTags","prepareQuery","replace","excludedTags","ENVIRONMENT","TOTAL_COUNT","customPerformanceMetrics","withTags","transformStatsTimes","stats","forEach","d","transformPayload","payload","newPayload","y","yhat_lower","yhat_upper","anomalies","anoms","start","end","AnomaliesSeriesQuery","ANOMALY_FLAG","GenericDiscoverQuery","route","tableData","rest","isLoading","error","pageLinks","WrappedComponent","WithTags","Component","constructor","arguments","_defineProperty","TagStore","getState","listen","this","setState","undefined","componentWillUnmount","unsubscribe","render","state","getDisplayName","transformRow","anom","anomaly","id","confidence","timestamp","Date","timeInterval","expected","received","AnomaliesTable","location","GridEditable","columnOrder","COLUMNS","columnSortBy","grid","renderHeadCell","renderBodyCell","renderBodyCellWithMeta","column","_index","align","fieldAlignment","COLUMN_TYPE","SortLink","title","direction","canSort","generateSortLink","dataRow","fieldRenderer","getFieldRenderer","ConfidenceCell","LowConfidence","t","HighConfidence","NumberCell","Count","_jsxs","IconArrow","size","_styled","target","space","p","theme","yellow400","red400","styles","width","COL_WIDTH_UNDEFINED","AnomalyChart","router","useRouter","useLocation","statsPeriod","height","propsStart","propsEnd","getUtcToLocalDateObject","utc","normalizeDateTimeParams","chartOptions","legend","right","top","showSymbol","tooltip","trigger","valueFormatter","label","tooltipFormatter","aggregateOutputType","xAxis","yAxis","axisLabel","formatter","axisLabelFormatter","ChartZoom","period","zoomRenderProps","anomalyAreaName","transformAnomalyToArea","transformAnomalyData","_","resultData","isErrored","hasData","loading","push","count","highConfidenceAreas","highConfidenceLines","area","lowConfidenceAreas","lowConfidenceLines","color","red300","silent","markLine","MarkLine","lineStyle","type","opacity","show","rotate","position","fontSize","offset","obj","markArea","itemStyle","yellow200","yellow300","Anomalies","chartColor","charts","colors","chart","component","provided","Fragment","queryData","transform","GenericPerformanceWidget","titleTooltip","chartSetting","PerformanceWidgetSetting","TPM_AREA","chartDefinition","WIDGET_DEFINITIONS","Subtitle","HeaderActions","EmptyComponent","WidgetEmptyStateWarning","Queries","Visualizations","widgetData","AnomaliesContent","eventView","decodeScalar","Layout","fullWidth","FilterActions","PageFilterBar","condensed","EnvironmentPageFilter","DatePageFilter","alignDropdown","project","onSearch","queryParams","toOmit","searchQueryParams","browserHistory","AnomaliesQuery","AnomaliesWrapper","breakpoints","small","TransactionAnomalies","projects","MEPSettingProvider","PageLayout","tab","Tab","ANOMALIES","generateEventView","generateAnomaliesEventView","getDocumentTitle","childComponent","transactionName","trim","join","withProjects","withOrganization"],"sourceRoot":""}