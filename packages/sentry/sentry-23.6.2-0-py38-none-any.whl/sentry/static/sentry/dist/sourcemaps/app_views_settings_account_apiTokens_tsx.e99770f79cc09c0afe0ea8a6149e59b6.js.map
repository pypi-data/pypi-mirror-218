{"version":3,"file":"chunks/app_views_settings_account_apiTokens_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/apiTokenRow.tsx","webpack:///./app/views/settings/account/apiTokens.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = AsyncComponent['state'];\nexport type AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport DateTime from 'sentry/components/dateTime';\nimport {PanelItem} from 'sentry/components/panels';\nimport TextCopyInput from 'sentry/components/textCopyInput';\nimport {IconSubtract} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {InternalAppApiToken} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\ntype Props = {\n  onRemove: (token: InternalAppApiToken) => void;\n  token: InternalAppApiToken;\n};\n\nfunction ApiTokenRow({token, onRemove}: Props) {\n  return (\n    <StyledPanelItem>\n      <Controls>\n        <InputWrapper>\n          <TextCopyInput>\n            {getDynamicText({value: token.token, fixed: 'CI_AUTH_TOKEN'})}\n          </TextCopyInput>\n        </InputWrapper>\n        <Button\n          onClick={() => onRemove(token)}\n          icon={<IconSubtract isCircled size=\"xs\" />}\n        >\n          {t('Remove')}\n        </Button>\n      </Controls>\n\n      <Details>\n        <ScopesWrapper>\n          <Heading>{t('Scopes')}</Heading>\n          <ScopeList>{token.scopes.join(', ')}</ScopeList>\n        </ScopesWrapper>\n        <div>\n          <Heading>{t('Created')}</Heading>\n          <Time>\n            <DateTime\n              date={getDynamicText({\n                value: token.dateCreated,\n                fixed: new Date(1508208080000), // National Pasta Day\n              })}\n            />\n          </Time>\n        </div>\n      </Details>\n    </StyledPanelItem>\n  );\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  flex-direction: column;\n  padding: ${space(2)};\n`;\n\nconst Controls = styled('div')`\n  display: flex;\n  align-items: center;\n  margin-bottom: ${space(1)};\n`;\n\nconst InputWrapper = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nconst Details = styled('div')`\n  display: flex;\n  margin-top: ${space(1)};\n`;\n\nconst ScopesWrapper = styled('div')`\n  flex: 1;\n`;\n\nconst ScopeList = styled('div')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4;\n`;\n\nconst Time = styled('time')`\n  font-size: ${p => p.theme.fontSizeRelativeSmall};\n  line-height: 1.4;\n`;\n\nconst Heading = styled('div')`\n  font-size: ${p => p.theme.fontSizeMedium};\n  text-transform: uppercase;\n  color: ${p => p.theme.subText};\n  margin-bottom: ${space(1)};\n`;\n\nexport default ApiTokenRow;\n","import {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport AlertLink from 'sentry/components/alertLink';\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {t, tct} from 'sentry/locale';\nimport {InternalAppApiToken, Organization} from 'sentry/types';\nimport withOrganization from 'sentry/utils/withOrganization';\nimport AsyncView from 'sentry/views/asyncView';\nimport ApiTokenRow from 'sentry/views/settings/account/apiTokenRow';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\ntype Props = {\n  organization: Organization;\n} & AsyncView['props'];\n\ntype State = {\n  tokenList: InternalAppApiToken[] | null;\n} & AsyncView['state'];\n\nexport class ApiTokens extends AsyncView<Props, State> {\n  getTitle() {\n    return t('User Auth Tokens');\n  }\n\n  getDefaultState() {\n    return {\n      ...super.getDefaultState(),\n      tokenList: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['tokenList', '/api-tokens/']];\n  }\n\n  handleRemoveToken = (token: InternalAppApiToken) => {\n    addLoadingMessage();\n    const oldTokenList = this.state.tokenList;\n\n    this.setState(\n      state => ({\n        tokenList: state.tokenList?.filter(tk => tk.token !== token.token) ?? [],\n      }),\n      async () => {\n        try {\n          await this.api.requestPromise('/api-tokens/', {\n            method: 'DELETE',\n            data: {token: token.token},\n          });\n\n          addSuccessMessage(t('Removed token'));\n        } catch (_err) {\n          addErrorMessage(t('Unable to remove token. Please try again.'));\n          this.setState({\n            tokenList: oldTokenList,\n          });\n        }\n      }\n    );\n  };\n\n  renderBody() {\n    const {organization} = this.props;\n    const {tokenList} = this.state;\n\n    const isEmpty = !Array.isArray(tokenList) || tokenList.length === 0;\n\n    const action = (\n      <Button\n        priority=\"primary\"\n        size=\"sm\"\n        to=\"/settings/account/api/auth-tokens/new-token/\"\n        data-test-id=\"create-token\"\n      >\n        {t('Create New Token')}\n      </Button>\n    );\n\n    return (\n      <div>\n        <SettingsPageHeader title={this.getTitle()} action={action} />\n        <AlertLink\n          to={`/settings/${organization?.slug ?? ''}/developer-settings/new-internal`}\n        >\n          {t(\n            \"Auth Tokens are tied to the logged in user, meaning they'll stop working if the user leaves the organization! We suggest using internal integrations to create/manage tokens tied to the organization instead.\"\n          )}\n        </AlertLink>\n        <TextBlock>\n          {t(\n            \"Authentication tokens allow you to perform actions against the Sentry API on behalf of your account. They're the easiest way to get started using the API.\"\n          )}\n        </TextBlock>\n        <TextBlock>\n          {tct(\n            'For more information on how to use the web API, see our [link:documentation].',\n            {\n              link: <ExternalLink href=\"https://docs.sentry.io/api/\" />,\n            }\n          )}\n        </TextBlock>\n        <Panel>\n          <PanelHeader>{t('Auth Token')}</PanelHeader>\n\n          <PanelBody>\n            {isEmpty && (\n              <EmptyMessage>\n                {t(\"You haven't created any authentication tokens yet.\")}\n              </EmptyMessage>\n            )}\n\n            {tokenList?.map(token => (\n              <ApiTokenRow\n                key={token.token}\n                token={token}\n                onRemove={this.handleRemoveToken}\n              />\n            ))}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default withOrganization(ApiTokens);\n"],"names":["AsyncView","AsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","ApiTokenRow","_ref","token","onRemove","_jsxs","StyledPanelItem","Controls","InputWrapper","TextCopyInput","getDynamicText","value","fixed","Button","onClick","icon","IconSubtract","isCircled","size","t","Details","ScopesWrapper","Heading","ScopeList","scopes","join","Time","DateTime","date","dateCreated","Date","_styled","PanelItem","target","space","p","theme","fontSizeRelativeSmall","name","styles","fontSizeMedium","subText","ApiTokens","constructor","arguments","_defineProperty","addLoadingMessage","oldTokenList","state","tokenList","setState","filter","tk","async","api","requestPromise","method","data","addSuccessMessage","_err","addErrorMessage","getDefaultState","super","getEndpoints","renderBody","organization","props","isEmpty","Array","isArray","length","action","priority","to","SettingsPageHeader","AlertLink","slug","TextBlock","tct","link","ExternalLink","href","Panel","PanelHeader","PanelBody","EmptyMessage","map","handleRemoveToken","withOrganization"],"sourceRoot":""}