{"version":3,"file":"chunks/app_views_settings_account_apiApplications_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"yXAMe,MAAMA,UAGXC,EAAAA,EACRC,WACE,MAAO,EACT,CAEAC,SACE,OACEC,EAAAA,EAAAA,IAACC,EAAAA,EAAmB,CAACC,MAAOC,KAAKL,WAAWM,SACzCD,KAAKE,mBAGZ,EAdmBT,EAASU,YAAA,W,6xBCwB9B,MAAMC,UAAYC,EAAAA,UAAwBC,cAAA,SAAAC,YAAAC,EAAAA,EAAAA,GAAA,aACzB,CACbC,SAAS,KACVD,EAAAA,EAAAA,GAAA,qBAEc,KACb,GAAIR,KAAKU,MAAMD,QACb,OAGF,MAAM,IAACE,EAAG,IAAEC,EAAG,SAAEC,GAAYb,KAAKc,MAElCd,KAAKe,SACH,CACEN,SAAS,IAEXO,WACEC,EAAAA,EAAAA,MAEA,UACQN,EAAIO,eAAgB,qBAAoBN,EAAIO,MAAO,CACvDC,OAAQ,YAGVC,EAAAA,EAAAA,MACAR,EAASD,EACX,CAAE,MAAOU,IACPC,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAE,mDACpB,IAEH,GACF,CAED5B,SACE,MAAM,IAACgB,GAAOZ,KAAKc,MAEnB,OACEW,EAAAA,EAAAA,IAACC,EAAe,CAAAzB,SAAA,EACdwB,EAAAA,EAAAA,IAACE,EAAsB,CAAA1B,SAAA,EACrBJ,EAAAA,EAAAA,IAAC+B,EAAe,CAACC,GAAK,sCAA8BjB,EAAIO,MAAMlB,UAC3D6B,EAAAA,EAAAA,GAAe,CAACC,MAAOnB,EAAIoB,KAAMC,MAAO,2BAE3CpC,EAAAA,EAAAA,IAACqC,EAAQ,CAAAjC,UACN6B,EAAAA,EAAAA,GAAe,CAACC,MAAOnB,EAAIuB,SAAUF,MAAO,uBAIjDpC,EAAAA,EAAAA,IAACuC,EAAAA,GAAM,CACL,aAAW,SACXC,QAASrC,KAAKsC,aACdC,SAAUvC,KAAKU,MAAMD,QACrB+B,MAAM3C,EAAAA,EAAAA,IAAC4C,EAAAA,GAAU,QAIzB,EAvDIrC,EAAGD,YAAA,MA0DT,MAAMuB,GAAkBgB,EAAAA,EAAAA,GAAOC,EAAAA,GAAS,CAAAC,OAAA,YAAhBF,CAAiB,YAC5BG,EAAAA,EAAAA,GAAM,GAAE,wBAIflB,GAAyBe,EAAAA,EAAAA,GAAO,MAAK,CAAAE,OAAA,YAAZF,CAAa,2DAI1BG,EAAAA,EAAAA,GAAM,GAAE,KAGpBjB,GAAkBc,EAAAA,EAAAA,GAAOI,EAAAA,EAAI,CAAAF,OAAA,YAAXF,CAAY,kBACjBG,EAAAA,EAAAA,GAAM,GAAE,KAGrBX,GAAWQ,EAAAA,EAAAA,GAAO,MAAK,CAAAE,OAAA,YAAZF,CAAa,UACnBK,GAAKA,EAAEC,MAAMC,SAAO,eAChBF,GAAKA,EAAEC,MAAME,eAAa,KAGzC,I,kECrFA,MAAMC,UAAwB1D,EAAAA,EAAwBa,cAAA,SAAAC,YAAAC,EAAAA,EAAAA,GAAA,gCAS1BQ,WACxBC,EAAAA,EAAAA,MAEA,IACE,MAAML,QAAYZ,KAAKW,IAAIO,eAAe,qBAAsB,CAC9DE,OAAQ,UAGVgC,EAAAA,EAAAA,KAAkB5B,EAAAA,EAAAA,GAAE,kCACpBxB,KAAKc,MAAMuC,OAAOC,KAAM,sCAA8B1C,EAAIO,MAC5D,CAAE,OACAI,EAAAA,EAAAA,KAAgBC,EAAAA,EAAAA,GAAE,mDACpB,MACDhB,EAAAA,EAAAA,GAAA,gCAE0BI,IACzBZ,KAAKe,SAAS,CACZwC,QAASvD,KAAKU,MAAM6C,QAAQC,QAAOC,GAAKA,EAAEtC,KAAOP,EAAIO,MACrD,GACH,CA3BDuC,eACE,MAAO,CAAC,CAAC,UAAW,sBACtB,CAEA/D,WACE,OAAO6B,EAAAA,EAAAA,GAAE,mBACX,CAuBAmC,aACE,MAAMC,EAAwC,IAA9B5D,KAAKU,MAAM6C,QAAQM,OAEnC,OACEpC,EAAAA,EAAAA,IAAA,OAAAxB,SAAA,EACEJ,EAAAA,EAAAA,IAACiE,EAAAA,EAAkB,CACjB/D,MAAM,mBACNgE,QACElE,EAAAA,EAAAA,IAACuC,EAAAA,GAAM,CACL4B,SAAS,UACTC,KAAK,KACL5B,QAASrC,KAAKkE,wBACd1B,MAAM3C,EAAAA,EAAAA,IAACsE,EAAAA,GAAO,CAACF,KAAK,KAAKG,WAAS,IAAInE,UAErCuB,EAAAA,EAAAA,GAAE,+BAKTC,EAAAA,EAAAA,IAAC4C,EAAAA,GAAK,CAAApE,SAAA,EACJJ,EAAAA,EAAAA,IAACyE,EAAAA,GAAW,CAAArE,UAAEuB,EAAAA,EAAAA,GAAE,uBAEhB3B,EAAAA,EAAAA,IAAC0E,EAAAA,EAAS,CAAAtE,SACN2D,GAUA/D,EAAAA,EAAAA,IAAC2E,EAAAA,EAAY,CAAAvE,UACVuB,EAAAA,EAAAA,GAAE,+CAVLxB,KAAKU,MAAM6C,QAAQkB,KAAI7D,IACrBf,EAAAA,EAAAA,IAACO,EAAG,CACFO,IAAKX,KAAKW,IAEVC,IAAKA,EACLC,SAAUb,KAAK0E,yBAFV9D,EAAIO,aAczB,EAGF,S","sources":["webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/account/apiApplications/row.tsx","webpack:///./app/views/settings/account/apiApplications/index.tsx"],"sourcesContent":["import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = AsyncComponent['state'];\nexport type AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  clearIndicators,\n} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport {Button} from 'sentry/components/button';\nimport Link from 'sentry/components/links/link';\nimport {PanelItem} from 'sentry/components/panels';\nimport {IconDelete} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {ApiApplication} from 'sentry/types';\nimport getDynamicText from 'sentry/utils/getDynamicText';\n\nconst ROUTE_PREFIX = '/settings/account/api/';\n\ntype Props = {\n  api: Client;\n  app: ApiApplication;\n  onRemove: (app: ApiApplication) => void;\n};\n\ntype State = {\n  loading: boolean;\n};\n\nclass Row extends Component<Props, State> {\n  state: State = {\n    loading: false,\n  };\n\n  handleRemove = () => {\n    if (this.state.loading) {\n      return;\n    }\n\n    const {api, app, onRemove} = this.props;\n\n    this.setState(\n      {\n        loading: true,\n      },\n      async () => {\n        addLoadingMessage();\n\n        try {\n          await api.requestPromise(`/api-applications/${app.id}/`, {\n            method: 'DELETE',\n          });\n\n          clearIndicators();\n          onRemove(app);\n        } catch (_err) {\n          addErrorMessage(t('Unable to remove application. Please try again.'));\n        }\n      }\n    );\n  };\n\n  render() {\n    const {app} = this.props;\n\n    return (\n      <StyledPanelItem>\n        <ApplicationNameWrapper>\n          <ApplicationName to={`${ROUTE_PREFIX}applications/${app.id}/`}>\n            {getDynamicText({value: app.name, fixed: 'CI_APPLICATION_NAME'})}\n          </ApplicationName>\n          <ClientId>\n            {getDynamicText({value: app.clientID, fixed: 'CI_CLIENT_ID'})}\n          </ClientId>\n        </ApplicationNameWrapper>\n\n        <Button\n          aria-label=\"Remove\"\n          onClick={this.handleRemove}\n          disabled={this.state.loading}\n          icon={<IconDelete />}\n        />\n      </StyledPanelItem>\n    );\n  }\n}\n\nconst StyledPanelItem = styled(PanelItem)`\n  padding: ${space(2)};\n  align-items: center;\n`;\n\nconst ApplicationNameWrapper = styled('div')`\n  display: flex;\n  flex-direction: column;\n  flex: 1;\n  margin-right: ${space(1)};\n`;\n\nconst ApplicationName = styled(Link)`\n  margin-bottom: ${space(1)};\n`;\n\nconst ClientId = styled('div')`\n  color: ${p => p.theme.subText};\n  font-size: ${p => p.theme.fontSizeSmall};\n`;\n\nexport default Row;\n","import {RouteComponentProps} from 'react-router';\n\nimport {\n  addErrorMessage,\n  addLoadingMessage,\n  addSuccessMessage,\n} from 'sentry/actionCreators/indicator';\nimport {Button} from 'sentry/components/button';\nimport EmptyMessage from 'sentry/components/emptyMessage';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {IconAdd} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport {ApiApplication} from 'sentry/types';\nimport AsyncView from 'sentry/views/asyncView';\nimport Row from 'sentry/views/settings/account/apiApplications/row';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\n\nconst ROUTE_PREFIX = '/settings/account/api/';\n\ntype Props = RouteComponentProps<{}, {}>;\ntype State = {\n  appList: ApiApplication[];\n} & AsyncView['state'];\n\nclass ApiApplications extends AsyncView<Props, State> {\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    return [['appList', '/api-applications/']];\n  }\n\n  getTitle() {\n    return t('API Applications');\n  }\n\n  handleCreateApplication = async () => {\n    addLoadingMessage();\n\n    try {\n      const app = await this.api.requestPromise('/api-applications/', {\n        method: 'POST',\n      });\n\n      addSuccessMessage(t('Created a new API Application'));\n      this.props.router.push(`${ROUTE_PREFIX}applications/${app.id}/`);\n    } catch {\n      addErrorMessage(t('Unable to remove application. Please try again.'));\n    }\n  };\n\n  handleRemoveApplication = (app: ApiApplication) => {\n    this.setState({\n      appList: this.state.appList.filter(a => a.id !== app.id),\n    });\n  };\n\n  renderBody() {\n    const isEmpty = this.state.appList.length === 0;\n\n    return (\n      <div>\n        <SettingsPageHeader\n          title=\"API Applications\"\n          action={\n            <Button\n              priority=\"primary\"\n              size=\"sm\"\n              onClick={this.handleCreateApplication}\n              icon={<IconAdd size=\"xs\" isCircled />}\n            >\n              {t('Create New Application')}\n            </Button>\n          }\n        />\n\n        <Panel>\n          <PanelHeader>{t('Application Name')}</PanelHeader>\n\n          <PanelBody>\n            {!isEmpty ? (\n              this.state.appList.map(app => (\n                <Row\n                  api={this.api}\n                  key={app.id}\n                  app={app}\n                  onRemove={this.handleRemoveApplication}\n                />\n              ))\n            ) : (\n              <EmptyMessage>\n                {t(\"You haven't created any applications yet.\")}\n              </EmptyMessage>\n            )}\n          </PanelBody>\n        </Panel>\n      </div>\n    );\n  }\n}\n\nexport default ApiApplications;\n"],"names":["AsyncView","AsyncComponent","getTitle","render","_jsx","SentryDocumentTitle","title","this","children","renderComponent","displayName","Row","Component","constructor","arguments","_defineProperty","loading","state","api","app","onRemove","props","setState","async","addLoadingMessage","requestPromise","id","method","clearIndicators","_err","addErrorMessage","t","_jsxs","StyledPanelItem","ApplicationNameWrapper","ApplicationName","to","getDynamicText","value","name","fixed","ClientId","clientID","Button","onClick","handleRemove","disabled","icon","IconDelete","_styled","PanelItem","target","space","Link","p","theme","subText","fontSizeSmall","ApiApplications","addSuccessMessage","router","push","appList","filter","a","getEndpoints","renderBody","isEmpty","length","SettingsPageHeader","action","priority","size","handleCreateApplication","IconAdd","isCircled","Panel","PanelHeader","PanelBody","EmptyMessage","map","handleRemoveApplication"],"sourceRoot":""}