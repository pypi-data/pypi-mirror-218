{"version":3,"file":"chunks/app_views_settings_projectProguard_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/acl/role.tsx","webpack:///./app/components/searchBar.tsx","webpack:///./app/utils/routeTitle.tsx","webpack:///./app/views/asyncView.tsx","webpack:///./app/views/settings/projectProguard/projectProguardRow.tsx","webpack:///./app/views/settings/projectProguard/projectProguard.tsx","webpack:///./app/views/settings/projectProguard/index.tsx"],"sourcesContent":["import {useMemo} from 'react';\n\nimport ConfigStore from 'sentry/stores/configStore';\nimport {Organization, User} from 'sentry/types';\nimport {isActiveSuperuser} from 'sentry/utils/isActiveSuperuser';\nimport {isRenderFunc} from 'sentry/utils/isRenderFunc';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype RoleRenderProps = {\n  hasRole: boolean;\n};\n\ntype ChildrenRenderFn = (props: RoleRenderProps) => React.ReactElement | null;\n\nfunction checkUserRole(user: User, organization: Organization, role: RoleProps['role']) {\n  if (!user) {\n    return false;\n  }\n\n  if (isActiveSuperuser()) {\n    return true;\n  }\n\n  if (!Array.isArray(organization.orgRoleList)) {\n    return false;\n  }\n\n  const roleIds = organization.orgRoleList.map(r => r.id);\n\n  if (!roleIds.includes(role) || !roleIds.includes(organization.orgRole ?? '')) {\n    return false;\n  }\n\n  const requiredIndex = roleIds.indexOf(role);\n  const currentIndex = roleIds.indexOf(organization.orgRole ?? '');\n  return currentIndex >= requiredIndex;\n}\n\ninterface RoleProps {\n  /**\n   * If children is a function then will be treated as a render prop and\n   * passed RoleRenderProps.\n   *\n   * The other interface is more simple, only show `children` if user has\n   * the minimum required role.\n   */\n  children: React.ReactElement | ChildrenRenderFn;\n  /**\n   * Current Organization\n   */\n  organization: Organization;\n  /**\n   * Minimum required role\n   */\n  role: string;\n}\n\nfunction Role({role, organization, children}: RoleProps): React.ReactElement | null {\n  const user = ConfigStore.get('user');\n\n  const hasRole = useMemo(\n    () => checkUserRole(user, organization, role),\n    // It seems that this returns a stable reference, but\n    [organization, role, user]\n  );\n\n  if (isRenderFunc<ChildrenRenderFn>(children)) {\n    return children({hasRole});\n  }\n\n  return hasRole ? children : null;\n}\n\nconst withOrganizationRole = withOrganization(Role);\n\nexport {withOrganizationRole as Role};\n","import {useCallback, useEffect, useRef, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport {Button} from 'sentry/components/button';\nimport {InputGroup, InputProps} from 'sentry/components/inputGroup';\nimport {IconSearch} from 'sentry/icons';\nimport {IconClose} from 'sentry/icons/iconClose';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\n\ninterface SearchBarProps extends Omit<InputProps, 'onChange'> {\n  defaultQuery?: string;\n  onChange?: (query: string) => void;\n  onSearch?: (query: string) => void;\n  query?: string;\n  trailing?: React.ReactNode;\n  width?: string;\n}\n\nfunction SearchBar({\n  query: queryProp,\n  defaultQuery = '',\n  onChange,\n  onSearch,\n  width,\n  size,\n  className,\n  trailing,\n  ...inputProps\n}: SearchBarProps) {\n  const inputRef = useRef<HTMLInputElement>(null);\n\n  const [query, setQuery] = useState(queryProp ?? defaultQuery);\n\n  // if query prop keeps changing we should treat this as\n  // a controlled component and its internal state should be in sync\n  useEffect(() => {\n    if (typeof queryProp === 'string') {\n      setQuery(queryProp);\n    }\n  }, [queryProp]);\n\n  const onQueryChange = useCallback(\n    (e: React.ChangeEvent<HTMLInputElement>) => {\n      const {value} = e.target;\n      setQuery(value);\n      onChange?.(value);\n    },\n    [onChange]\n  );\n\n  const onSubmit = useCallback(\n    (e: React.FormEvent<HTMLFormElement>) => {\n      e.preventDefault();\n      inputRef.current?.blur();\n      onSearch?.(query);\n    },\n    [onSearch, query]\n  );\n\n  const clearSearch = useCallback(() => {\n    setQuery('');\n    onChange?.('');\n    onSearch?.('');\n  }, [onChange, onSearch]);\n\n  return (\n    <FormWrap onSubmit={onSubmit} className={className}>\n      <InputGroup>\n        <InputGroup.LeadingItems disablePointerEvents>\n          <IconSearch color=\"subText\" size={size === 'xs' ? 'xs' : 'sm'} />\n        </InputGroup.LeadingItems>\n        <StyledInput\n          {...inputProps}\n          ref={inputRef}\n          type=\"text\"\n          name=\"query\"\n          autoComplete=\"off\"\n          value={query}\n          onChange={onQueryChange}\n          width={width}\n          size={size}\n        />\n        <InputGroup.TrailingItems>\n          {trailing}\n          {!!query && (\n            <SearchBarTrailingButton\n              size=\"zero\"\n              borderless\n              onClick={clearSearch}\n              icon={<IconClose size=\"xs\" />}\n              aria-label={t('Clear')}\n            />\n          )}\n        </InputGroup.TrailingItems>\n      </InputGroup>\n    </FormWrap>\n  );\n}\n\nconst FormWrap = styled('form')`\n  display: block;\n  position: relative;\n`;\n\nconst StyledInput = styled(InputGroup.Input)`\n  ${p => p.width && `width: ${p.width};`}\n`;\n\nexport const SearchBarTrailingButton = styled(Button)`\n  color: ${p => p.theme.subText};\n  padding: ${space(0.5)};\n`;\n\nexport default SearchBar;\n","function routeTitleGen(\n  routeName: string,\n  orgSlug: string,\n  withSentry: boolean = true,\n  projectSlug?: string\n): string {\n  const tmplBase = `${routeName} - ${orgSlug}`;\n  const tmpl = projectSlug ? `${tmplBase} - ${projectSlug}` : tmplBase;\n\n  return withSentry ? `${tmpl} - Sentry` : tmpl;\n}\n\nexport default routeTitleGen;\n","import AsyncComponent from 'sentry/components/asyncComponent';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\n\nexport type AsyncViewState = AsyncComponent['state'];\nexport type AsyncViewProps = AsyncComponent['props'];\n\nexport default class AsyncView<\n  P extends AsyncViewProps = AsyncViewProps,\n  S extends AsyncViewState = AsyncViewState\n> extends AsyncComponent<P, S> {\n  getTitle() {\n    return '';\n  }\n\n  render() {\n    return (\n      <SentryDocumentTitle title={this.getTitle()}>\n        {this.renderComponent() as React.ReactChild}\n      </SentryDocumentTitle>\n    );\n  }\n}\n","import {Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport Access from 'sentry/components/acl/access';\nimport {Role} from 'sentry/components/acl/role';\nimport {Button} from 'sentry/components/button';\nimport ButtonBar from 'sentry/components/buttonBar';\nimport Confirm from 'sentry/components/confirm';\nimport FileSize from 'sentry/components/fileSize';\nimport Link from 'sentry/components/links/link';\nimport TimeSince from 'sentry/components/timeSince';\nimport {Tooltip} from 'sentry/components/tooltip';\nimport {IconClock, IconDelete, IconDownload} from 'sentry/icons';\nimport {t, tct} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {DebugFile} from 'sentry/types/debugFiles';\n\ntype Props = {\n  downloadRole: string;\n  downloadUrl: string;\n  mapping: DebugFile;\n  onDelete: (id: string) => void;\n  orgSlug: string;\n};\n\nfunction ProjectProguardRow({\n  mapping,\n  onDelete,\n  downloadUrl,\n  downloadRole,\n  orgSlug,\n}: Props) {\n  const {id, debugId, uuid, size, dateCreated} = mapping;\n\n  const handleDeleteClick = () => {\n    onDelete(id);\n  };\n\n  return (\n    <Fragment>\n      <NameColumn>\n        <Name>{debugId || uuid || `(${t('empty')})`}</Name>\n        <TimeWrapper>\n          <IconClock size=\"sm\" />\n          <TimeSince date={dateCreated} />\n        </TimeWrapper>\n      </NameColumn>\n      <SizeColumn>\n        <FileSize bytes={size} />\n      </SizeColumn>\n      <ActionsColumn>\n        <ButtonBar gap={0.5}>\n          <Role role={downloadRole}>\n            {({hasRole}) => (\n              <Tooltip\n                title={tct(\n                  'Mappings can only be downloaded by users with organization [downloadRole] role[orHigher]. This can be changed in [settingsLink:Debug Files Access] settings.',\n                  {\n                    downloadRole,\n                    orHigher: downloadRole !== 'owner' ? ` ${t('or higher')}` : '',\n                    settingsLink: <Link to={`/settings/${orgSlug}/#debugFilesRole`} />,\n                  }\n                )}\n                disabled={hasRole}\n                isHoverable\n              >\n                <Button\n                  size=\"sm\"\n                  icon={<IconDownload size=\"sm\" />}\n                  disabled={!hasRole}\n                  href={downloadUrl}\n                  title={hasRole ? t('Download Mapping') : undefined}\n                  aria-label={t('Download Mapping')}\n                />\n              </Tooltip>\n            )}\n          </Role>\n\n          <Access access={['project:releases']}>\n            {({hasAccess}) => (\n              <Tooltip\n                disabled={hasAccess}\n                title={t('You do not have permission to delete mappings.')}\n              >\n                <Confirm\n                  message={t('Are you sure you want to remove this mapping?')}\n                  onConfirm={handleDeleteClick}\n                  disabled={!hasAccess}\n                >\n                  <Button\n                    size=\"sm\"\n                    icon={<IconDelete size=\"sm\" />}\n                    title={hasAccess ? t('Remove Mapping') : undefined}\n                    aria-label={t('Remove Mapping')}\n                    disabled={!hasAccess}\n                  />\n                </Confirm>\n              </Tooltip>\n            )}\n          </Access>\n        </ButtonBar>\n      </ActionsColumn>\n    </Fragment>\n  );\n}\n\nconst NameColumn = styled('div')`\n  display: flex;\n  flex-direction: column;\n  align-items: flex-start;\n  justify-content: center;\n`;\n\nconst SizeColumn = styled('div')`\n  display: flex;\n  justify-content: flex-end;\n  text-align: right;\n  align-items: center;\n`;\n\nconst ActionsColumn = styled(SizeColumn)``;\n\nconst Name = styled('div')`\n  padding-right: ${space(4)};\n  overflow-wrap: break-word;\n  word-break: break-all;\n`;\n\nconst TimeWrapper = styled('div')`\n  display: grid;\n  gap: ${space(0.5)};\n  grid-template-columns: min-content 1fr;\n  font-size: ${p => p.theme.fontSizeMedium};\n  align-items: center;\n  color: ${p => p.theme.subText};\n  margin-top: ${space(1)};\n`;\n\nexport default ProjectProguardRow;\n","import {Fragment} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport styled from '@emotion/styled';\n\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Pagination from 'sentry/components/pagination';\nimport {PanelTable} from 'sentry/components/panels';\nimport SearchBar from 'sentry/components/searchBar';\nimport {t, tct} from 'sentry/locale';\nimport {Organization, Project} from 'sentry/types';\nimport {DebugFile} from 'sentry/types/debugFiles';\nimport routeTitleGen from 'sentry/utils/routeTitle';\nimport AsyncView from 'sentry/views/asyncView';\nimport SettingsPageHeader from 'sentry/views/settings/components/settingsPageHeader';\nimport TextBlock from 'sentry/views/settings/components/text/textBlock';\n\nimport ProjectProguardRow from './projectProguardRow';\n\ntype Props = RouteComponentProps<{projectId: string}, {}> & {\n  organization: Organization;\n  project: Project;\n};\n\ntype State = AsyncView['state'] & {\n  mappings: DebugFile[];\n};\n\nclass ProjectProguard extends AsyncView<Props, State> {\n  getTitle() {\n    const {projectId} = this.props.params;\n\n    return routeTitleGen(t('ProGuard Mappings'), projectId, false);\n  }\n\n  getDefaultState(): State {\n    return {\n      ...super.getDefaultState(),\n      mappings: [],\n    };\n  }\n\n  getEndpoints(): ReturnType<AsyncView['getEndpoints']> {\n    const {organization, params, location} = this.props;\n    const {projectId} = params;\n\n    const endpoints: ReturnType<AsyncView['getEndpoints']> = [\n      [\n        'mappings',\n        `/projects/${organization.slug}/${projectId}/files/dsyms/`,\n        {query: {query: location.query.query, file_formats: 'proguard'}},\n      ],\n    ];\n\n    return endpoints;\n  }\n\n  handleDelete = (id: string) => {\n    const {organization} = this.props;\n    const {projectId} = this.props.params;\n\n    this.setState({\n      loading: true,\n    });\n\n    this.api.request(\n      `/projects/${organization.slug}/${projectId}/files/dsyms/?id=${encodeURIComponent(\n        id\n      )}`,\n      {\n        method: 'DELETE',\n        complete: () => this.fetchData(),\n      }\n    );\n  };\n\n  handleSearch = (query: string) => {\n    const {location, router} = this.props;\n\n    router.push({\n      ...location,\n      query: {...location.query, cursor: undefined, query},\n    });\n  };\n\n  getQuery() {\n    const {query} = this.props.location.query;\n\n    return typeof query === 'string' ? query : undefined;\n  }\n\n  getEmptyMessage() {\n    if (this.getQuery()) {\n      return t('There are no mappings that match your search.');\n    }\n\n    return t('There are no mappings for this project.');\n  }\n\n  renderLoading() {\n    return this.renderBody();\n  }\n\n  renderMappings() {\n    const {mappings} = this.state;\n    const {organization, params} = this.props;\n    const {projectId} = params;\n\n    if (!mappings?.length) {\n      return null;\n    }\n\n    return mappings.map(mapping => {\n      const downloadUrl = `${this.api.baseUrl}/projects/${\n        organization.slug\n      }/${projectId}/files/dsyms/?id=${encodeURIComponent(mapping.id)}`;\n\n      return (\n        <ProjectProguardRow\n          mapping={mapping}\n          downloadUrl={downloadUrl}\n          onDelete={this.handleDelete}\n          downloadRole={organization.debugFilesRole}\n          key={mapping.id}\n          orgSlug={organization.slug}\n        />\n      );\n    });\n  }\n\n  renderBody() {\n    const {loading, mappings, mappingsPageLinks} = this.state;\n\n    return (\n      <Fragment>\n        <SettingsPageHeader\n          title={t('ProGuard Mappings')}\n          action={\n            <SearchBar\n              placeholder={t('Filter mappings')}\n              onSearch={this.handleSearch}\n              query={this.getQuery()}\n              width=\"280px\"\n            />\n          }\n        />\n\n        <TextBlock>\n          {tct(\n            `ProGuard mapping files are used to convert minified classes, methods and field names into a human readable format. To learn more about proguard mapping files, [link: read the docs].`,\n            {\n              link: (\n                <ExternalLink href=\"https://docs.sentry.io/platforms/android/proguard/\" />\n              ),\n            }\n          )}\n        </TextBlock>\n\n        <StyledPanelTable\n          headers={[\n            t('Mapping'),\n            <SizeColumn key=\"size\">{t('File Size')}</SizeColumn>,\n            '',\n          ]}\n          emptyMessage={this.getEmptyMessage()}\n          isEmpty={mappings?.length === 0}\n          isLoading={loading}\n        >\n          {this.renderMappings()}\n        </StyledPanelTable>\n        <Pagination pageLinks={mappingsPageLinks} />\n      </Fragment>\n    );\n  }\n}\n\nconst StyledPanelTable = styled(PanelTable)`\n  grid-template-columns: minmax(220px, 1fr) max-content 120px;\n`;\n\nconst SizeColumn = styled('div')`\n  text-align: right;\n`;\n\nexport default ProjectProguard;\n","import {Component} from 'react';\n\nimport withOrganization from 'sentry/utils/withOrganization';\n\nimport ProjectProguard from './projectProguard';\n\nclass ProjectProguardContainer extends Component<ProjectProguard['props']> {\n  render() {\n    return <ProjectProguard {...this.props} />;\n  }\n}\n\nexport default withOrganization(ProjectProguardContainer);\n"],"names":["withOrganizationRole","withOrganization","_ref","role","organization","children","user","ConfigStore","get","hasRole","useMemo","isActiveSuperuser","Array","isArray","orgRoleList","roleIds","map","r","id","includes","orgRole","requiredIndex","indexOf","checkUserRole","isRenderFunc","SearchBar","query","queryProp","defaultQuery","onChange","onSearch","width","size","className","trailing","inputProps","inputRef","useRef","setQuery","useState","useEffect","onQueryChange","useCallback","e","value","target","onSubmit","preventDefault","current","blur","clearSearch","_jsx","FormWrap","_jsxs","InputGroup","LeadingItems","disablePointerEvents","IconSearch","color","StyledInput","ref","type","name","autoComplete","TrailingItems","SearchBarTrailingButton","borderless","onClick","icon","IconClose","t","displayName","_styled","styles","Input","p","Button","theme","subText","space","routeName","orgSlug","projectSlug","arguments","length","undefined","tmplBase","tmpl","AsyncView","AsyncComponent","getTitle","render","SentryDocumentTitle","title","this","renderComponent","ProjectProguardRow","mapping","onDelete","downloadUrl","downloadRole","debugId","uuid","dateCreated","handleDeleteClick","Fragment","NameColumn","Name","TimeWrapper","IconClock","TimeSince","date","SizeColumn","FileSize","bytes","ActionsColumn","ButtonBar","gap","Role","_ref2","Tooltip","tct","orHigher","settingsLink","Link","to","disabled","isHoverable","IconDownload","href","Access","access","_ref3","hasAccess","Confirm","message","onConfirm","IconDelete","fontSizeMedium","ProjectProguard","constructor","_defineProperty","props","projectId","params","setState","loading","api","request","slug","encodeURIComponent","method","complete","fetchData","location","router","push","cursor","routeTitleGen","getDefaultState","super","mappings","getEndpoints","file_formats","getQuery","getEmptyMessage","renderLoading","renderBody","renderMappings","state","baseUrl","handleDelete","debugFilesRole","mappingsPageLinks","SettingsPageHeader","action","placeholder","handleSearch","TextBlock","link","ExternalLink","StyledPanelTable","headers","emptyMessage","isEmpty","isLoading","Pagination","pageLinks","PanelTable","ProjectProguardContainer","Component"],"sourceRoot":""}