{"version":3,"file":"chunks/app_views_settings_settingsIndex_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/views/settings/settingsIndex.tsx"],"sourcesContent":["import {useEffect} from 'react';\nimport {RouteComponentProps} from 'react-router';\nimport {css, Theme} from '@emotion/react';\nimport styled from '@emotion/styled';\n\nimport {fetchOrganizationDetails} from 'sentry/actionCreators/organizations';\nimport DemoModeGate from 'sentry/components/acl/demoModeGate';\nimport OrganizationAvatar from 'sentry/components/avatar/organizationAvatar';\nimport UserAvatar from 'sentry/components/avatar/userAvatar';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport Link, {LinkProps} from 'sentry/components/links/link';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport SentryDocumentTitle from 'sentry/components/sentryDocumentTitle';\nimport {IconDocs, IconLock, IconStack, IconSupport} from 'sentry/icons';\nimport {t} from 'sentry/locale';\nimport ConfigStore from 'sentry/stores/configStore';\nimport {space} from 'sentry/styles/space';\nimport {Organization} from 'sentry/types';\nimport useApi from 'sentry/utils/useApi';\nimport withLatestContext from 'sentry/utils/withLatestContext';\nimport SettingsLayout from 'sentry/views/settings/components/settingsLayout';\n\nconst LINKS = {\n  DOCUMENTATION: 'https://docs.sentry.io/',\n  DOCUMENTATION_PLATFORMS: 'https://docs.sentry.io/platforms/',\n  DOCUMENTATION_QUICKSTART: 'https://docs.sentry.io/platform-redirect/?next=/',\n  DOCUMENTATION_CLI: 'https://docs.sentry.io/product/cli/',\n  DOCUMENTATION_API: 'https://docs.sentry.io/api/',\n  API: '/settings/account/api/',\n  MANAGE: '/manage/',\n  FORUM: 'https://forum.sentry.io/',\n  GITHUB_ISSUES: 'https://github.com/getsentry/sentry/issues',\n  SERVICE_STATUS: 'https://status.sentry.io/',\n};\n\nconst HOME_ICON_SIZE = 56;\n\ninterface SettingsIndexProps extends RouteComponentProps<{}, {}> {\n  organization: Organization;\n}\n\nfunction SettingsIndex({organization, ...props}: SettingsIndexProps) {\n  const api = useApi();\n\n  useEffect(() => {\n    // if there is no org in context, SidebarDropdown uses an org from `withLatestContext`\n    // (which queries the org index endpoint instead of org details)\n    // and does not have `access` info\n    if (organization && typeof organization.access === 'undefined') {\n      fetchOrganizationDetails(api, organization.slug, {\n        setActive: true,\n        loadProjects: true,\n      });\n    }\n  }, [api, organization]);\n\n  const user = ConfigStore.get('user');\n  const isSelfHosted = ConfigStore.get('isSelfHosted');\n\n  const organizationSettingsUrl =\n    (organization && `/settings/${organization.slug}/`) || '';\n\n  const supportLinkProps = {\n    isSelfHosted,\n    organizationSettingsUrl,\n  };\n\n  const hasOrgAuthTokens = organization?.features.includes('org-auth-tokens');\n\n  const myAccount = (\n    <GridPanel>\n      <HomePanelHeader>\n        <HomeLinkIcon to=\"/settings/account/\">\n          <UserAvatar user={user} size={HOME_ICON_SIZE} />\n          {t('My Account')}\n        </HomeLinkIcon>\n      </HomePanelHeader>\n\n      <HomePanelBody>\n        <h3>{t('Quick links')}:</h3>\n        <ul>\n          <li>\n            <HomeLink to=\"/settings/account/security/\">\n              {t('Change my password')}\n            </HomeLink>\n          </li>\n          <li>\n            <HomeLink to=\"/settings/account/notifications/\">\n              {t('Notification Preferences')}\n            </HomeLink>\n          </li>\n          <li>\n            <HomeLink to=\"/settings/account/\">{t('Change my avatar')}</HomeLink>\n          </li>\n        </ul>\n      </HomePanelBody>\n    </GridPanel>\n  );\n\n  const orgSettings = (\n    <GridPanel>\n      {!organization && <LoadingIndicator overlay hideSpinner />}\n      <HomePanelHeader>\n        <HomeLinkIcon to={organizationSettingsUrl}>\n          {organization ? (\n            <OrganizationAvatar organization={organization} size={HOME_ICON_SIZE} />\n          ) : (\n            <HomeIconContainer color=\"green300\">\n              <IconStack size=\"lg\" />\n            </HomeIconContainer>\n          )}\n          <OrganizationName>\n            {organization ? organization.slug : t('No Organization')}\n          </OrganizationName>\n        </HomeLinkIcon>\n      </HomePanelHeader>\n\n      <HomePanelBody>\n        <h3>{t('Quick links')}:</h3>\n        <ul>\n          <li>\n            <HomeLink to={`${organizationSettingsUrl}projects/`}>\n              {t('Projects')}\n            </HomeLink>\n          </li>\n          <li>\n            <HomeLink to={`${organizationSettingsUrl}teams/`}>{t('Teams')}</HomeLink>\n          </li>\n          <li>\n            <HomeLink to={`${organizationSettingsUrl}members/`}>{t('Members')}</HomeLink>\n          </li>\n        </ul>\n      </HomePanelBody>\n    </GridPanel>\n  );\n\n  const documentation = (\n    <GridPanel>\n      <HomePanelHeader>\n        <ExternalHomeLinkIcon href={LINKS.DOCUMENTATION}>\n          <HomeIconContainer color=\"pink300\">\n            <IconDocs size=\"lg\" />\n          </HomeIconContainer>\n          {t('Documentation')}\n        </ExternalHomeLinkIcon>\n      </HomePanelHeader>\n\n      <HomePanelBody>\n        <h3>{t('Quick links')}:</h3>\n        <ul>\n          <li>\n            <ExternalHomeLink href={LINKS.DOCUMENTATION_QUICKSTART}>\n              {t('Quickstart Guide')}\n            </ExternalHomeLink>\n          </li>\n          <li>\n            <ExternalHomeLink href={LINKS.DOCUMENTATION_PLATFORMS}>\n              {t('Platforms & Frameworks')}\n            </ExternalHomeLink>\n          </li>\n          <li>\n            <ExternalHomeLink href={LINKS.DOCUMENTATION_CLI}>\n              {t('Sentry CLI')}\n            </ExternalHomeLink>\n          </li>\n        </ul>\n      </HomePanelBody>\n    </GridPanel>\n  );\n\n  const support = (\n    <GridPanel>\n      <HomePanelHeader>\n        <SupportLink icon {...supportLinkProps}>\n          <HomeIconContainer color=\"activeText\">\n            <IconSupport size=\"lg\" />\n          </HomeIconContainer>\n          {t('Support')}\n        </SupportLink>\n      </HomePanelHeader>\n\n      <HomePanelBody>\n        <h3>{t('Quick links')}:</h3>\n        <ul>\n          <li>\n            <SupportLink {...supportLinkProps}>\n              {isSelfHosted ? t('Community Forums') : t('Contact Support')}\n            </SupportLink>\n          </li>\n          <li>\n            <ExternalHomeLink href={LINKS.GITHUB_ISSUES}>\n              {t('Sentry on GitHub')}\n            </ExternalHomeLink>\n          </li>\n          <li>\n            <ExternalHomeLink href={LINKS.SERVICE_STATUS}>\n              {t('Service Status')}\n            </ExternalHomeLink>\n          </li>\n        </ul>\n      </HomePanelBody>\n    </GridPanel>\n  );\n\n  const apiKeys = (\n    <GridPanel>\n      <HomePanelHeader>\n        <HomeLinkIcon to={LINKS.API}>\n          <HomeIconContainer>\n            <IconLock size=\"lg\" isSolid />\n          </HomeIconContainer>\n          {t('API Keys')}\n        </HomeLinkIcon>\n      </HomePanelHeader>\n\n      <HomePanelBody>\n        <h3>{t('Quick links')}:</h3>\n        <ul>\n          {hasOrgAuthTokens && (\n            <li>\n              <HomeLink to={`${organizationSettingsUrl}auth-tokens/`}>\n                {t('Organization Auth Tokens')}\n              </HomeLink>\n            </li>\n          )}\n          <li>\n            <HomeLink to={LINKS.API}>{t('User Auth Tokens')}</HomeLink>\n          </li>\n          <li>\n            <HomeLink to={`${organizationSettingsUrl}developer-settings/`}>\n              {t('Custom Integrations')}\n            </HomeLink>\n          </li>\n          <li>\n            <ExternalHomeLink href={LINKS.DOCUMENTATION_API}>\n              {t('Documentation')}\n            </ExternalHomeLink>\n          </li>\n        </ul>\n      </HomePanelBody>\n    </GridPanel>\n  );\n\n  return (\n    <SentryDocumentTitle\n      title={organization ? `${organization.slug} Settings` : 'Settings'}\n    >\n      <SettingsLayout {...props}>\n        <GridLayout>\n          <DemoModeGate>{myAccount}</DemoModeGate>\n          {orgSettings}\n          {documentation}\n          {support}\n          <DemoModeGate>{apiKeys} </DemoModeGate>\n        </GridLayout>\n      </SettingsLayout>\n    </SentryDocumentTitle>\n  );\n}\n\nexport default withLatestContext(SettingsIndex);\n\nconst GridLayout = styled('div')`\n  display: grid;\n  grid-template-columns: 1fr 1fr 1fr;\n  gap: ${space(2)};\n`;\n\nconst GridPanel = styled(Panel)`\n  margin-bottom: 0;\n`;\n\nconst HomePanelHeader = styled(PanelHeader)`\n  background: ${p => p.theme.background};\n  font-size: ${p => p.theme.fontSizeExtraLarge};\n  align-items: center;\n  text-transform: unset;\n  padding: ${space(4)};\n`;\n\nconst HomePanelBody = styled(PanelBody)`\n  padding: 30px;\n\n  h3 {\n    font-size: 14px;\n  }\n\n  ul {\n    margin: 0;\n    li {\n      line-height: 1.6;\n      /* Bullet color */\n      color: ${p => p.theme.gray200};\n    }\n  }\n`;\n\nconst HomeIconContainer = styled('div')<{color?: string}>`\n  background: ${p => p.theme[p.color || 'gray300']};\n  color: ${p => p.theme.white};\n  width: ${HOME_ICON_SIZE}px;\n  height: ${HOME_ICON_SIZE}px;\n  border-radius: ${HOME_ICON_SIZE}px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n`;\n\nconst linkCss = ({theme}: {theme: Theme}) => css`\n  color: ${theme.activeText};\n\n  &:hover {\n    color: ${theme.activeText};\n  }\n`;\n\nconst linkIconCss = css`\n  overflow: hidden;\n  width: 100%;\n  display: grid;\n  grid-template-rows: max-content max-content;\n  gap: ${space(1.5)};\n  align-items: center;\n  justify-items: center;\n  justify-content: center;\n`;\n\nconst HomeLink = styled(Link)`\n  ${linkCss}\n`;\n\nconst ExternalHomeLink = styled(ExternalLink)`\n  ${linkCss}\n`;\n\nconst HomeLinkIcon = styled(HomeLink)`\n  ${linkIconCss}\n`;\n\nconst ExternalHomeLinkIcon = styled(ExternalLink)`\n  ${linkIconCss}\n`;\n\ninterface SupportLinkProps extends Omit<LinkProps, 'ref' | 'to'> {\n  isSelfHosted: boolean;\n  organizationSettingsUrl: string;\n  icon?: boolean;\n}\n\nfunction SupportLink({\n  isSelfHosted,\n  icon,\n  organizationSettingsUrl,\n  ...props\n}: SupportLinkProps) {\n  if (isSelfHosted) {\n    const SelfHostedLink = icon ? ExternalHomeLinkIcon : ExternalHomeLink;\n    return <SelfHostedLink href={LINKS.FORUM} {...props} />;\n  }\n\n  const SelfHostedLink = icon ? HomeLinkIcon : HomeLink;\n  return <SelfHostedLink to={`${organizationSettingsUrl}support`} {...props} />;\n}\n\nconst OrganizationName = styled('div')`\n  line-height: 1.1em;\n\n  ${p => p.theme.overflowEllipsis};\n`;\n"],"names":["LINKS","DOCUMENTATION","DOCUMENTATION_PLATFORMS","DOCUMENTATION_QUICKSTART","DOCUMENTATION_CLI","DOCUMENTATION_API","API","MANAGE","FORUM","GITHUB_ISSUES","SERVICE_STATUS","HOME_ICON_SIZE","SettingsIndex","_ref","organization","props","api","useApi","useEffect","access","fetchOrganizationDetails","slug","setActive","loadProjects","user","ConfigStore","get","isSelfHosted","organizationSettingsUrl","supportLinkProps","hasOrgAuthTokens","features","includes","myAccount","_jsxs","GridPanel","children","_jsx","HomePanelHeader","HomeLinkIcon","to","UserAvatar","size","t","HomePanelBody","HomeLink","orgSettings","LoadingIndicator","overlay","hideSpinner","OrganizationAvatar","HomeIconContainer","color","IconStack","OrganizationName","documentation","ExternalHomeLinkIcon","href","IconDocs","ExternalHomeLink","support","SupportLink","icon","IconSupport","apiKeys","IconLock","isSolid","SentryDocumentTitle","title","SettingsLayout","GridLayout","DemoModeGate","displayName","withLatestContext","_styled","target","space","Panel","name","styles","PanelHeader","p","theme","background","fontSizeExtraLarge","PanelBody","gray200","white","linkCss","_ref2","css","activeText","linkIconCss","Link","ExternalLink","_ref3","SelfHostedLink","overflowEllipsis"],"sourceRoot":""}