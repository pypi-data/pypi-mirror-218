{"version":3,"file":"chunks/app_components_avatarChooser_tsx-app_components_forms_jsonForm_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"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","sources":["webpack:///./app/components/well.tsx","webpack:///./app/components/avatarUploader.tsx","webpack:///./app/components/avatarChooser.tsx","webpack:///./app/components/forms/formPanel.tsx","webpack:///./app/components/forms/jsonForm.tsx"],"sourcesContent":["import styled from '@emotion/styled';\n\ninterface WellProps extends React.HTMLAttributes<HTMLDivElement> {\n  children: React.ReactNode;\n  centered?: boolean;\n  hasImage?: boolean;\n  theme?: any;\n}\n\nconst Well = styled('div')<WellProps>`\n  border: 1px solid ${p => p.theme.border};\n  box-shadow: none;\n  background: ${p => p.theme.backgroundSecondary};\n  padding: ${p => (p.hasImage ? '80px 30px' : '15px 20px')};\n  margin-bottom: 20px;\n  border-radius: 3px;\n  ${p => p.centered && 'text-align: center'};\n`;\n\nexport default Well;\n","import {Component, createRef, Fragment} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage} from 'sentry/actionCreators/indicator';\nimport Well from 'sentry/components/well';\nimport {AVATAR_URL_MAP} from 'sentry/constants';\nimport {t, tct} from 'sentry/locale';\nimport {AvatarUser} from 'sentry/types';\n\nconst ALLOWED_MIMETYPES = 'image/gif,image/jpeg,image/png';\n\n// These values must be synced with the avatar endpoint in backend.\nconst MIN_DIMENSION = 256;\nconst MAX_DIMENSION = 1024;\n\nexport function getDiffNW(yDiff: number, xDiff: number) {\n  return (yDiff - yDiff * 2 + (xDiff - xDiff * 2)) / 2;\n}\n\nexport function getDiffNE(yDiff: number, xDiff: number) {\n  return (yDiff - yDiff * 2 + xDiff) / 2;\n}\n\nexport function getDiffSW(yDiff: number, xDiff: number) {\n  return (yDiff + (xDiff - xDiff * 2)) / 2;\n}\n\nexport function getDiffSE(yDiff: number, xDiff: number) {\n  return (yDiff + xDiff) / 2;\n}\n\nconst resizerPositions = {\n  nw: ['top', 'left'],\n  ne: ['top', 'right'],\n  se: ['bottom', 'right'],\n  sw: ['bottom', 'left'],\n};\n\ntype Position = keyof typeof resizerPositions;\n\ntype Model = Pick<AvatarUser, 'avatar'>;\n\ntype Props = {\n  model: Model;\n  type:\n    | 'user'\n    | 'team'\n    | 'organization'\n    | 'project'\n    | 'sentryAppColor'\n    | 'sentryAppSimple'\n    | 'docIntegration';\n  updateDataUrlState: (opts: {dataUrl?: string; savedDataUrl?: string | null}) => void;\n  savedDataUrl?: string;\n};\n\ntype State = {\n  file: File | null;\n  mousePosition: {pageX: number; pageY: number};\n  objectURL: string | null;\n  resizeDimensions: {left: number; size: number; top: number};\n  resizeDirection: Position | null;\n};\n\nclass AvatarUploader extends Component<Props, State> {\n  state: State = {\n    file: null,\n    objectURL: null,\n    mousePosition: {pageX: 0, pageY: 0},\n    resizeDimensions: {top: 0, left: 0, size: 0},\n    resizeDirection: null,\n  };\n\n  componentWillUnmount() {\n    this.revokeObjectUrl();\n  }\n\n  file = createRef<HTMLInputElement>();\n  canvas = createRef<HTMLCanvasElement>();\n  image = createRef<HTMLImageElement>();\n  cropContainer = createRef<HTMLDivElement>();\n\n  onSelectFile = (ev: React.ChangeEvent<HTMLInputElement>) => {\n    const file = ev.target.files?.[0];\n\n    // No file selected (e.g. user clicked \"cancel\")\n    if (!file) {\n      return;\n    }\n\n    if (!/^image\\//.test(file.type)) {\n      addErrorMessage(t('That is not a supported file type.'));\n      return;\n    }\n\n    this.revokeObjectUrl();\n\n    const {updateDataUrlState} = this.props;\n    const objectURL = window.URL.createObjectURL(file);\n    this.setState({file, objectURL}, () => updateDataUrlState({savedDataUrl: null}));\n  };\n\n  revokeObjectUrl = () =>\n    this.state.objectURL && window.URL.revokeObjectURL(this.state.objectURL);\n\n  onImageLoad = () => {\n    const error = this.validateImage();\n    if (error) {\n      this.revokeObjectUrl();\n      this.setState({objectURL: null});\n      addErrorMessage(error);\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const dimension = Math.min(image.clientHeight, image.clientWidth);\n    const state = {resizeDimensions: {size: dimension, top: 0, left: 0}};\n\n    this.setState(state, this.drawToCanvas);\n  };\n\n  updateDimensions = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition, resizeDimensions} = this.state;\n\n    let pageY = ev.pageY;\n    let pageX = ev.pageX;\n    let top = resizeDimensions.top + (pageY - mousePosition.pageY);\n    let left = resizeDimensions.left + (pageX - mousePosition.pageX);\n\n    if (top < 0) {\n      top = 0;\n      pageY = mousePosition.pageY;\n    } else if (top + resizeDimensions.size > cropContainer.clientHeight) {\n      top = cropContainer.clientHeight - resizeDimensions.size;\n      pageY = mousePosition.pageY;\n    }\n\n    if (left < 0) {\n      left = 0;\n      pageX = mousePosition.pageX;\n    } else if (left + resizeDimensions.size > cropContainer.clientWidth) {\n      left = cropContainer.clientWidth - resizeDimensions.size;\n      pageX = mousePosition.pageX;\n    }\n\n    this.setState(state => ({\n      resizeDimensions: {...state.resizeDimensions, top, left},\n      mousePosition: {pageX, pageY},\n    }));\n  };\n\n  onMouseDown = (ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.preventDefault();\n    this.setState({mousePosition: {pageY: ev.pageY, pageX: ev.pageX}});\n\n    document.addEventListener('mousemove', this.updateDimensions);\n    document.addEventListener('mouseup', this.onMouseUp);\n  };\n\n  onMouseUp = (ev: MouseEvent) => {\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateDimensions);\n    document.removeEventListener('mouseup', this.onMouseUp);\n    this.drawToCanvas();\n  };\n\n  startResize = (direction: Position, ev: React.MouseEvent<HTMLDivElement>) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.addEventListener('mousemove', this.updateSize);\n    document.addEventListener('mouseup', this.stopResize);\n\n    this.setState({\n      resizeDirection: direction,\n      mousePosition: {pageY: ev.pageY, pageX: ev.pageX},\n    });\n  };\n\n  stopResize = (ev: MouseEvent) => {\n    ev.stopPropagation();\n    ev.preventDefault();\n    document.removeEventListener('mousemove', this.updateSize);\n    document.removeEventListener('mouseup', this.stopResize);\n\n    this.setState({resizeDirection: null});\n    this.drawToCanvas();\n  };\n\n  updateSize = (ev: MouseEvent) => {\n    const cropContainer = this.cropContainer.current;\n    if (!cropContainer) {\n      return;\n    }\n\n    const {mousePosition} = this.state;\n\n    const yDiff = ev.pageY - mousePosition.pageY;\n    const xDiff = ev.pageX - mousePosition.pageX;\n\n    this.setState({\n      resizeDimensions: this.getNewDimensions(cropContainer, yDiff, xDiff),\n      mousePosition: {pageX: ev.pageX, pageY: ev.pageY},\n    });\n  };\n\n  getNewDimensions = (container: HTMLDivElement, yDiff: number, xDiff: number) => {\n    const {resizeDimensions: oldDimensions, resizeDirection} = this.state;\n\n    // Normalize diff across dimensions so that negative diffs are always making\n    // the cropper smaller and positive ones are making the cropper larger\n    const helpers = {\n      getDiffNE,\n      getDiffNW,\n      getDiffSE,\n      getDiffSW,\n    } as const;\n\n    const diff = helpers['getDiff' + resizeDirection!.toUpperCase()](yDiff, xDiff);\n\n    let height = container.clientHeight - oldDimensions.top;\n    let width = container.clientWidth - oldDimensions.left;\n\n    // Depending on the direction, we update different dimensions:\n    // nw: size, top, left\n    // ne: size, top\n    // sw: size, left\n    // se: size\n    const editingTop = resizeDirection === 'nw' || resizeDirection === 'ne';\n    const editingLeft = resizeDirection === 'nw' || resizeDirection === 'sw';\n\n    const newDimensions = {\n      top: oldDimensions.top,\n      left: oldDimensions.left,\n      size: oldDimensions.size + diff,\n    };\n\n    if (editingTop) {\n      newDimensions.top = oldDimensions.top - diff;\n      height = container.clientHeight - newDimensions.top;\n    }\n\n    if (editingLeft) {\n      newDimensions.left = oldDimensions.left - diff;\n      width = container.clientWidth - newDimensions.left;\n    }\n\n    if (newDimensions.top < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.top;\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left - newDimensions.top;\n      }\n      newDimensions.top = 0;\n    }\n\n    if (newDimensions.left < 0) {\n      newDimensions.size = newDimensions.size + newDimensions.left;\n      if (editingTop) {\n        newDimensions.top = newDimensions.top - newDimensions.left;\n      }\n      newDimensions.left = 0;\n    }\n\n    const maxSize = Math.min(width, height);\n    if (newDimensions.size > maxSize) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - maxSize;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - maxSize;\n      }\n      newDimensions.size = maxSize;\n    } else if (newDimensions.size < MIN_DIMENSION) {\n      if (editingTop) {\n        newDimensions.top = newDimensions.top + newDimensions.size - MIN_DIMENSION;\n      }\n      if (editingLeft) {\n        newDimensions.left = newDimensions.left + newDimensions.size - MIN_DIMENSION;\n      }\n      newDimensions.size = MIN_DIMENSION;\n    }\n\n    return {...oldDimensions, ...newDimensions};\n  };\n\n  validateImage() {\n    const img = this.image.current;\n\n    if (!img) {\n      return null;\n    }\n\n    if (img.naturalWidth < MIN_DIMENSION || img.naturalHeight < MIN_DIMENSION) {\n      return tct('Please upload an image larger than [size]px by [size]px.', {\n        size: MIN_DIMENSION - 1,\n      });\n    }\n\n    if (img.naturalWidth > MAX_DIMENSION || img.naturalHeight > MAX_DIMENSION) {\n      return tct('Please upload an image smaller than [size]px by [size]px.', {\n        size: MAX_DIMENSION,\n      });\n    }\n\n    return null;\n  }\n\n  drawToCanvas() {\n    const canvas = this.canvas.current;\n    if (!canvas) {\n      return;\n    }\n\n    const image = this.image.current;\n    if (!image) {\n      return;\n    }\n\n    const {left, top, size} = this.state.resizeDimensions;\n    // Calculate difference between natural dimensions and rendered dimensions\n    const ratio =\n      (image.naturalHeight / image.clientHeight +\n        image.naturalWidth / image.clientWidth) /\n      2;\n    canvas.width = size * ratio;\n    canvas.height = size * ratio;\n\n    canvas\n      .getContext('2d')!\n      .drawImage(\n        image,\n        left * ratio,\n        top * ratio,\n        size * ratio,\n        size * ratio,\n        0,\n        0,\n        size * ratio,\n        size * ratio\n      );\n\n    this.props.updateDataUrlState({dataUrl: canvas.toDataURL()});\n  }\n\n  get imageSrc() {\n    const {savedDataUrl, model, type} = this.props;\n    const uuid = model.avatar?.avatarUuid;\n    const photoUrl = uuid && `/${AVATAR_URL_MAP[type] || 'avatar'}/${uuid}/`;\n\n    return savedDataUrl || this.state.objectURL || photoUrl;\n  }\n\n  uploadClick = (ev: React.MouseEvent<HTMLAnchorElement>) => {\n    ev.preventDefault();\n    this.file.current && this.file.current.click();\n  };\n\n  renderImageCrop() {\n    const src = this.imageSrc;\n    if (!src) {\n      return null;\n    }\n\n    const {resizeDimensions, resizeDirection} = this.state;\n    const style = {\n      top: resizeDimensions.top,\n      left: resizeDimensions.left,\n      width: resizeDimensions.size,\n      height: resizeDimensions.size,\n    };\n\n    return (\n      <ImageCropper resizeDirection={resizeDirection}>\n        <CropContainer ref={this.cropContainer}>\n          <img\n            ref={this.image}\n            src={src}\n            onLoad={this.onImageLoad}\n            onDragStart={e => e.preventDefault()}\n          />\n          <Cropper style={style} onMouseDown={this.onMouseDown}>\n            {Object.keys(resizerPositions).map(pos => (\n              <Resizer\n                key={pos}\n                position={pos as Position}\n                onMouseDown={this.startResize.bind(this, pos)}\n              />\n            ))}\n          </Cropper>\n        </CropContainer>\n      </ImageCropper>\n    );\n  }\n\n  render() {\n    const src = this.imageSrc;\n\n    const upload = <a onClick={this.uploadClick} />;\n    const uploader = (\n      <Well hasImage centered>\n        <p>{tct('[upload:Upload an image] to get started.', {upload})}</p>\n      </Well>\n    );\n\n    return (\n      <Fragment>\n        {!src && uploader}\n        {src && <HiddenCanvas ref={this.canvas} />}\n        {this.renderImageCrop()}\n        <div className=\"form-group\">\n          {src && <a onClick={this.uploadClick}>{t('Change Photo')}</a>}\n          <UploadInput\n            ref={this.file}\n            type=\"file\"\n            accept={ALLOWED_MIMETYPES}\n            onChange={this.onSelectFile}\n          />\n        </div>\n      </Fragment>\n    );\n  }\n}\n\nexport {AvatarUploader};\n\nconst UploadInput = styled('input')`\n  position: absolute;\n  opacity: 0;\n`;\n\nconst ImageCropper = styled('div')<{resizeDirection: Position | null}>`\n  cursor: ${p => (p.resizeDirection ? `${p.resizeDirection}-resize` : 'default')};\n  text-align: center;\n  margin-bottom: 20px;\n  background-size: 20px 20px;\n  background-position: 0 0, 0 10px, 10px -10px, -10px 0px;\n  background-color: ${p => p.theme.background};\n  background-image: linear-gradient(\n      45deg,\n      ${p => p.theme.backgroundSecondary} 25%,\n      rgba(0, 0, 0, 0) 25%\n    ),\n    linear-gradient(-45deg, ${p => p.theme.backgroundSecondary} 25%, rgba(0, 0, 0, 0) 25%),\n    linear-gradient(45deg, rgba(0, 0, 0, 0) 75%, ${p => p.theme.backgroundSecondary} 75%),\n    linear-gradient(-45deg, rgba(0, 0, 0, 0) 75%, ${p => p.theme.backgroundSecondary} 75%);\n`;\n\nconst CropContainer = styled('div')`\n  display: inline-block;\n  position: relative;\n  max-width: 100%;\n`;\n\nconst Cropper = styled('div')`\n  position: absolute;\n  border: 2px dashed ${p => p.theme.gray300};\n`;\n\nconst Resizer = styled('div')<{position: Position}>`\n  border-radius: 5px;\n  width: 10px;\n  height: 10px;\n  position: absolute;\n  background-color: ${p => p.theme.gray300};\n  cursor: ${p => `${p.position}-resize`};\n  ${p => resizerPositions[p.position].map(pos => `${pos}: -5px;`)}\n`;\n\nconst HiddenCanvas = styled('canvas')`\n  display: none;\n`;\n","import {Component} from 'react';\nimport styled from '@emotion/styled';\n\nimport {addErrorMessage, addSuccessMessage} from 'sentry/actionCreators/indicator';\nimport {Client} from 'sentry/api';\nimport Avatar from 'sentry/components/avatar';\nimport {AvatarUploader} from 'sentry/components/avatarUploader';\nimport {Button} from 'sentry/components/button';\nimport RadioGroup from 'sentry/components/forms/controls/radioGroup';\nimport ExternalLink from 'sentry/components/links/externalLink';\nimport LoadingError from 'sentry/components/loadingError';\nimport LoadingIndicator from 'sentry/components/loadingIndicator';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport Well from 'sentry/components/well';\nimport {t} from 'sentry/locale';\nimport {space} from 'sentry/styles/space';\nimport {AvatarUser, Organization, SentryApp, Team} from 'sentry/types';\nimport withApi from 'sentry/utils/withApi';\n\nexport type Model = Pick<AvatarUser, 'avatar'>;\ntype AvatarType = Required<Model>['avatar']['avatarType'];\ntype AvatarChooserType =\n  | 'user'\n  | 'team'\n  | 'organization'\n  | 'sentryAppColor'\n  | 'sentryAppSimple'\n  | 'docIntegration';\ntype DefaultChoice = {\n  allowDefault?: boolean;\n  choiceText?: string;\n  preview?: React.ReactNode;\n};\n\ntype DefaultProps = {\n  onSave: (model: Model) => void;\n  allowGravatar?: boolean;\n  allowLetter?: boolean;\n  allowUpload?: boolean;\n  defaultChoice?: DefaultChoice;\n  type?: AvatarChooserType;\n};\n\ntype Props = {\n  api: Client;\n  endpoint: string;\n  model: Model;\n  disabled?: boolean;\n  help?: React.ReactNode;\n  isUser?: boolean;\n  savedDataUrl?: string;\n  title?: string;\n} & DefaultProps;\n\ntype State = {\n  hasError: boolean;\n  model: Model;\n  dataUrl?: string | null;\n  savedDataUrl?: string | null;\n};\n\nclass AvatarChooser extends Component<Props, State> {\n  static defaultProps: DefaultProps = {\n    allowGravatar: true,\n    allowLetter: true,\n    allowUpload: true,\n    type: 'user',\n    onSave: () => {},\n    defaultChoice: {\n      allowDefault: false,\n    },\n  };\n\n  state: State = {\n    model: this.props.model,\n    savedDataUrl: null,\n    dataUrl: null,\n    hasError: false,\n  };\n\n  componentDidUpdate(prevProps: Props) {\n    const {model} = this.props;\n\n    // Update local state if defined in props\n    if (model !== undefined && model !== prevProps.model) {\n      this.setState({model});\n    }\n  }\n\n  getModelFromResponse(resp: any): Model {\n    const {type} = this.props;\n    const isSentryApp = type?.startsWith('sentryApp');\n    // SentryApp endpoint returns all avatars, we need to return only the edited one\n    if (!isSentryApp) {\n      return resp;\n    }\n    const isColor = type === 'sentryAppColor';\n    return {avatar: resp?.avatars?.find(({color}) => color === isColor) ?? undefined};\n  }\n\n  handleError(msg: string) {\n    addErrorMessage(msg);\n  }\n\n  handleSuccess(model: Model) {\n    const {onSave} = this.props;\n    this.setState({model});\n    onSave(model);\n    addSuccessMessage(t('Successfully saved avatar preferences'));\n  }\n\n  handleSaveSettings = (ev: React.MouseEvent) => {\n    const {endpoint, api, type} = this.props;\n    const {model, dataUrl} = this.state;\n\n    ev.preventDefault();\n    const avatarType = model?.avatar?.avatarType;\n    const avatarPhoto = dataUrl?.split(',')[1];\n\n    const data: {\n      avatar_photo?: string;\n      avatar_type?: string;\n      color?: boolean;\n    } = {avatar_type: avatarType};\n\n    // If an image has been uploaded, then another option is selected, we should not submit the uploaded image\n    if (avatarType === 'upload') {\n      data.avatar_photo = avatarPhoto;\n    }\n\n    if (type?.startsWith('sentryApp')) {\n      data.color = type === 'sentryAppColor';\n    }\n\n    api.request(endpoint, {\n      method: 'PUT',\n      data,\n      success: resp => {\n        this.setState({savedDataUrl: this.state.dataUrl});\n        this.handleSuccess(this.getModelFromResponse(resp));\n      },\n      error: resp => {\n        const avatarPhotoErrors = resp?.responseJSON?.avatar_photo || [];\n        avatarPhotoErrors.length\n          ? avatarPhotoErrors.map(this.handleError)\n          : this.handleError.bind(this, t('There was an error saving your preferences.'));\n      },\n    });\n  };\n\n  handleChange = (id: AvatarType) =>\n    this.setState(state => ({\n      model: {\n        ...state.model,\n        avatar: {avatarUuid: state.model.avatar?.avatarUuid ?? '', avatarType: id},\n      },\n    }));\n\n  render() {\n    const {\n      allowGravatar,\n      allowUpload,\n      allowLetter,\n      savedDataUrl,\n      type,\n      isUser,\n      disabled,\n      title,\n      help,\n      defaultChoice,\n    } = this.props;\n    const {hasError, model, dataUrl} = this.state;\n\n    if (hasError) {\n      return <LoadingError />;\n    }\n    if (!model) {\n      return <LoadingIndicator />;\n    }\n    const {allowDefault, preview, choiceText: defaultChoiceText} = defaultChoice || {};\n\n    const avatarType = model.avatar?.avatarType ?? 'letter_avatar';\n    const isLetter = avatarType === 'letter_avatar';\n    const isDefault = Boolean(preview && avatarType === 'default');\n\n    const isTeam = type === 'team';\n    const isOrganization = type === 'organization';\n    const isSentryApp = type?.startsWith('sentryApp');\n\n    const choices: [AvatarType, string][] = [];\n\n    if (allowDefault && preview) {\n      choices.push(['default', defaultChoiceText ?? t('Use default avatar')]);\n    }\n    if (allowLetter) {\n      choices.push(['letter_avatar', t('Use initials')]);\n    }\n    if (allowUpload) {\n      choices.push(['upload', t('Upload an image')]);\n    }\n    if (allowGravatar) {\n      choices.push(['gravatar', t('Use Gravatar')]);\n    }\n    return (\n      <Panel>\n        <PanelHeader>{title || t('Avatar')}</PanelHeader>\n        <PanelBody>\n          <AvatarForm>\n            <AvatarGroup inline={isLetter || isDefault}>\n              <RadioGroup\n                style={{flex: 1}}\n                choices={choices}\n                value={avatarType}\n                label={t('Avatar Type')}\n                onChange={this.handleChange}\n                disabled={disabled}\n              />\n              {isLetter && (\n                <Avatar\n                  gravatar={false}\n                  style={{width: 90, height: 90}}\n                  user={isUser ? (model as AvatarUser) : undefined}\n                  organization={isOrganization ? (model as Organization) : undefined}\n                  team={isTeam ? (model as Team) : undefined}\n                  sentryApp={isSentryApp ? (model as SentryApp) : undefined}\n                />\n              )}\n              {isDefault && preview}\n            </AvatarGroup>\n            <AvatarUploadSection>\n              {allowGravatar && avatarType === 'gravatar' && (\n                <Well>\n                  {t('Gravatars are managed through ')}\n                  <ExternalLink href=\"http://gravatar.com\">Gravatar.com</ExternalLink>\n                </Well>\n              )}\n              {model.avatar && avatarType === 'upload' && (\n                <AvatarUploader\n                  {...this.props}\n                  type={type!}\n                  model={model}\n                  savedDataUrl={savedDataUrl}\n                  updateDataUrlState={dataState => this.setState(dataState)}\n                />\n              )}\n              <AvatarSubmit className=\"form-actions\">\n                {help && <AvatarHelp>{help}</AvatarHelp>}\n                <Button\n                  priority=\"primary\"\n                  onClick={this.handleSaveSettings}\n                  disabled={disabled || (avatarType === 'upload' && !dataUrl)}\n                >\n                  {t('Save Avatar')}\n                </Button>\n              </AvatarSubmit>\n            </AvatarUploadSection>\n          </AvatarForm>\n        </PanelBody>\n      </Panel>\n    );\n  }\n}\n\nconst AvatarHelp = styled('p')`\n  margin-right: auto;\n  color: ${p => p.theme.gray300};\n  font-size: 14px;\n  width: 50%;\n`;\n\nconst AvatarGroup = styled('div')<{inline: boolean}>`\n  display: flex;\n  flex-direction: ${p => (p.inline ? 'row' : 'column')};\n`;\n\nconst AvatarForm = styled('div')`\n  line-height: ${space(3)};\n  padding: ${space(1.5)} ${space(2)};\n  margin: ${space(1.5)} ${space(1)} ${space(0.5)};\n`;\n\nconst AvatarSubmit = styled('fieldset')`\n  display: flex;\n  align-items: center;\n  margin-top: ${space(4)};\n  padding-top: ${space(1.5)};\n`;\n\nconst AvatarUploadSection = styled('div')`\n  margin-top: ${space(1.5)};\n`;\n\nexport default withApi(AvatarChooser);\n","import {useCallback, useState} from 'react';\nimport styled from '@emotion/styled';\n\nimport FieldFromConfig from 'sentry/components/forms/fieldFromConfig';\nimport {Panel, PanelBody, PanelHeader} from 'sentry/components/panels';\nimport {IconChevron} from 'sentry/icons';\nimport {Scope} from 'sentry/types';\nimport {sanitizeQuerySelector} from 'sentry/utils/sanitizeQuerySelector';\n\nimport {FieldObject, JsonFormObject} from './types';\n\ntype Props = {\n  /**\n   * List of fields to render\n   */\n  fields: FieldObject[];\n  access?: Set<Scope>;\n  additionalFieldProps?: {[key: string]: any};\n  /**\n   * Can the PanelBody be hidden with a click?\n   */\n  collapsible?: boolean;\n  /**\n   * Disables the entire form\n   */\n  disabled?: boolean;\n  features?: Record<string, any>;\n  /**\n   * The name of the field that should be highlighted\n   */\n  highlighted?: string;\n  initiallyCollapsed?: boolean;\n  /**\n   * Renders inside of PanelBody before PanelBody close\n   */\n  renderFooter?: (arg: JsonFormObject) => React.ReactNode;\n  /**\n   * Renders inside of PanelBody at the start\n   */\n  renderHeader?: (arg: JsonFormObject) => React.ReactNode;\n  /**\n   * Panel title\n   */\n  title?: React.ReactNode;\n};\n\nfunction FormPanel({\n  additionalFieldProps = {},\n  title,\n  fields,\n  access,\n  disabled,\n  renderFooter,\n  renderHeader,\n  collapsible,\n  initiallyCollapsed = false,\n  ...otherProps\n}: Props) {\n  const [collapsed, setCollapse] = useState(initiallyCollapsed);\n  const handleCollapseToggle = useCallback(() => setCollapse(current => !current), []);\n\n  return (\n    <Panel id={typeof title === 'string' ? sanitizeQuerySelector(title) : undefined}>\n      {title && (\n        <PanelHeader>\n          {title}\n          {collapsible && (\n            <Collapse onClick={handleCollapseToggle}>\n              <IconChevron\n                data-test-id=\"form-panel-collapse-chevron\"\n                direction={collapsed ? 'down' : 'up'}\n                size=\"xs\"\n              />\n            </Collapse>\n          )}\n        </PanelHeader>\n      )}\n      <PanelBody hidden={collapsed}>\n        {typeof renderHeader === 'function' && renderHeader({title, fields})}\n\n        {fields.map(field => {\n          if (typeof field === 'function') {\n            return field();\n          }\n\n          const {defaultValue: _, ...fieldWithoutDefaultValue} = field;\n\n          // Allow the form panel disabled prop to override the fields\n          // disabled prop, with fallback to the fields disabled state.\n          if (disabled === true) {\n            fieldWithoutDefaultValue.disabled = true;\n            fieldWithoutDefaultValue.disabledReason = undefined;\n          }\n\n          return (\n            <FieldFromConfig\n              access={access}\n              disabled={disabled}\n              key={field.name}\n              {...otherProps}\n              {...additionalFieldProps}\n              field={fieldWithoutDefaultValue}\n              highlighted={otherProps.highlighted === `#${field.name}`}\n            />\n          );\n        })}\n        {typeof renderFooter === 'function' && renderFooter({title, fields})}\n      </PanelBody>\n    </Panel>\n  );\n}\n\nexport default FormPanel;\n\nconst Collapse = styled('span')`\n  cursor: pointer;\n`;\n","import {Component, Fragment} from 'react';\nimport {WithRouterProps} from 'react-router';\nimport * as Sentry from '@sentry/react';\nimport scrollToElement from 'scroll-to-element';\n\nimport {defined} from 'sentry/utils';\nimport {sanitizeQuerySelector} from 'sentry/utils/sanitizeQuerySelector';\n// eslint-disable-next-line no-restricted-imports\nimport withSentryRouter from 'sentry/utils/withSentryRouter';\n\nimport FormPanel from './formPanel';\nimport {Field, FieldObject, JsonFormObject} from './types';\n\ntype Props = {\n  additionalFieldProps?: {[key: string]: any};\n\n  /**\n   * If `forms` is not defined, `title` + `fields` must be required.\n   * Allows more fine grain control of title/fields\n   */\n  fields?: FieldObject[];\n\n  /**\n   * Fields that are grouped by \"section\"\n   */\n  forms?: JsonFormObject[];\n} & WithRouterProps &\n  Omit<\n    React.ComponentProps<typeof FormPanel>,\n    'highlighted' | 'fields' | 'additionalFieldProps'\n  >;\n\ntype State = {\n  // Field name that should be highlighted\n  highlighted?: string;\n};\n\nclass JsonForm extends Component<Props, State> {\n  state: State = {\n    // location.hash is optional because of tests.\n    highlighted: this.props.location?.hash,\n  };\n\n  componentDidMount() {\n    this.scrollToHash();\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (this.props.location && this.props.location.hash !== prevProps.location.hash) {\n      const hash = this.props.location.hash;\n      this.scrollToHash(hash);\n      this.setState({highlighted: hash});\n    }\n  }\n\n  scrollToHash(toHash?: string): void {\n    // location.hash is optional because of tests.\n    const hash = toHash || this.props.location?.hash;\n\n    if (!hash) {\n      return;\n    }\n\n    // Push onto callback queue so it runs after the DOM is updated,\n    // this is required when navigating from a different page so that\n    // the element is rendered on the page before trying to getElementById.\n    try {\n      scrollToElement(sanitizeQuerySelector(decodeURIComponent(hash)), {\n        align: 'middle',\n        offset: -100,\n      });\n    } catch (err) {\n      Sentry.captureException(err);\n    }\n  }\n\n  shouldDisplayForm(fields: FieldObject[]) {\n    const fieldsWithVisibleProp = fields.filter(\n      field => typeof field !== 'function' && defined(field?.visible)\n    ) as Array<Omit<Field, 'visible'> & Required<Pick<Field, 'visible'>>>;\n\n    if (fields.length === fieldsWithVisibleProp.length) {\n      const {additionalFieldProps, ...props} = this.props;\n\n      const areAllFieldsHidden = fieldsWithVisibleProp.every(field => {\n        if (typeof field.visible === 'function') {\n          return !field.visible({...props, ...additionalFieldProps});\n        }\n        return !field.visible;\n      });\n\n      return !areAllFieldsHidden;\n    }\n\n    return true;\n  }\n\n  renderForm({\n    fields,\n    formPanelProps,\n    title,\n  }: {\n    fields: FieldObject[];\n    formPanelProps: Pick<\n      Props,\n      | 'access'\n      | 'disabled'\n      | 'features'\n      | 'additionalFieldProps'\n      | 'renderFooter'\n      | 'renderHeader'\n    > &\n      Pick<State, 'highlighted'>;\n    title?: React.ReactNode;\n  }) {\n    const shouldDisplayForm = this.shouldDisplayForm(fields);\n\n    if (\n      !shouldDisplayForm &&\n      !formPanelProps?.renderFooter &&\n      !formPanelProps?.renderHeader\n    ) {\n      return null;\n    }\n\n    return <FormPanel title={title} fields={fields} {...formPanelProps} />;\n  }\n\n  render() {\n    const {\n      access,\n      collapsible,\n      initiallyCollapsed,\n      fields,\n      title,\n      forms,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      location: _location,\n      params: _params,\n      router: _router,\n      routes: _routes,\n      ...otherProps\n    } = this.props;\n\n    const formPanelProps = {\n      access,\n      disabled,\n      features,\n      additionalFieldProps,\n      renderFooter,\n      renderHeader,\n      highlighted: this.state.highlighted,\n      collapsible,\n      initiallyCollapsed,\n    };\n\n    return (\n      <div {...otherProps}>\n        {typeof forms !== 'undefined' &&\n          forms.map((formGroup, i) => (\n            <Fragment key={i}>{this.renderForm({formPanelProps, ...formGroup})}</Fragment>\n          ))}\n        {typeof forms === 'undefined' &&\n          typeof fields !== 'undefined' &&\n          this.renderForm({fields, formPanelProps, title})}\n      </div>\n    );\n  }\n}\n\nexport default withSentryRouter(JsonForm);\n"],"names":["_styled","target","p","theme","border","backgroundSecondary","hasImage","centered","MIN_DIMENSION","MAX_DIMENSION","getDiffNW","yDiff","xDiff","getDiffNE","getDiffSW","getDiffSE","resizerPositions","nw","ne","se","sw","AvatarUploader","Component","constructor","arguments","_defineProperty","file","objectURL","mousePosition","pageX","pageY","resizeDimensions","top","left","size","resizeDirection","createRef","ev","files","test","type","addErrorMessage","t","this","revokeObjectUrl","updateDataUrlState","props","window","URL","createObjectURL","setState","savedDataUrl","state","revokeObjectURL","error","validateImage","image","current","Math","min","clientHeight","clientWidth","drawToCanvas","cropContainer","preventDefault","document","addEventListener","updateDimensions","onMouseUp","removeEventListener","direction","stopPropagation","updateSize","stopResize","getNewDimensions","container","oldDimensions","diff","toUpperCase","height","width","editingTop","editingLeft","newDimensions","maxSize","click","componentWillUnmount","img","naturalWidth","naturalHeight","tct","canvas","ratio","getContext","drawImage","dataUrl","toDataURL","imageSrc","model","uuid","avatar","avatarUuid","photoUrl","AVATAR_URL_MAP","renderImageCrop","src","style","_jsx","ImageCropper","children","_jsxs","CropContainer","ref","onLoad","onImageLoad","onDragStart","e","Cropper","onMouseDown","Object","keys","map","pos","Resizer","position","startResize","bind","render","upload","onClick","uploadClick","uploader","Well","Fragment","HiddenCanvas","className","UploadInput","accept","onChange","onSelectFile","displayName","name","styles","background","gray300","AvatarChooser","hasError","endpoint","api","avatarType","avatarPhoto","split","data","avatar_type","avatar_photo","startsWith","color","request","method","success","resp","handleSuccess","getModelFromResponse","avatarPhotoErrors","responseJSON","length","handleError","id","componentDidUpdate","prevProps","undefined","isSentryApp","isColor","avatars","find","_ref","msg","onSave","addSuccessMessage","allowGravatar","allowUpload","allowLetter","isUser","disabled","title","help","defaultChoice","LoadingError","LoadingIndicator","allowDefault","preview","choiceText","defaultChoiceText","isLetter","isDefault","Boolean","isTeam","isOrganization","choices","push","Panel","PanelHeader","PanelBody","AvatarForm","AvatarGroup","inline","RadioGroup","flex","value","label","handleChange","Avatar","gravatar","user","organization","team","sentryApp","AvatarUploadSection","ExternalLink","href","dataState","AvatarSubmit","AvatarHelp","Button","priority","handleSaveSettings","space","withApi","FormPanel","additionalFieldProps","fields","access","renderFooter","renderHeader","collapsible","initiallyCollapsed","otherProps","collapsed","setCollapse","useState","handleCollapseToggle","useCallback","sanitizeQuerySelector","Collapse","IconChevron","hidden","field","defaultValue","_","fieldWithoutDefaultValue","disabledReason","FieldFromConfig","highlighted","JsonForm","location","hash","componentDidMount","scrollToHash","toHash","scrollToElement","decodeURIComponent","align","offset","err","Sentry","shouldDisplayForm","fieldsWithVisibleProp","filter","defined","visible","every","renderForm","formPanelProps","forms","features","_location","params","_params","router","_router","routes","_routes","formGroup","i","withSentryRouter"],"sourceRoot":""}