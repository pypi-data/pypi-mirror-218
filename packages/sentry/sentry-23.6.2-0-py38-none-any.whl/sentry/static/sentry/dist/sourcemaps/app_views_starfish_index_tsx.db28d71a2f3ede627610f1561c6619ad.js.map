{"version":3,"file":"chunks/app_views_starfish_index_tsx.xxxxxxxxxxxxxxxxxxxx.js","mappings":"uoBAkBA,MAAMA,EAAc,IAAIC,EAAAA,GAExB,SAASC,EAAiBC,GAAkC,IAAjC,aAACC,EAAY,SAAEC,GAAgBF,EACxD,MAAMG,GAAWC,EAAAA,EAAAA,KACXC,GAASC,EAAAA,EAAAA,MACT,KAACC,GAAQN,EACTO,EACK,WAATD,EAAoB,IAAe,WAATA,EAAoB,mBAAqB,KAUrE,OATAE,EAAAA,EAAAA,YAAU,KACJD,GAAaL,EAASO,MAAMC,UAAYH,GAC1CH,EAAOO,QAAQ,CACbC,SAAUV,EAASU,SACnBH,MAAO,IAAIP,EAASO,MAAOC,QAASH,IAExC,GACC,CAACL,EAASU,SAAUV,EAASO,MAAOF,EAAWH,KAGhDS,EAAAA,EAAAA,IAACC,EAAAA,EAAO,CACNC,SAAS,iCACTC,SAAU,CAAC,iBACXhB,aAAcA,EACdiB,eAAgBC,EAASjB,UAEzBY,EAAAA,EAAAA,IAACM,EAAAA,EAAgB,CAACnB,aAAcA,EAAaC,UAC3CY,EAAAA,EAAAA,IAACO,EAAAA,GAAmB,CAACC,OAAQzB,EAAYK,SAAEA,OAInD,CAEA,SAASiB,IACP,OACEL,EAAAA,EAAAA,IAACS,EAAAA,GAAW,CAACC,aAAW,EAAAtB,UACtBY,EAAAA,EAAAA,IAACW,EAAAA,GAAK,CAACC,KAAK,UAASxB,UAAEyB,EAAAA,EAAAA,GAAE,4CAG/B,CAnCS5B,EAAiB6B,YAAA,oBA6BjBT,EAAQS,YAAA,WAQjB,SAAeC,EAAAA,EAAAA,GAAiB9B,E","sources":["webpack:///./app/views/starfish/index.tsx"],"sourcesContent":["import {useEffect} from 'react';\n\nimport Feature from 'sentry/components/acl/feature';\nimport {Alert} from 'sentry/components/alert';\nimport * as Layout from 'sentry/components/layouts/thirds';\nimport NoProjectMessage from 'sentry/components/noProjectMessage';\nimport {t} from 'sentry/locale';\nimport {Organization} from 'sentry/types';\nimport {QueryClient, QueryClientProvider} from 'sentry/utils/queryClient';\nimport {useLocation} from 'sentry/utils/useLocation';\nimport useRouter from 'sentry/utils/useRouter';\nimport withOrganization from 'sentry/utils/withOrganization';\n\ntype Props = {\n  children: React.ReactChildren;\n  organization: Organization;\n};\n\nconst queryClient = new QueryClient();\n\nfunction StarfishContainer({organization, children}: Props) {\n  const location = useLocation();\n  const router = useRouter();\n  const {slug} = organization;\n  const projectId =\n    slug === 'sentry' ? '1' : slug === 'cramer' ? '4504120414765056' : null;\n  useEffect(() => {\n    if (projectId && location.query.project !== projectId) {\n      router.replace({\n        pathname: location.pathname,\n        query: {...location.query, project: projectId},\n      });\n    }\n  }, [location.pathname, location.query, projectId, router]);\n\n  return (\n    <Feature\n      hookName=\"feature-disabled:starfish-view\"\n      features={['starfish-view']}\n      organization={organization}\n      renderDisabled={NoAccess}\n    >\n      <NoProjectMessage organization={organization}>\n        <QueryClientProvider client={queryClient}>{children}</QueryClientProvider>\n      </NoProjectMessage>\n    </Feature>\n  );\n}\n\nfunction NoAccess() {\n  return (\n    <Layout.Page withPadding>\n      <Alert type=\"warning\">{t(\"You don't have access to this feature\")}</Alert>\n    </Layout.Page>\n  );\n}\n\nexport default withOrganization(StarfishContainer);\n"],"names":["queryClient","QueryClient","StarfishContainer","_ref","organization","children","location","useLocation","router","useRouter","slug","projectId","useEffect","query","project","replace","pathname","_jsx","Feature","hookName","features","renderDisabled","NoAccess","NoProjectMessage","QueryClientProvider","client","Layout","withPadding","Alert","type","t","displayName","withOrganization"],"sourceRoot":""}