[tool.poetry]
name = "open_gpt_torch"
version = "0.0.8"
description = "An open-source cloud-native of large multi-modal models (LMMs) serving framework."

license = "Apache-2.0"

authors = [
    "Jina AI <hello@jina.ai>"
]

repository = "https://github.com/jina-ai/opengpt"
homepage = "https://github.com/jina-ai/opengpt"

classifiers = [
    "Development Status :: 4 - Beta",
    "Intended Audience :: Developers",
    "Intended Audience :: Science/Research",
    "License :: OSI Approved :: Apache Software License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Mathematics",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
    "Topic :: Software Development",
    "Topic :: Software Development :: Libraries",
    "Topic :: Software Development :: Libraries :: Python Modules",
]
packages = [{ include = "open_gpt" }]
exclude = ["**/*.pyc", "**/*.pyi", "tests/**/*", "docs/**/*", "examples/**/*"]

# README file(s) are used as the package description
readme = ["README.md", "LICENSE"]

# Keywords (translated to tags on the package index)
keywords = ["Pytorch", "LMM", "GPT", "LLM", "multi-modality", "cloud-native", "model-serving", "model-inference", "llama", "vicuna", "stabellm"]

[build-system]
requires = ["poetry-core>=1.1.0"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.dependencies]
# Compatible Python versions
python = ">=3.8,<4.0"
jina = "^3.17.0"
docarray = "^0.21.0"
jcloud = "^0.2.11"
inference-client = "^0.0.4"
pydantic = "^1.10.0"
loguru = "^0.5"
cleo = "^2.0.0"
click = "^8.1.3"
Jinja2 = "^3.1.2"
numpy = "^1.21.2"
einops = "^0.6.0"
tensorboard = "<2.11.2"
transformers = "^4.30.1"
bitsandbytes = "^0.39.0"
accelerate = "^0.20.3"
tqdm = "^4.62.3"
peft = "^0.3.0"

# A list of all of the optional dependencies, some of which are included in the
# below `extras`. They can be opted into by apps.
psutil = { version = "^5.8.0", optional = true }
open-flamingo = { version = "^0.0.2", optional = true }
open_clip_torch = { version = "^2.20.0", optional = true }
gradio = { version = "^3.30.0", optional = true }
mdtex2html = { version = "^1.2.0", optional = true }
markdown2 = { version = "^2.4.0", optional = true }

[tool.poetry.extras]
flamingo = ["open-flamingo", "open_clip_torch"]
playground = ["gradio", "mdtex2html", "markdown2"]
profile = ["psutil"]


# Dependency groups are supported for organizing your dependencies
[tool.poetry.group.dev.dependencies]
ruff = "^0.0.262"
mypy = "^1.2.0"
pre-commit = ">=2.15.0"
pytest = "^7.1.2"
pytest-cov = "^3.0"
pytest-mock = ">=3.5"

[tool.pytest.ini_options]
# Ignore deprecation warnings
filterwarnings = [
    "ignore:Deprecated call to `pkg_resources.declare_namespace:DeprecationWarning"
]


# ...and can be installed only when explicitly requested
[tool.poetry.group.docs]
optional = true
[tool.poetry.group.docs.dependencies]
Sphinx = "^5.1.1"

# Python-style entrypoints and scripts are easily expressed
[tool.poetry.scripts]
opengpt = "open_gpt.cli.application:main"