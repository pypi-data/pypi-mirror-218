{"version":3,"file":"lib_index_js.861dea7bc7cb5f82903a.js","mappings":"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","sources":["webpack://jupyterlab_local_browser/./src/index.ts","webpack://jupyterlab_local_browser/./src/widget.tsx"],"sourcesContent":["import {\n  JupyterFrontEnd,\n  JupyterFrontEndPlugin,\n  ILayoutRestorer,\n} from '@jupyterlab/application';\nimport { ICommandPalette, WidgetTracker } from '@jupyterlab/apputils';\nimport { ILauncher } from '@jupyterlab/launcher';\nimport { IStateDB } from '@jupyterlab/statedb';\nimport { v4 as uuidv4 } from 'uuid';\n\nimport { LocalBrowserWidget } from './widget';\n\n/**\n * Initialization data for the jupyterlab_local_browser extension.\n */\nconst plugin: JupyterFrontEndPlugin<void> = {\n  id: 'jupyterlab_local_browser:plugin',\n  description: 'JupyterLab Local Browser',\n  requires: [ICommandPalette, ILauncher, ILayoutRestorer, IStateDB],\n  autoStart: true,\n  activate: (app: JupyterFrontEnd,\n    palette: ICommandPalette,\n    launcher: ILauncher,\n    restorer: ILayoutRestorer,\n    statedb: IStateDB\n  ) => {\n    // Add the command to open the local browser\n    const command = 'jupyterlab_local_browser:open';\n    app.commands.addCommand(command, {\n      label: (args: any) => (args['isPalette'] ? 'New Local Browser' : 'Local Browser'),\n      caption: 'Start a new Local Browser',\n      execute: (args: any) => {\n        // Create the widget\n        const uuid = args && args.uuid ? args.uuid : 'lb-' + uuidv4();\n        const widget = new LocalBrowserWidget({ uuid: uuid, statedb: statedb });\n\n        // Track the state of the widget for later restoration\n        tracker.add(widget);\n        app.shell.add(widget, 'main');\n        widget.content.update();\n\n        // Activate the widget\n        app.shell.activateById(widget.id);\n      }\n    });\n\n    // Add the command to the palette.\n    palette.addItem({ command, category: 'Local Browser' });\n\n    // Add the command to the launcher.\n    launcher.add({\n      command,\n      category: 'Notebook',\n      rank: 1,\n    });\n\n    // Track and restore the widget state\n    const tracker = new WidgetTracker<LocalBrowserWidget>({\n      namespace: 'local_browser'\n    });\n\n    restorer.restore(tracker, {\n      command,\n      name: obj => obj.node.id,\n      args: obj => {\n        return { uuid: obj.node.id };\n      }\n    });\n  }\n};\n\nexport default plugin;\n","import {\n  MainAreaWidget,\n  IFrame,\n  ReactWidget,\n  ToolbarButton,\n} from '@jupyterlab/apputils';\nimport { refreshIcon, HTMLSelect } from '@jupyterlab/ui-components';\nimport { IStateDB } from '@jupyterlab/statedb';\nimport { ServerConnection } from '@jupyterlab/services';\nimport { URLExt } from '@jupyterlab/coreutils';\nimport { Message } from '@lumino/messaging';\nimport React from 'react';\n\n/**\n * A widget providing a browser for local servers.\n */\nexport class LocalBrowserWidget extends MainAreaWidget<IFrame> {\n  constructor(options: LocalBrowserWidget.IOptions) {\n    super({\n      content: new IFrame({\n        sandbox: ['allow-same-origin', 'allow-scripts']\n      }),\n    });\n    this.id = options.uuid;\n    this.title.label = 'Local Browser';\n    this.title.closable = true;\n    this.content.addClass('lb-localBrowser');\n\n    this._portsWidget = new SelectWidget({\n      onChange: () => {\n        this.toolbarChanged();\n      },\n      value: '_placeholder'\n    });\n    this.toolbar.addItem('ports', this._portsWidget);\n\n    this._pathWidget = new PathWidget({\n      onChange: () => {\n        this.toolbarChanged();\n      },\n      value: ''\n    });\n    this.toolbar.addItem('path', this._pathWidget);\n\n    const reloadButton = new ToolbarButton({\n      icon: refreshIcon,\n      iconLabel: 'Reload',\n      onClick: () => {\n        this.toolbarChanged();\n      }\n    });\n    this.toolbar.addItem('reload', reloadButton);\n\n    this._statedb = options.statedb;\n\n    this._serverSettings = ServerConnection.makeSettings();\n    this.content.url = URLExt.join(\n      this._serverSettings.baseUrl,\n      'jupyterlab-local-browser',\n      'public',\n      'index.html'\n    );\n\n    options.statedb.fetch(options.uuid).then((data: any) => {\n      if (data) {\n        this._portsWidget.value = data.port;\n        this._pathWidget.value =\n          data.pathname.charAt(0) === '/'\n            ? data.pathname.substring(1)\n            : data.pathname;\n        const url =\n          '/' +\n          data.mode +\n          '/' +\n          data.port +\n          data.pathname +\n          data.search +\n          data.hash;\n        this.content.url = url;\n      }\n    });\n\n    this.content.node.children[0].addEventListener('load', this);\n\n    this._loadPortsInterval = setInterval(() => {\n      this._evtLoadPortsTimer();\n    }, 10000);\n    this._evtLoadPortsTimer();\n  }\n\n  public handleEvent(evt: Event): void {\n    if (evt.type === 'load') {\n      this._evtIFrameLoad();\n    } else {\n      console.log(evt);\n    }\n  }\n\n  public toolbarChanged(): void {\n    if (this._portsWidget.value === '_placeholder') {\n      this.content.url = URLExt.join(\n        this._serverSettings.baseUrl,\n        'jupyterlab-local-browser',\n        'public',\n        'index.html'\n      );\n    } else {\n      this.content.url =\n        '/proxy/' + this._portsWidget.value + '/' + this._pathWidget.value;\n    }\n  }\n\n  protected onCloseRequest(msg: Message): void {\n    this.content.node.children[0].removeEventListener('load', this);\n    clearInterval(this._loadPortsInterval);\n    super.onCloseRequest(msg);\n  }\n\n  private _evtIFrameLoad(): void {\n    const contentDocument = (this.content.node.children[0] as HTMLIFrameElement)\n      .contentDocument;\n    if (contentDocument) {\n      this.title.label = contentDocument.title;\n      const iFrameLocation = contentDocument.location;\n      if (\n        iFrameLocation.pathname.indexOf(\n          '/jupyterlab-local-browser/public/index.html'\n        ) >= 0\n      ) {\n        this._statedb.remove(this.id);\n      } else {\n        let pathname = iFrameLocation.pathname.substring(1);\n        const mode = pathname.substring(0, pathname.indexOf('/'));\n        pathname = pathname.substring(pathname.indexOf('/') + 1);\n        const port = pathname.substring(0, pathname.indexOf('/'));\n        pathname = pathname.substring(pathname.indexOf('/'));\n        this._statedb.save(this.id, {\n          mode: mode,\n          port: port,\n          pathname: pathname,\n          search: iFrameLocation.search,\n          hash: iFrameLocation.hash\n        });\n        this._pathWidget.value =\n          pathname.charAt(0) === '/' ? pathname.substring(1) : pathname;\n      }\n    }\n  }\n\n  private _evtLoadPortsTimer(): void {\n    const requestUrl = URLExt.join(\n      this._serverSettings.baseUrl,\n      'jupyterlab-local-browser',\n      'open-ports'\n    );\n\n    ServerConnection.makeRequest(requestUrl, {}, this._serverSettings).then(\n      response => {\n        response.json().then((data: [string, string][]) => {\n          const baseUrl = new URL(this._serverSettings.baseUrl);\n          const basePort = baseUrl.port;\n          const values = data\n            .map(([port, label]: [string, string]) => {\n              if (port !== basePort) {\n                return [port, label];\n              } else {\n                return null;\n              }\n            })\n            .filter(value => value !== null) as [string, string][];\n          values.splice(0, 0, ['_placeholder', 'Select a Port']);\n          this._portsWidget.values = values;\n        });\n      }\n    );\n  }\n\n  private _serverSettings: ServerConnection.ISettings;\n  private _loadPortsInterval = -1;\n  private _statedb: IStateDB;\n  private _portsWidget: SelectWidget;\n  private _pathWidget: PathWidget;\n}\n\nclass SelectWidget extends ReactWidget {\n  constructor(options: { onChange: () => void; value?: string }) {\n    super();\n\n    this._values = [];\n    this._value = options.value ? options.value : '';\n    this._onChange = options.onChange;\n  }\n\n  set values(value: [string, string][]) {\n    this._values = value;\n    this.update();\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  set value(value: string) {\n    this._value = value;\n    this.update();\n  }\n\n  onChange(evt: React.ChangeEvent<HTMLSelectElement>) {\n    this._value = evt.target.value;\n    this._onChange();\n    this.update();\n  }\n\n  render(): JSX.Element {\n    const values = [];\n    for (const [value, label] of this._values) {\n      values.push(\n        <option value={value} selected={value === this._value}>\n          {label}\n        </option>\n      );\n    }\n    return <HTMLSelect onChange={evt => this.onChange(evt)}>{values}</HTMLSelect>;\n  }\n\n  private _values: [string, string][];\n  private _value: string;\n  private _onChange: () => void;\n}\n\nclass PathWidget extends ReactWidget {\n  constructor(options: { onChange: () => void; value?: string }) {\n    super();\n\n    this._onChange = options.onChange;\n    this._value = options.value ? options.value : '';\n  }\n\n  get value(): string {\n    return this._value;\n  }\n\n  set value(value: string) {\n    this._value = value;\n    this.update();\n  }\n\n  onChange(evt: React.ChangeEvent<HTMLInputElement>) {\n    this._value = evt.target.value;\n    this._onChange();\n    this.update();\n  }\n\n  render(): JSX.Element {\n    return (\n      <input\n        type=\"text\"\n        value={this._value}\n        onChange={evt => this.onChange(evt)}\n      ></input>\n    );\n  }\n\n  private _value: string;\n  private _onChange: () => void;\n}\n\nexport namespace LocalBrowserWidget {\n  export interface IOptions {\n    uuid: string;\n    statedb: IStateDB;\n  }\n}\n"],"names":[],"sourceRoot":""}