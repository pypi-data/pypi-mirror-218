# coding: utf-8

"""
    Conekta API

    Conekta sdk  # noqa: E501

    The version of the OpenAPI document: 2.1.0
    Contact: engineering@conekta.com
    Generated by OpenAPI Generator (https://openapi-generator.tech)

    Do not edit the class manually.
"""


from __future__ import annotations
import pprint
import re  # noqa: F401
import json



from pydantic import BaseModel, Field, StrictStr, conint

class OrderDiscountLinesRequest(BaseModel):
    """
    List of discounts that apply to the order.
    """
    amount: conint(strict=True, ge=0) = Field(..., description="The amount to be deducted from the total sum of all payments, in cents.")
    code: StrictStr = Field(..., description="Discount code.")
    type: StrictStr = Field(..., description="It can be 'loyalty', 'campaign', 'coupon' o 'sign'")
    __properties = ["amount", "code", "type"]

    class Config:
        """Pydantic configuration"""
        allow_population_by_field_name = True
        validate_assignment = True

    def to_str(self) -> str:
        """Returns the string representation of the model using alias"""
        return pprint.pformat(self.dict(by_alias=True))

    def to_json(self) -> str:
        """Returns the JSON representation of the model using alias"""
        return json.dumps(self.to_dict())

    @classmethod
    def from_json(cls, json_str: str) -> OrderDiscountLinesRequest:
        """Create an instance of OrderDiscountLinesRequest from a JSON string"""
        return cls.from_dict(json.loads(json_str))

    def to_dict(self):
        """Returns the dictionary representation of the model using alias"""
        _dict = self.dict(by_alias=True,
                          exclude={
                          },
                          exclude_none=True)
        return _dict

    @classmethod
    def from_dict(cls, obj: dict) -> OrderDiscountLinesRequest:
        """Create an instance of OrderDiscountLinesRequest from a dict"""
        if obj is None:
            return None

        if not isinstance(obj, dict):
            return OrderDiscountLinesRequest.parse_obj(obj)

        _obj = OrderDiscountLinesRequest.parse_obj({
            "amount": obj.get("amount"),
            "code": obj.get("code"),
            "type": obj.get("type")
        })
        return _obj

