[build-system]
requires = ["hatchling", "hatch-fancy-pypi-readme"]
build-backend = "hatchling.build"

[project]
name = "aioarp"
dynamic = ["readme", "version"]
description = 'Aioarp is a ARP protocol implementation that provides synchronous and asynchronous interfaces and gives you complete control over how ARP packets are sent.'
requires-python = ">=3.7"
license = "MIT"
keywords = []
authors = [
  { name = "Karen Petrosyan", email = "kar.petrosyanpy@gmail.com" },
]
classifiers = [
  "Development Status :: 4 - Beta",
  "Programming Language :: Python",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: Implementation :: CPython",
  "Programming Language :: Python :: Implementation :: PyPy",
]
dependencies = [
  "anyio==3.6.2",
  "typing_extensions==4.6.3",
  "getmac==0.9.4"
]

[project.optional-dependencies]

cli = [
  "typer==0.9.0"
]

[project.scripts]
aioarp = "aioarp._cli:app"

[project.urls]
Source = "https://github.com/karosis88/aioarp"
Documentation = "https://karosis88.github.io/aioarp/"
Changelog = "https://github.com/karosis88/aioarp/blob/master/CHANGELOG.md"
Issues = "https://github.com/karosis88/aioarp/issues"

[tool.hatch.version]
path = "aioarp/__about__.py"

[tool.ruff]
select = ["E", "F", "I", "B", "PIE"]
ignore = ["B904", "B028", "F403"]
line-length = 120

[tool.ruff.isort]
combine-as-imports = true
lines-after-imports = 1
force-single-line = true

[tool.mypy]
ignore_missing_imports = true
strict = true
exclude = ["unasync.py", "_mock.py", "aioarp/_cli.py"]

[[tool.mypy.overrides]]
module = "tests.*"
disallow_untyped_defs = false
check_untyped_defs = true

[tool.coverage.report]

exclude_also = [
  '__repr__',
  'raise NotImplementedError()'
]

[tool.hatch.metadata.hooks.fancy-pypi-readme]
content-type = "text/markdown"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "README.md"

[[tool.hatch.metadata.hooks.fancy-pypi-readme.fragments]]
path = "CHANGELOG.md"