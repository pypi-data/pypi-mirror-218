[
  "tests/generators/test_attentiongenerator.py::test_cheap_chunker",
  "tests/generators/test_attentiongenerator.py::test_default_generator",
  "tests/generators/test_attentiongenerator.py::test_generate_accepts_kwargs",
  "tests/generators/test_batched_combinatorial.py::test_generate_accepts_kwargs",
  "tests/generators/test_batched_combinatorial.py::test_max_prompts_passed_correctly",
  "tests/generators/test_batched_combinatorial.py::test_multiple_batches",
  "tests/generators/test_batched_combinatorial.py::test_single_batch",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_all_generations[++]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_all_generations[::]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_all_generations[__]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_generate_variant_with_pipe_separator[++]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_generate_variant_with_pipe_separator[::]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_generate_variant_with_pipe_separator[__]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_generate_variant_with_separator[++]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_generate_variant_with_separator[::]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_generate_variant_with_separator[__]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_generate_with_wildcard[++]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_generate_with_wildcard[::]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_generate_with_wildcard[__]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_literal_template[++]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_literal_template[::]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_literal_template[__]",
  "tests/generators/test_combinatorial.py::TestCombinatorialGenerator::test_without_wildcard_manager",
  "tests/generators/test_combinatorial.py::test_generate_accepts_kwargs",
  "tests/generators/test_feelinglucky.py::test_default_generator",
  "tests/generators/test_feelinglucky.py::test_generate",
  "tests/generators/test_feelinglucky.py::test_generate_accepts_kwargs",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_all_combinations[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_all_combinations[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_all_combinations[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_choice[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_choice[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_choice[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_choice_prompt[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_choice_prompt[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_choice_prompt[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_deep_nested_wildcards[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_deep_nested_wildcards[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_deep_nested_wildcards[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_ignore_whitespace[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_ignore_whitespace[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_ignore_whitespace[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_invalid_syntax_throws_exception[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_invalid_syntax_throws_exception[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_invalid_syntax_throws_exception[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_limit_prompts[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_limit_prompts[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_limit_prompts[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_literal_prompt[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_literal_prompt[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_literal_prompt[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_nested_wildcards[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_nested_wildcards[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_nested_wildcards[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_permutations[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_permutations[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_permutations[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_prompt_block[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_prompt_block[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_prompt_block[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_prompt_block_multiple[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_prompt_block_multiple[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_prompt_block_multiple[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_random[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_random[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_random[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_random_sample[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_random_sample[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_random_sample[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_two_choice_prompt[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_two_choice_prompt[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_two_choice_prompt[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_weighted_choice[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_weighted_choice[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_weighted_choice[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_wildcard_with_choice[++]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_wildcard_with_choice[::]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_wildcard_with_choice[__]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_wildcards[++-False]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_wildcards[++-True]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_wildcards[::-False]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_wildcards[::-True]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_wildcards[__-False]",
  "tests/generators/test_jinja.py::TestJinjaGenerator::test_wildcards[__-True]",
  "tests/generators/test_magicprompt.py::TestMagicPrompt::test_default_generator",
  "tests/generators/test_magicprompt.py::test_cleanup_magic_prompt[Original - prompt]",
  "tests/generators/test_magicprompt.py::test_cleanup_magic_prompt[Original prompt]",
  "tests/generators/test_magicprompt.py::test_cleanup_magic_prompt[[Original|prompt]]",
  "tests/generators/test_magicprompt.py::test_cleanup_magic_prompt[{Original|prompt}]",
  "tests/generators/test_magicprompt.py::test_generate_passes_kwargs",
  "tests/generators/test_magicprompt.py::test_magic_prompt_blocklist",
  "tests/generators/test_random.py::TestRandomGenerator::test_cyclical_sampler_with_seeds[++]",
  "tests/generators/test_random.py::TestRandomGenerator::test_cyclical_sampler_with_seeds[::]",
  "tests/generators/test_random.py::TestRandomGenerator::test_cyclical_sampler_with_seeds[__]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_int_seed[++]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_int_seed[::]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_int_seed[__]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_one_seed[++]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_one_seed[::]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_one_seed[__]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_seeds_wrong_length[++]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_seeds_wrong_length[::]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_seeds_wrong_length[__]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_template_and_seeds[++]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_template_and_seeds[::]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_template_and_seeds[__]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_wildcard[++]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_wildcard[::]",
  "tests/generators/test_random.py::TestRandomGenerator::test_generate_with_wildcard[__]",
  "tests/generators/test_random.py::TestRandomGenerator::test_literal_template[++]",
  "tests/generators/test_random.py::TestRandomGenerator::test_literal_template[::]",
  "tests/generators/test_random.py::TestRandomGenerator::test_literal_template[__]",
  "tests/generators/test_random.py::TestRandomGenerator::test_without_wildcard_manager",
  "tests/generators/test_unlink_seed.py::test_unlink_seed_from_prompt[++-False]",
  "tests/generators/test_unlink_seed.py::test_unlink_seed_from_prompt[++-True]",
  "tests/generators/test_unlink_seed.py::test_unlink_seed_from_prompt[::-False]",
  "tests/generators/test_unlink_seed.py::test_unlink_seed_from_prompt[::-True]",
  "tests/generators/test_unlink_seed.py::test_unlink_seed_from_prompt[__-False]",
  "tests/generators/test_unlink_seed.py::test_unlink_seed_from_prompt[__-True]",
  "tests/parser/test_commands.py::TestLiteral::test_combine_literal_commands",
  "tests/parser/test_commands.py::TestLiteral::test_error_combining_incompatible_commands",
  "tests/parser/test_commands.py::TestLiteral::test_prompts",
  "tests/parser/test_commands.py::TestSequence::test_getitem",
  "tests/parser/test_commands.py::TestSequence::test_length",
  "tests/parser/test_commands.py::TestVariant::test_combinations",
  "tests/parser/test_commands.py::TestVariant::test_getitem",
  "tests/parser/test_commands.py::TestVariant::test_length",
  "tests/parser/test_commands.py::TestVariant::test_range",
  "tests/parser/test_commands.py::TestVariant::test_sampling_method",
  "tests/parser/test_commands.py::TestWildcard::test_init_with_str",
  "tests/parser/test_commands.py::TestWildcard::test_sampling_method",
  "tests/parser/test_parser.py::TestParser::test_a1111_special_syntax_intact[[cat:dog:0.25]]",
  "tests/parser/test_parser.py::TestParser::test_a1111_special_syntax_intact[[cat|dog]]",
  "tests/parser/test_parser.py::TestParser::test_alternative_braces[&-&-some literal string &A|B|__some/wildcard__&]",
  "tests/parser/test_parser.py::TestParser::test_alternative_braces[:-:-some literal string :A|B|__some/wildcard__:]",
  "tests/parser/test_parser.py::TestParser::test_alternative_braces[<->-some literal string <A|B|__some/wildcard__>]",
  "tests/parser/test_parser.py::TestParser::test_alternative_braces[<<:-:>>-some literal string <<:A|B|__some/wildcard__:>>]",
  "tests/parser/test_parser.py::TestParser::test_alternative_braces[[-]-some literal string [A|B|__some/wildcard__]]",
  "tests/parser/test_parser.py::TestParser::test_alternative_braces[_-_-some literal string _A|B|__some/wildcard___]",
  "tests/parser/test_parser.py::TestParser::test_alternative_wildcard_wrap[!!-some literal string {A|B|!!some/wildcard!!}]",
  "tests/parser/test_parser.py::TestParser::test_alternative_wildcard_wrap[&-some literal string {A|B|&some/wildcard&}]",
  "tests/parser/test_parser.py::TestParser::test_alternative_wildcard_wrap[**-some literal string {A|B|**some/wildcard**}]",
  "tests/parser/test_parser.py::TestParser::test_alternative_wildcard_wrap[..-some literal string {A|B|..some/wildcard..}]",
  "tests/parser/test_parser.py::TestParser::test_alternative_wildcard_wrap[@@-some literal string {A|B|@@some/wildcard@@}]",
  "tests/parser/test_parser.py::TestParser::test_alternative_wildcard_wrap[___-some literal string {A|B|___some/wildcard___}]",
  "tests/parser/test_parser.py::TestParser::test_alternative_wildcard_wrap[~~-some literal string {A|B|~~some/wildcard~~}]",
  "tests/parser/test_parser.py::TestParser::test_basic_variant",
  "tests/parser/test_parser.py::TestParser::test_comments",
  "tests/parser/test_parser.py::TestParser::test_deep_propagation[A literal sentence-1]",
  "tests/parser/test_parser.py::TestParser::test_deep_propagation[__wildcard__-1]",
  "tests/parser/test_parser.py::TestParser::test_deep_propagation[{A|B|C} {D|E|g}-10]",
  "tests/parser/test_parser.py::TestParser::test_deep_propagation[{RED|GREEN|BLUE}-4]",
  "tests/parser/test_parser.py::TestParser::test_literal_characters[I, love. punctuation]",
  "tests/parser/test_parser.py::TestParser::test_literal_characters[Test (high emphasis)]",
  "tests/parser/test_parser.py::TestParser::test_literal_characters[Test (high emphasis:0.4)]",
  "tests/parser/test_parser.py::TestParser::test_literal_characters[Test [low emphasis:0.4]]",
  "tests/parser/test_parser.py::TestParser::test_literal_characters[Test [low emphasis]]",
  "tests/parser/test_parser.py::TestParser::test_literal_characters[Test \\xe4nder\\u014d]",
  "tests/parser/test_parser.py::TestParser::test_literal_characters[Unmatched } bracket]",
  "tests/parser/test_parser.py::TestParser::test_literal_characters[good-bye world]",
  "tests/parser/test_parser.py::TestParser::test_literal_characters[good_bye world]",
  "tests/parser/test_parser.py::TestParser::test_literal_characters[hello world]",
  "tests/parser/test_parser.py::TestParser::test_range[{!1-2$$cat|dog|bird}-1-2]",
  "tests/parser/test_parser.py::TestParser::test_range[{-2$$cat|dog|bird}-1-2]",
  "tests/parser/test_parser.py::TestParser::test_range[{0-1$$a|b|c|d}-0-1]",
  "tests/parser/test_parser.py::TestParser::test_range[{1-2$$cat|dog|bird}-1-2]",
  "tests/parser/test_parser.py::TestParser::test_range[{1-3$$cat|dog|bird}-1-3]",
  "tests/parser/test_parser.py::TestParser::test_range[{2$$cat|dog|bird}-2-2]",
  "tests/parser/test_parser.py::TestParser::test_range[{~1-2$$cat|dog|bird}-1-2]",
  "tests/parser/test_parser.py::TestParser::test_sampling_method[!\\xe4nder-SamplingMethod.COMBINATORIAL-\\xe4nder]",
  "tests/parser/test_parser.py::TestParser::test_sampling_method[@\\xe4nder-SamplingMethod.CYCLICAL-\\xe4nder]",
  "tests/parser/test_parser.py::TestParser::test_sampling_method[colours-None-colours]",
  "tests/parser/test_parser.py::TestParser::test_sampling_method[~path/to/colours-SamplingMethod.RANDOM-path/to/colours]",
  "tests/parser/test_parser.py::TestParser::test_two_wildcards_adjacent",
  "tests/parser/test_parser.py::TestParser::test_variable_commands[False]",
  "tests/parser/test_parser.py::TestParser::test_variable_commands[True]",
  "tests/parser/test_parser.py::TestParser::test_variant_breaks_without_closing_bracket",
  "tests/parser/test_parser.py::TestParser::test_variant_delimiter",
  "tests/parser/test_parser.py::TestParser::test_variant_sequences",
  "tests/parser/test_parser.py::TestParser::test_variant_with_blank",
  "tests/parser/test_parser.py::TestParser::test_variant_with_different_characters",
  "tests/parser/test_parser.py::TestParser::test_variant_with_nested_variant",
  "tests/parser/test_parser.py::TestParser::test_variant_with_sampling_method[{!__test/colours__}-SamplingMethod.COMBINATORIAL]",
  "tests/parser/test_parser.py::TestParser::test_variant_with_sampling_method[{!red|green|blue}-SamplingMethod.COMBINATORIAL]",
  "tests/parser/test_parser.py::TestParser::test_variant_with_sampling_method[{@0.2::red|0.4::green|0.6::blue}-SamplingMethod.CYCLICAL]",
  "tests/parser/test_parser.py::TestParser::test_variant_with_sampling_method[{red|green|blue}-None]",
  "tests/parser/test_parser.py::TestParser::test_variant_with_sampling_method[{~0.2::red|0.4::green|0.6::blue}-SamplingMethod.RANDOM]",
  "tests/parser/test_parser.py::TestParser::test_variant_with_sampling_method[{~1-3$$ and $$red|green|blue}-SamplingMethod.RANDOM]",
  "tests/parser/test_parser.py::TestParser::test_variant_with_sampling_method[{~red|green|blue}-SamplingMethod.RANDOM]",
  "tests/parser/test_parser.py::TestParser::test_variant_with_weights[{0.2::cat|0.3::dog|0.4::bird} test-weights1]",
  "tests/parser/test_parser.py::TestParser::test_variant_with_weights[{1::cat|2::dog|3::bird} test-weights0]",
  "tests/parser/test_parser.py::TestParser::test_variant_with_weights[{1::cat|dog|3::bird} test-weights2]",
  "tests/parser/test_parser.py::TestParser::test_variant_with_wildcard",
  "tests/parser/test_parser.py::TestParser::test_variants_adjacent",
  "tests/parser/test_parser.py::TestParser::test_weight",
  "tests/parser/test_parser.py::TestParser::test_wildcard[\\xe4nder]",
  "tests/parser/test_parser.py::TestParser::test_wildcard[colours]",
  "tests/parser/test_parser.py::TestParser::test_wildcard[path/to/colours]",
  "tests/parser/test_parser.py::TestParser::test_wildcard_adjactent_to_literal",
  "tests/parser/test_parser.py::TestParser::test_wildcard_variable_shorthand[(animal=bear)-expected_vars1]",
  "tests/parser/test_parser.py::TestParser::test_wildcard_variable_shorthand[(animal=fox,color=red)-expected_vars2]",
  "tests/parser/test_parser.py::TestParser::test_wildcard_variable_shorthand[(color={A|B|C})-expected_vars3]",
  "tests/parser/test_parser.py::TestParser::test_wildcard_variable_shorthand[-expected_vars0]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_empty_collection[++]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_empty_collection[::]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_empty_collection[__]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_generators_created[++]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_generators_created[::]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_generators_created[__]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_generators_for_missing_command[++]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_generators_for_missing_command[::]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_generators_for_missing_command[__]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_generators_values[++]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_generators_values[::]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_generators_values[__]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_with_finite_sampling_method[++]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_with_finite_sampling_method[::]",
  "tests/samplers/test_command_collection.py::TestCommandCollection::test_with_finite_sampling_method[__]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_multiple_literals[combinatorial_sampling_context-++]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_multiple_literals[combinatorial_sampling_context-::]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_multiple_literals[combinatorial_sampling_context-__]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_multiple_literals[cyclical_sampling_context-++]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_multiple_literals[cyclical_sampling_context-::]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_multiple_literals[cyclical_sampling_context-__]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_multiple_literals[random_sampling_context-++]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_multiple_literals[random_sampling_context-::]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_multiple_literals[random_sampling_context-__]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_single_literal[combinatorial_sampling_context-++]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_single_literal[combinatorial_sampling_context-::]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_single_literal[combinatorial_sampling_context-__]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_single_literal[cyclical_sampling_context-++]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_single_literal[cyclical_sampling_context-::]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_single_literal[cyclical_sampling_context-__]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_single_literal[random_sampling_context-++]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_single_literal[random_sampling_context-::]",
  "tests/samplers/test_common.py::TestLiteralCommand::test_single_literal[random_sampling_context-__]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_custom_separator[combinatorial_sampling_context-++]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_custom_separator[combinatorial_sampling_context-::]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_custom_separator[combinatorial_sampling_context-__]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_custom_separator[cyclical_sampling_context-++]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_custom_separator[cyclical_sampling_context-::]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_custom_separator[cyclical_sampling_context-__]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_custom_separator[random_sampling_context-++]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_custom_separator[random_sampling_context-::]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_custom_separator[random_sampling_context-__]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_prompts[combinatorial_sampling_context-++]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_prompts[combinatorial_sampling_context-::]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_prompts[combinatorial_sampling_context-__]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_prompts[cyclical_sampling_context-++]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_prompts[cyclical_sampling_context-::]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_prompts[cyclical_sampling_context-__]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_prompts[random_sampling_context-++]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_prompts[random_sampling_context-::]",
  "tests/samplers/test_common.py::TestSequenceCommand::test_prompts[random_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariableCommands::test_immediate_literal_variable[++]",
  "tests/samplers/test_common.py::TestVariableCommands::test_immediate_literal_variable[::]",
  "tests/samplers/test_common.py::TestVariableCommands::test_immediate_literal_variable[__]",
  "tests/samplers/test_common.py::TestVariableCommands::test_immediate_variable_commands[++-False]",
  "tests/samplers/test_common.py::TestVariableCommands::test_immediate_variable_commands[++-True]",
  "tests/samplers/test_common.py::TestVariableCommands::test_immediate_variable_commands[::-False]",
  "tests/samplers/test_common.py::TestVariableCommands::test_immediate_variable_commands[::-True]",
  "tests/samplers/test_common.py::TestVariableCommands::test_immediate_variable_commands[__-False]",
  "tests/samplers/test_common.py::TestVariableCommands::test_immediate_variable_commands[__-True]",
  "tests/samplers/test_common.py::TestVariableCommands::test_unknown_variable[++]",
  "tests/samplers/test_common.py::TestVariableCommands::test_unknown_variable[::]",
  "tests/samplers/test_common.py::TestVariableCommands::test_unknown_variable[__]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands[combinatorial_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands[combinatorial_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands[combinatorial_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands[cyclical_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands[cyclical_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands[cyclical_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands[random_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands[random_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands[random_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands_default[combinatorial_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands_default[combinatorial_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands_default[combinatorial_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands_default[cyclical_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands_default[cyclical_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands_default[cyclical_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands_default[random_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands_default[random_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariableCommands::test_variable_commands_default[random_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_empty_variant[combinatorial_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_empty_variant[combinatorial_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_empty_variant[combinatorial_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_empty_variant[cyclical_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_empty_variant[cyclical_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_empty_variant[cyclical_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_empty_variant[random_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_empty_variant[random_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_empty_variant[random_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_multiple_variant[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_multiple_variant[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_multiple_variant[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_multiple_variant[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_multiple_variant[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_multiple_variant[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_multiple_variant[random_sampling_context-expected0-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_multiple_variant[random_sampling_context-expected0-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_multiple_variant[random_sampling_context-expected0-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_single_variant[combinatorial_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_single_variant[combinatorial_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_single_variant[combinatorial_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_single_variant[cyclical_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_single_variant[cyclical_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_single_variant[cyclical_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_single_variant[random_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_single_variant[random_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_single_variant[random_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_two_variants[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_two_variants[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_two_variants[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_two_variants[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_two_variants[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_two_variants[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_two_variants[random_sampling_context-expected0-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_two_variants[random_sampling_context-expected0-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_two_variants[random_sampling_context-expected0-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound[random_sampling_context-expected0-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound[random_sampling_context-expected0-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound[random_sampling_context-expected0-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound_and_sep[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound_and_sep[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound_and_sep[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound_and_sep[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound_and_sep[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound_and_sep[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound_and_sep[random_sampling_context-expected0-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound_and_sep[random_sampling_context-expected0-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_bound_and_sep[random_sampling_context-expected0-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_literal[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_literal[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_literal[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_literal[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_literal[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_literal[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_literal[random_sampling_context-expected0-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_literal[random_sampling_context-expected0-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_literal[random_sampling_context-expected0-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[++-combinatorial_sampling_context-wildcard_colours- and ]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[++-combinatorial_sampling_context-wildcard_colours-,]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[++-cyclical_sampling_context-wildcard_colours- and ]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[++-cyclical_sampling_context-wildcard_colours-,]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[++-random_sampling_context-shuffled_colours- and ]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[++-random_sampling_context-shuffled_colours-,]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[::-combinatorial_sampling_context-wildcard_colours- and ]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[::-combinatorial_sampling_context-wildcard_colours-,]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[::-cyclical_sampling_context-wildcard_colours- and ]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[::-cyclical_sampling_context-wildcard_colours-,]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[::-random_sampling_context-shuffled_colours- and ]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[::-random_sampling_context-shuffled_colours-,]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[__-combinatorial_sampling_context-wildcard_colours- and ]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[__-combinatorial_sampling_context-wildcard_colours-,]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[__-cyclical_sampling_context-wildcard_colours- and ]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[__-cyclical_sampling_context-wildcard_colours-,]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[__-random_sampling_context-shuffled_colours- and ]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard[__-random_sampling_context-shuffled_colours-,]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard_and_high_bounds[++-combinatorial_sampling_context-cold_colours]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard_and_high_bounds[++-cyclical_sampling_context-cold_colours]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard_and_high_bounds[++-random_sampling_context-shuffled_cold_colours]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard_and_high_bounds[::-combinatorial_sampling_context-cold_colours]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard_and_high_bounds[::-cyclical_sampling_context-cold_colours]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard_and_high_bounds[::-random_sampling_context-shuffled_cold_colours]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard_and_high_bounds[__-combinatorial_sampling_context-cold_colours]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard_and_high_bounds[__-cyclical_sampling_context-cold_colours]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_wildcard_and_high_bounds[__-random_sampling_context-shuffled_cold_colours]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_zero_bound[combinatorial_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_zero_bound[combinatorial_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_zero_bound[combinatorial_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_zero_bound[cyclical_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_zero_bound[cyclical_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_zero_bound[cyclical_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_zero_bound[random_sampling_context-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_zero_bound[random_sampling_context-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_variant_with_zero_bound[random_sampling_context-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_varied_prompt[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_varied_prompt[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_varied_prompt[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_varied_prompt[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_varied_prompt[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_varied_prompt[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_common.py::TestVariantCommand::test_varied_prompt[random_sampling_context-expected0-++]",
  "tests/samplers/test_common.py::TestVariantCommand::test_varied_prompt[random_sampling_context-expected0-::]",
  "tests/samplers/test_common.py::TestVariantCommand::test_varied_prompt[random_sampling_context-expected0-__]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_basic_wildcard[++-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_basic_wildcard[++-cyclical_sampling_context-wildcard_coloursx2]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_basic_wildcard[++-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_basic_wildcard[::-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_basic_wildcard[::-cyclical_sampling_context-wildcard_coloursx2]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_basic_wildcard[::-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_basic_wildcard[__-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_basic_wildcard[__-cyclical_sampling_context-wildcard_coloursx2]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_basic_wildcard[__-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_variant_nested_in_wildcard[combinatorial_sampling_context-expected1-++]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_variant_nested_in_wildcard[combinatorial_sampling_context-expected1-::]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_variant_nested_in_wildcard[combinatorial_sampling_context-expected1-__]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_variant_nested_in_wildcard[cyclical_sampling_context-expected0-++]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_variant_nested_in_wildcard[cyclical_sampling_context-expected0-::]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_variant_nested_in_wildcard[cyclical_sampling_context-expected0-__]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_nested_in_wildcard[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_nested_in_wildcard[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_nested_in_wildcard[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_nested_in_wildcard[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_nested_in_wildcard[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_nested_in_wildcard[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_nested_in_wildcard[random_sampling_context-expected0-++]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_nested_in_wildcard[random_sampling_context-expected0-::]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_nested_in_wildcard[random_sampling_context-expected0-__]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_literal[++-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_literal[++-cyclical_sampling_context-wildcard_coloursx2]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_literal[++-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_literal[::-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_literal[::-cyclical_sampling_context-wildcard_coloursx2]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_literal[::-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_literal[__-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_literal[__-cyclical_sampling_context-wildcard_coloursx2]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_literal[__-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_variant[++-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_variant[++-cyclical_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_variant[++-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_variant[::-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_variant[::-cyclical_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_variant[::-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_variant[__-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_variant[__-cyclical_sampling_context-wildcard_colours]",
  "tests/samplers/test_common.py::TestWildcardsCommand::test_wildcard_with_variant[__-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_combinatorial_nested_in_non_finite[++-SamplingMethod.CYCLICAL-A {red|blue|green|yellow|purple|black|white} {@ball|{!car|bike}}-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_combinatorial_nested_in_non_finite[++-SamplingMethod.RANDOM-A {red|blue|green|yellow|purple|black|white} {~ball|{!car|bike}}-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_combinatorial_nested_in_non_finite[::-SamplingMethod.CYCLICAL-A {red|blue|green|yellow|purple|black|white} {@ball|{!car|bike}}-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_combinatorial_nested_in_non_finite[::-SamplingMethod.RANDOM-A {red|blue|green|yellow|purple|black|white} {~ball|{!car|bike}}-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_combinatorial_nested_in_non_finite[__-SamplingMethod.CYCLICAL-A {red|blue|green|yellow|purple|black|white} {@ball|{!car|bike}}-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_combinatorial_nested_in_non_finite[__-SamplingMethod.RANDOM-A {red|blue|green|yellow|purple|black|white} {~ball|{!car|bike}}-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_first_position[++-A {@red|green} {ball|car}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_first_position[++-A {~red|green} {ball|car}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_first_position[::-A {@red|green} {ball|car}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_first_position[::-A {~red|green} {ball|car}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_first_position[__-A {@red|green} {ball|car}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_first_position[__-A {~red|green} {ball|car}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_last_position[++-A {red|green} {@ball|car}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_last_position[++-A {red|green} {~ball|car}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_last_position[::-A {red|green} {@ball|car}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_last_position[::-A {red|green} {~ball|car}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_last_position[__-A {red|green} {@ball|car}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_last_position[__-A {red|green} {~ball|car}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_multiple_variants[++-A {@red|green} {ball|car} {at night|in the morning}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_multiple_variants[++-A {~red|green} {ball|car} {at night|in the morning}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_multiple_variants[::-A {@red|green} {ball|car} {at night|in the morning}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_multiple_variants[::-A {~red|green} {ball|car} {at night|in the morning}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_multiple_variants[__-A {@red|green} {ball|car} {at night|in the morning}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_variants_multiple_variants[__-A {~red|green} {ball|car} {at night|in the morning}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_wildcards_last_position[++-{test1|test2} __@colors-cold__-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_wildcards_last_position[++-{test1|test2} __~colors-cold__-choice_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_wildcards_last_position[::-{test1|test2} __@colors-cold__-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_wildcards_last_position[::-{test1|test2} __~colors-cold__-choice_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_wildcards_last_position[__-{test1|test2} __@colors-cold__-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_mixed_non_finite_wildcards_last_position[__-{test1|test2} __~colors-cold__-choice_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_nested_cyclical_variants[++-A {red|{@green|blue}} {@ball|car}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_nested_cyclical_variants[++-A {red|{~green|blue}} {~ball|car}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_nested_cyclical_variants[::-A {red|{@green|blue}} {@ball|car}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_nested_cyclical_variants[::-A {red|{~green|blue}} {~ball|car}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_nested_cyclical_variants[__-A {red|{@green|blue}} {@ball|car}-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_nested_cyclical_variants[__-A {red|{~green|blue}} {~ball|car}-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_variants[++-A {@red|green} ball-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_variants[++-A {~red|green} ball-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_variants[::-A {@red|green} ball-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_variants[::-A {~red|green} ball-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_variants[__-A {@red|green} ball-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_variants[__-A {~red|green} ball-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_wildcards[++-test __@colors-cold__-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_wildcards[++-test __~colors-cold__-green-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_wildcards[::-test __@colors-cold__-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_wildcards[::-test __~colors-cold__-green-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_wildcards[__-test __@colors-cold__-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCombinatorialParent::test_non_finite_wildcards[__-test __~colors-cold__-green-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCyclicalParent::test_variants[++-A {!red|green} ball-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCyclicalParent::test_variants[++-A {~red|green} ball-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCyclicalParent::test_variants[::-A {!red|green} ball-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCyclicalParent::test_variants[::-A {~red|green} ball-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestCyclicalParent::test_variants[__-A {!red|green} ball-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestCyclicalParent::test_variants[__-A {~red|green} ball-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestRandomParent::test_variants[++-A {!red|green} ball-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestRandomParent::test_variants[++-A {@red|green} ball-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestRandomParent::test_variants[::-A {!red|green} ball-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestRandomParent::test_variants[::-A {@red|green} ball-None-expected0]",
  "tests/samplers/test_mixed_methods.py::TestRandomParent::test_variants[__-A {!red|green} ball-choices_side_effect1-expected1]",
  "tests/samplers/test_mixed_methods.py::TestRandomParent::test_variants[__-A {@red|green} ball-None-expected0]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants[random_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants[random_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants[random_sampling_context-expected0-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_range[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_range[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_range[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_range[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_range[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_range[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_range[random_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_range[random_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_range[random_sampling_context-expected0-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_with_separator[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_with_separator[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_with_separator[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_with_separator[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_with_separator[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_with_separator[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_with_separator[random_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_with_separator[random_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_combination_variants_with_separator[random_sampling_context-expected0-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_empty[combinatorial_sampling_context-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_empty[combinatorial_sampling_context-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_empty[combinatorial_sampling_context-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_empty[cyclical_sampling_context-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_empty[cyclical_sampling_context-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_empty[cyclical_sampling_context-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_empty[random_sampling_context-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_empty[random_sampling_context-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_empty[random_sampling_context-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literal_with_square_brackets[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literal_with_square_brackets[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literal_with_square_brackets[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literal_with_square_brackets[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literal_with_square_brackets[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literal_with_square_brackets[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literal_with_square_brackets[random_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literal_with_square_brackets[random_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literal_with_square_brackets[random_sampling_context-expected0-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literals[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literals[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literals[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literals[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literals[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literals[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literals[random_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literals[random_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_literals[random_sampling_context-expected0-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_missing_wildcard[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_missing_wildcard[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_missing_wildcard[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_missing_wildcard[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_missing_wildcard[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_missing_wildcard[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_missing_wildcard[random_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_missing_wildcard[random_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_missing_wildcard[random_sampling_context-expected0-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_variants[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_variants[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_variants[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_variants[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_variants[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_variants[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_variants[random_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_variants[random_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_variants[random_sampling_context-expected0-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard[++-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard[++-cyclical_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard[++-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard[::-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard[::-cyclical_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard[::-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard[__-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard[__-cyclical_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard[__-random_sampling_context-shuffled_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard_with_range_and_literal[++-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard_with_range_and_literal[++-cyclical_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard_with_range_and_literal[::-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard_with_range_and_literal[::-cyclical_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard_with_range_and_literal[__-combinatorial_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nested_wildcard_with_range_and_literal[__-cyclical_sampling_context-wildcard_colours]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nospace_before_or_after_wildcard[combinatorial_sampling_context-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nospace_before_or_after_wildcard[combinatorial_sampling_context-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nospace_before_or_after_wildcard[combinatorial_sampling_context-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nospace_before_or_after_wildcard[cyclical_sampling_context-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nospace_before_or_after_wildcard[cyclical_sampling_context-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nospace_before_or_after_wildcard[cyclical_sampling_context-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nospace_before_or_after_wildcard[random_sampling_context-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nospace_before_or_after_wildcard[random_sampling_context-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_nospace_before_or_after_wildcard[random_sampling_context-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_two_variants[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_two_variants[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_two_variants[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_two_variants[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_two_variants[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_two_variants[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_two_variants[random_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_two_variants[random_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_two_variants[random_sampling_context-expected0-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variant_with_blank[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variant_with_blank[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variant_with_blank[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variant_with_blank[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variant_with_blank[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variant_with_blank[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variant_with_blank[random_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variant_with_blank[random_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variant_with_blank[random_sampling_context-expected0-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants[random_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants[random_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants[random_sampling_context-expected0-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants_with_larger_bounds_than_choices[combinatorial_sampling_context-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants_with_larger_bounds_than_choices[combinatorial_sampling_context-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants_with_larger_bounds_than_choices[combinatorial_sampling_context-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants_with_larger_bounds_than_choices[cyclical_sampling_context-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants_with_larger_bounds_than_choices[cyclical_sampling_context-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants_with_larger_bounds_than_choices[cyclical_sampling_context-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants_with_larger_bounds_than_choices[random_sampling_context-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants_with_larger_bounds_than_choices[random_sampling_context-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_variants_with_larger_bounds_than_choices[random_sampling_context-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_weighted_variant[combinatorial_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_weighted_variant[combinatorial_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_weighted_variant[combinatorial_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_weighted_variant[cyclical_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_weighted_variant[cyclical_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_weighted_variant[cyclical_sampling_context-expected0-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_wildcards[combinatorial_sampling_context-expected2-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_wildcards[combinatorial_sampling_context-expected2-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_wildcards[combinatorial_sampling_context-expected2-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_wildcards[cyclical_sampling_context-expected1-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_wildcards[cyclical_sampling_context-expected1-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_wildcards[cyclical_sampling_context-expected1-__]",
  "tests/samplers/test_prompts.py::TestPrompts::test_wildcards[random_sampling_context-expected0-++]",
  "tests/samplers/test_prompts.py::TestPrompts::test_wildcards[random_sampling_context-expected0-::]",
  "tests/samplers/test_prompts.py::TestPrompts::test_wildcards[random_sampling_context-expected0-__]",
  "tests/samplers/test_utils.py::test_wildcard_to_variant[random_sampling_context-++]",
  "tests/samplers/test_utils.py::test_wildcard_to_variant[random_sampling_context-::]",
  "tests/samplers/test_utils.py::test_wildcard_to_variant[random_sampling_context-__]",
  "tests/test_sd_issues.py::test_dp_28",
  "tests/test_sd_issues.py::test_sd_212[++]",
  "tests/test_sd_issues.py::test_sd_212[::]",
  "tests/test_sd_issues.py::test_sd_212[__]",
  "tests/test_sd_issues.py::test_sd_223",
  "tests/test_sd_issues.py::test_sd_237[++]",
  "tests/test_sd_issues.py::test_sd_237[::]",
  "tests/test_sd_issues.py::test_sd_237[__]",
  "tests/test_sd_issues.py::test_sd_307[++]",
  "tests/test_sd_issues.py::test_sd_307[::]",
  "tests/test_sd_issues.py::test_sd_307[__]",
  "tests/test_sd_issues.py::test_sd_324",
  "tests/test_sd_issues.py::test_sd_358[++]",
  "tests/test_sd_issues.py::test_sd_358[::]",
  "tests/test_sd_issues.py::test_sd_358[__]",
  "tests/test_sd_issues.py::test_sd_377[++]",
  "tests/test_sd_issues.py::test_sd_377[::]",
  "tests/test_sd_issues.py::test_sd_377[__]",
  "tests/test_smoke.py::test_generator[++-case0-SamplingMethod.COMBINATORIAL]",
  "tests/test_smoke.py::test_generator[++-case0-SamplingMethod.RANDOM]",
  "tests/test_smoke.py::test_generator[++-case1-SamplingMethod.COMBINATORIAL]",
  "tests/test_smoke.py::test_generator[++-case1-SamplingMethod.RANDOM]",
  "tests/test_smoke.py::test_generator[::-case0-SamplingMethod.COMBINATORIAL]",
  "tests/test_smoke.py::test_generator[::-case0-SamplingMethod.RANDOM]",
  "tests/test_smoke.py::test_generator[::-case1-SamplingMethod.COMBINATORIAL]",
  "tests/test_smoke.py::test_generator[::-case1-SamplingMethod.RANDOM]",
  "tests/test_smoke.py::test_generator[__-case0-SamplingMethod.COMBINATORIAL]",
  "tests/test_smoke.py::test_generator[__-case0-SamplingMethod.RANDOM]",
  "tests/test_smoke.py::test_generator[__-case1-SamplingMethod.COMBINATORIAL]",
  "tests/test_smoke.py::test_generator[__-case1-SamplingMethod.RANDOM]",
  "tests/test_utils.py::test_dedupe",
  "tests/test_utils.py::test_remove_prefix",
  "tests/test_utils.py::test_remove_suffix",
  "tests/test_variable_features.py::test_discussion_61[++]",
  "tests/test_variable_features.py::test_discussion_61[::]",
  "tests/test_variable_features.py::test_discussion_61[__]",
  "tests/test_variable_features.py::test_discussion_61_shorthand[++]",
  "tests/test_variable_features.py::test_discussion_61_shorthand[::]",
  "tests/test_variable_features.py::test_discussion_61_shorthand[__]",
  "tests/wildcard/test_tree.py::test_synthetic_tree",
  "tests/wildcard/test_wildcardmanager.py::test_backslash_norm[++]",
  "tests/wildcard/test_wildcardmanager.py::test_backslash_norm[::]",
  "tests/wildcard/test_wildcardmanager.py::test_backslash_norm[__]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard[++-foo-foo]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard[++-foo/bar-foo/bar]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard[++-foo\\\\\\\\\\\\\\\\\\\\\\\\\\\\bar//-foo/bar]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard[::-foo-foo]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard[::-foo/bar-foo/bar]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard[::-foo\\\\\\\\\\\\\\\\\\\\\\\\\\\\bar//-foo/bar]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard[__-foo-foo]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard[__-foo/bar-foo/bar]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard[__-foo\\\\\\\\\\\\\\\\\\\\\\\\\\\\bar//-foo/bar]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard_invalid[++-foo/../bar]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard_invalid[::-foo/../bar]",
  "tests/wildcard/test_wildcardmanager.py::test_clean_wildcard_invalid[__-foo/../bar]",
  "tests/wildcard/test_wildcardmanager.py::test_directory_traversal[++]",
  "tests/wildcard/test_wildcardmanager.py::test_directory_traversal[::]",
  "tests/wildcard/test_wildcardmanager.py::test_directory_traversal[__]",
  "tests/wildcard/test_wildcardmanager.py::test_get_all_values[++]",
  "tests/wildcard/test_wildcardmanager.py::test_get_all_values[::]",
  "tests/wildcard/test_wildcardmanager.py::test_get_all_values[__]",
  "tests/wildcard/test_wildcardmanager.py::test_get_all_values_sorted_and_deduplicated[False-False-expected3]",
  "tests/wildcard/test_wildcardmanager.py::test_get_all_values_sorted_and_deduplicated[False-True-expected1]",
  "tests/wildcard/test_wildcardmanager.py::test_get_all_values_sorted_and_deduplicated[True-False-expected2]",
  "tests/wildcard/test_wildcardmanager.py::test_get_all_values_sorted_and_deduplicated[True-True-expected0]",
  "tests/wildcard/test_wildcardmanager.py::test_get_all_values_with_missing_wildcard[++]",
  "tests/wildcard/test_wildcardmanager.py::test_get_all_values_with_missing_wildcard[::]",
  "tests/wildcard/test_wildcardmanager.py::test_get_all_values_with_missing_wildcard[__]",
  "tests/wildcard/test_wildcardmanager.py::test_hierarchy[++]",
  "tests/wildcard/test_wildcardmanager.py::test_hierarchy[::]",
  "tests/wildcard/test_wildcardmanager.py::test_hierarchy[__]",
  "tests/wildcard/test_wildcardmanager.py::test_is_wildcard[++]",
  "tests/wildcard/test_wildcardmanager.py::test_is_wildcard[::]",
  "tests/wildcard/test_wildcardmanager.py::test_is_wildcard[__]",
  "tests/wildcard/test_wildcardmanager.py::test_match_files_with_missing_wildcard[++]",
  "tests/wildcard/test_wildcardmanager.py::test_match_files_with_missing_wildcard[::]",
  "tests/wildcard/test_wildcardmanager.py::test_match_files_with_missing_wildcard[__]",
  "tests/wildcard/test_wildcardmanager.py::test_pantry_expansion[++]",
  "tests/wildcard/test_wildcardmanager.py::test_pantry_expansion[::]",
  "tests/wildcard/test_wildcardmanager.py::test_pantry_expansion[__]",
  "tests/wildcard/test_wildcardmanager.py::test_path[++]",
  "tests/wildcard/test_wildcardmanager.py::test_path[::]",
  "tests/wildcard/test_wildcardmanager.py::test_path[__]",
  "tests/wildcard/test_wildcardmanager.py::test_pathless_wm",
  "tests/wildcard/test_wildcardmanager.py::test_read_write_is_idempotent[++]",
  "tests/wildcard/test_wildcardmanager.py::test_read_write_is_idempotent[::]",
  "tests/wildcard/test_wildcardmanager.py::test_read_write_is_idempotent[__]",
  "tests/wildcard/test_wildcardmanager.py::test_to_wildcard[++]",
  "tests/wildcard/test_wildcardmanager.py::test_to_wildcard[::]",
  "tests/wildcard/test_wildcardmanager.py::test_to_wildcard[__]",
  "tests/wildcard/test_wildcardmanager.py::test_wcm_roots",
  "tests/wildcard/test_wildcardmanager.py::test_wildcard_symlinks"
]